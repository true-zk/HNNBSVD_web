digraph "Control-flow graph for function 'function_30d3(a1, a2, a3, a4, a5, a6)'." {
  label="Control-flow graph for function 'function_30d3(a1, a2, a3, a4, a5, a6)'.";
  node [shape=record];

  Node0771A360 [label="{entry:\l  a1\l  a2\l  a3\l  a4\l  a5\l  a6\l}"];
  Node0771A360 -> Node0771A510;
  Node0771A510 [label="{0x30d3:\l  v1\l}"];
  Node0771A510 -> Node0771A7E0;
  Node0771A7E0 [label="{  if (TruncCastExpr\<int8\>(v1) != 0):\l}"];
  Node0771A7E0 -> Node0771A5A0 [label="TruncCastExpr\<int8\>(v1) != 0"];
  Node0771A7E0 -> Node0771A318 [label="TruncCastExpr\<int8\>(v1) == 0"];
  Node0771A5A0 [label="{0x30ef:\l  v2\l  __asm_movaps(v2)\l  v3\l  __asm_movaps(v3)\l  v4\l  __asm_movaps(v4)\l  v5\l  __asm_movaps(v5)\l  v6\l  __asm_movaps(v6)\l  v7\l  __asm_movaps(v7)\l  v8\l  __asm_movaps(v8)\l  v9\l  __asm_movaps(v9)\l}"];
  Node0771A5A0 -> Node0771A318;
  Node0771A318 [label="{  v10 = __readfsqword(40)\l  v11 = a3\l  v12\l  v13\l  v14\l  v15\l}"];
  Node0771A318 -> Node0771A438;
  Node0771A438 [label="{  if (v11 == 2):\l  else:\l}"];
  Node0771A438 -> Node0771A870 [label="v11 == 2"];
  Node0771A438 -> Node0771A990 [label="v11 != 2"];
  Node0771A870 [label="{  goto 0x31b1\l}"];
  Node0771A870 -> Node0771A3A8;
  Node0771A990 [label="{0x313b:\l  v12 = 32\l  v14 = 4\l  v13 = PtrToIntCastExpr\<int64\>(\"*** warning \")\l}"];
  Node0771A990 -> Node0771A3F0;
  Node0771A3A8 [label="{0x31b1:\l  result = (v10 - __readfsqword(40))\l}"];
  Node0771A3A8 -> Node0771A4C8;
  Node0771A3F0 [label="{  if (v11 == 5):\l  else:\l}"];
  Node0771A3F0 -> Node0771A1B0 [label="v11 == 5"];
  Node0771A3F0 -> Node0771ABD0 [label="v11 != 5"];
  Node0771A4C8 [label="{  if (result != 0):\l}"];
  Node0771A4C8 -> Node0771A8B8 [label="result != 0"];
  Node0771A4C8 -> Node0771A828 [label="result == 0"];
  Node0771A1B0 [label="{  goto 0x318a\l}"];
  Node0771A1B0 -> Node0771B170;
  Node0771ABD0 [label="{0x316a:\l  if (v11 \> 5):\l  else:\l}"];
  Node0771ABD0 -> Node0771AF30 [label="v11 \> 5"];
  Node0771ABD0 -> Node0771B200 [label="v11 \<= 5"];
  Node0771A8B8 [label="{0x3279:\l  return function_23e0()\l}"];
  Node0771A8B8 -> Node0771A2D0;
  Node0771A828 [label="{0x31c5:\l  return result\l}"];
  Node0771A828 -> Node0771A2D0;
  Node0771B170 [label="{0x318a:\l  function_2550(v14, 1, \"%s\", IntToPtrCastExpr\<ptr\>(v13))\l  function_2450(v14, 1, a4, &(v12))\l  goto 0x31b1\l}"];
  Node0771B170 -> Node0771A3A8;
  Node0771AF30 [label="{0x31d0:\l  v15 = NULL\l}"];
  Node0771AF30 -> Node0771AD38;
  Node0771B200 [label="{0x316c:\l  v15 = \"*** info \"\l}"];
  Node0771B200 -> Node0771ADC8;
  Node0771A2D0 [label="{exit:\l}"];
  Node0771AD38 [label="{  if (v11 == 6):\l}"];
  Node0771AD38 -> Node0771AFC0 [label="v11 == 6"];
  Node0771AD38 -> Node0771AE58 [label="v11 != 6"];
  Node0771ADC8 [label="{  if (v11 == 3):\l  else:\l}"];
  Node0771ADC8 -> Node0771AA20 [label="v11 == 3"];
  Node0771ADC8 -> Node0771AAB0 [label="v11 != 3"];
  Node0771AFC0 [label="{0x31d9:\l  function_2550(2, 1, \"%s\", \"O0o.oops(): \")\l  function_2450(2, 1, a4, &(v12))\l  function_2590(1)\l  v15 = \"*** info \"\l}"];
  Node0771AFC0 -> Node0771AE58;
  Node0771AE58 [label="{  goto 0x3227\l}"];
  Node0771AE58 -> Node0771AA68;
  Node0771AA20 [label="{  goto 0x3227\l}"];
  Node0771AA20 -> Node0771AA68;
  Node0771AAB0 [label="{0x3175:\l  v14 = 3\l  v13 = PtrToIntCastExpr\<int64\>(\"*** err \")\l  v15 = NULL\l}"];
  Node0771AAB0 -> Node0771AC18;
  Node0771AA68 [label="{0x3227:\l  function_2550(6, 1, \"%s\", v15)\l  function_2450(6, 1, a4, &(v12))\l  goto 0x31b1\l}"];
  Node0771AA68 -> Node0771A3A8;
  Node0771AC18 [label="{  if (v11 != 4):\l  else:\l}"];
  Node0771AC18 -> Node0771B248 [label="v11 != 4"];
  Node0771AC18 -> Node0771AAF8 [label="v11 == 4"];
  Node0771B248 [label="{  goto 0x3227\l}"];
  Node0771B248 -> Node0771AA68;
  Node0771AAF8 [label="{  goto 0x318a\l}"];
  Node0771AAF8 -> Node0771B170;

}
