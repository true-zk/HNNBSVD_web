digraph "Control-flow graph for function 'function_54e3(a1, a2)'." {
  label="Control-flow graph for function 'function_54e3(a1, a2)'.";
  node [shape=record];

  Node081A7658 [label="{entry:\l  a1\l  a2\l}"];
  Node081A7658 -> Node081A76A0;
  Node081A76A0 [label="{0x54e3:\l  v1\l  v2 = &(v1)\l  v3 = __readfsqword(40)\l  v4 = ((v2 - 129) & -16)\l  v5 = a2\l  v6 = PtrToIntCastExpr\<int64\>(\"system.posix_acl_default\")\l  result\l  v7\l}"];
  Node081A76A0 -> Node081A74A8;
  Node081A74A8 [label="{  if (v5 == 16384):\l  else:\l}"];
  Node081A74A8 -> Node081A72F8 [label="v5 == 16384"];
  Node081A74A8 -> Node081A7340 [label="v5 != 16384"];
  Node081A72F8 [label="{  goto 0x5597\l}"];
  Node081A72F8 -> Node081A7190;
  Node081A7340 [label="{0x5549:\l  v6 = PtrToIntCastExpr\<int64\>(\"system.posix_acl_access\")\l}"];
  Node081A7340 -> Node081A7778;
  Node081A7190 [label="{0x5597:\l  v10 = function_21d0(a1, v6, v4, 132)\l  v11 = ((4294967296 * v10) / 4294967296)\l  v12 = v10\l  v13 = 132\l  v14 = v4\l  v15 = v11\l  v16\l  v17\l  v18\l  v19\l  v20\l  v21\l}"];
  Node081A7190 -> Node081A7220;
  Node081A7778 [label="{  if (v5 == PtrToIntCastExpr\<int32\>(&(g5))):\l  else:\l}"];
  Node081A7778 -> Node081A7CD0 [label="v5 == PtrToIntCastExpr\<int32\>(&(g5))"];
  Node081A7778 -> Node081A7808 [label="v5 != PtrToIntCastExpr\<int32\>(&(g5))"];
  Node081A7220 [label="{  if (TruncCastExpr\<int32\>(v10) == -1):\l  else:\l}"];
  Node081A7220 -> Node081A7D18 [label="TruncCastExpr\<int32\>(v10) == -1"];
  Node081A7220 -> Node081A7B20 [label="TruncCastExpr\<int32\>(v10) != -1"];
  Node081A7CD0 [label="{  goto 0x5597\l}"];
  Node081A7CD0 -> Node081A7190;
  Node081A7808 [label="{0x5555:\l  v8\l  v9 = function_2200(a1, IntToPtrCastExpr\<ptr\>(a2), TruncCastExpr\<int32\>(v4), TruncCastExpr\<int32\>(v8), v7)\l  *(IntToPtrCastExpr\<ptr\>(v9)) = 22\l  result = 0\l  goto 0x5563\l}"];
  Node081A7808 -> Node081A7898;
  Node081A7D18 [label="{0x5618:\l  v22 = function_2200(a1, IntToPtrCastExpr\<ptr\>(v11), TruncCastExpr\<int32\>(v4), 132, v7)\l  result = 0\l  v18 = 132\l  v20 = v4\l}"];
  Node081A7D18 -> Node081A7970;
  Node081A7B20 [label="{  goto 0x55af\l}"];
  Node081A7B20 -> Node081A6F08;
  Node081A7898 [label="{0x5563:\l  if (v3 != __readfsqword(40)):\l}"];
  Node081A7898 -> Node081A7F10 [label="v3 != __readfsqword(40)"];
  Node081A7898 -> Node081A7A48 [label="v3 == __readfsqword(40)"];
  Node081A7970 [label="{  switch *(IntToPtrCastExpr\<ptr\>(v22)):\l  case 34:\l  case 61:\l  default:\l}"];
  Node081A7970 -> Node081A7850 [label="*(IntToPtrCastExpr\<ptr\>(v22)) == 34"];
  Node081A7970 -> Node081A79B8 [label="*(IntToPtrCastExpr\<ptr\>(v22)) == 61"];
  Node081A7970 -> Node081A7EC8 [label="(*(IntToPtrCastExpr\<ptr\>(v22)) != 34) and (*(IntToPtrCastExpr\<ptr\>(v22)) != 61)"];
  Node081A6F08 [label="{0x55af:\l  v34 = v15\l  result = v12\l  v16 = v34\l  v17 = v13\l  v19 = v14\l  v21 = v15\l}"];
  Node081A6F08 -> Node081A6F50;
  Node081A7F10 [label="{0x56ff:\l  return function_2290()\l}"];
  Node081A7F10 -> Node081A7A90;
  Node081A7A48 [label="{0x5576:\l  return result\l}"];
  Node081A7A48 -> Node081A7A90;
  Node081A7850 [label="{0x5670:\l  v23 = function_21d0(a1, v6, 0, 0)\l  v24 = v23\l}"];
  Node081A7850 -> Node081A7E38;
  Node081A79B8 [label="{  goto 0x55bb\l}"];
  Node081A79B8 -> Node081A74F0;
  Node081A7EC8 [label="{  goto 0x5563\l}"];
  Node081A7EC8 -> Node081A7898;
  Node081A6F50 [label="{  if ((v34 \>= 0) == (v34 != 0)):\l  else:\l}"];
  Node081A6F50 -> Node081A7AD8 [label="(v34 \>= 0) == (v34 != 0)"];
  Node081A6F50 -> Node081A76E8 [label="(v34 \>= 0) != (v34 != 0)"];
  Node081A7A90 [label="{exit:\l}"];
  Node081A7E38 [label="{  if (v24 \< 1):\l  else:\l}"];
  Node081A7E38 -> Node081A7FA0 [label="v24 \< 1"];
  Node081A7E38 -> Node081A8348 [label="v24 \>= 1"];
  Node081A74F0 [label="{0x55bb:\l  v35 = function_22d0(a1, &(v1))\l  result = 0\l}"];
  Node081A74F0 -> Node081A6FE0;
  Node081A7AD8 [label="{  goto 0x5563\l}"];
  Node081A7AD8 -> Node081A7898;
  Node081A76E8 [label="{  goto 0x55b7\l}"];
  Node081A76E8 -> Node081A7D60;
  Node081A7FA0 [label="{0x5670_2:\l  v16 = v24\l  v17 = 0\l  v19 = 0\l  v21 = (v23 & 4294967295)\l  goto 0x55b7\l}"];
  Node081A7FA0 -> Node081A7D60;
  Node081A8348 [label="{0x5689:\l  v25 = (v2 - 144)\l  v26 = ((4294967296 * v23) / 4294967296)\l  v27 = (v26 + 23)\l  v28 = (v27 & -4096)\l  v29 = v25\l}"];
  Node081A8348 -> Node081A8810;
  Node081A6FE0 [label="{  if (TruncCastExpr\<int32\>(v35) == 0):\l}"];
  Node081A6FE0 -> Node081A78E0 [label="TruncCastExpr\<int32\>(v35) == 0"];
  Node081A6FE0 -> Node081A72B0 [label="TruncCastExpr\<int32\>(v35) != 0"];
  Node081A7D60 [label="{0x55b7:\l  v18 = v17\l  v20 = v19\l}"];
  Node081A7D60 -> Node081A7BB0;
  Node081A8810 [label="{  if (v28 != 0):\l}"];
  Node081A8810 -> Node081A86F0 [label="v28 != 0"];
  Node081A8810 -> Node081A8660 [label="v28 == 0"];
  Node081A78E0 [label="{  v36\l}"];
  Node081A78E0 -> Node081A7928;
  Node081A72B0 [label="{  goto 0x5563\l}"];
  Node081A72B0 -> Node081A7898;
  Node081A7BB0 [label="{  if (v16 != 0):\l  else:\l}"];
  Node081A7BB0 -> Node081A8390 [label="v16 != 0"];
  Node081A7BB0 -> Node081A86A8 [label="v16 == 0"];
  Node081A86F0 [label="{  v30 = (v25 - PtrToIntCastExpr\<int64\>(&(g1)))\l  v31 = v30\l  v29 = v30\l}"];
  Node081A86F0 -> Node081A8300;
  Node081A8660 [label="{  v32 = (((15 - (v27 & (ExtCastExpr\<int64\>(PtrToIntCastExpr\<int32\>(&(g9))) & -16))) + v29) & -16)\l  v33 = function_21d0(a1, v6, v32, v26)\l  v12 = v33\l  v13 = v26\l  v14 = v32\l  v15 = ((4294967296 * v33) / 4294967296)\l  goto 0x55af\l}"];
  Node081A8660 -> Node081A6F08;
  Node081A7928 [label="{  if (v5 != 16384):\l  else:\l}"];
  Node081A7928 -> Node081A7BF8 [label="v5 != 16384"];
  Node081A7928 -> Node081A7C40 [label="v5 == 16384"];
  Node081A8390 [label="{0x5638:\l  v39 = function_2200(a1, IntToPtrCastExpr\<ptr\>(v21), TruncCastExpr\<int32\>(v19), TruncCastExpr\<int32\>(v17), v7)\l  result = 0\l  v18 = v17\l  v20 = v19\l}"];
  Node081A8390 -> Node081A8420;
  Node081A86A8 [label="{  goto 0x55bb\l}"];
  Node081A86A8 -> Node081A74F0;
  Node081A8300 [label="{  while (v30 != (v25 - v28)):\l}"];
  Node081A8300 -> Node081A8738 [label="v30 != (v25 - v28)"];
  Node081A8300 -> Node081A8660 [label="v30 == (v25 - v28)"];
  Node081A7BF8 [label="{0x5650:\l  result = acl_from_mode(v36)\l}"];
  Node081A7BF8 -> Node081A7A90;
  Node081A7C40 [label="{  v37 = (v36 & 61440)\l}"];
  Node081A7C40 -> Node081A7C88;
  Node081A8420 [label="{  if (*(IntToPtrCastExpr\<ptr\>(v39)) == 61):\l  else:\l}"];
  Node081A8420 -> Node081A8468 [label="*(IntToPtrCastExpr\<ptr\>(v39)) == 61"];
  Node081A8420 -> Node081A7F58 [label="*(IntToPtrCastExpr\<ptr\>(v39)) != 61"];
  Node081A8738 [label="{0x56a8:\l  v30 = (v31 - PtrToIntCastExpr\<int64\>(&(g1)))\l  v31 = v30\l  v29 = v30\l}"];
  Node081A8738 -> Node081A8300;
  Node081A7C88 [label="{  if (v37 == 16384):\l  else:\l}"];
  Node081A7C88 -> Node081A81E0 [label="v37 == 16384"];
  Node081A7C88 -> Node081A8228 [label="v37 != 16384"];
  Node081A8468 [label="{  goto 0x55bb\l}"];
  Node081A8468 -> Node081A74F0;
  Node081A7F58 [label="{  goto 0x5563\l}"];
  Node081A7F58 -> Node081A7898;
  Node081A81E0 [label="{0x56f0:\l  result = acl_init(0)\l}"];
  Node081A81E0 -> Node081A7A90;
  Node081A8228 [label="{  v38 = function_2200(ExtCastExpr\<int64\>(v37), BitCastExpr\<ptr\>(&(v1)), TruncCastExpr\<int32\>(v20), TruncCastExpr\<int32\>(v18), v7)\l  *(IntToPtrCastExpr\<ptr\>(v38)) = 13\l  result = 0\l}"];
  Node081A8228 -> Node081A7A90;

}
