digraph "Control-flow graph for function 'function_3923(a1)'." {
  label="Control-flow graph for function 'function_3923(a1)'.";
  node [shape=record];

  Node0796D2D0 [label="{entry:\l  a1\l}"];
  Node0796D2D0 -> Node0796D480;
  Node0796D480 [label="{  v1 = 0\l  v2\l  v3\l  v4\l  v5\l  v6\l  v7\l  v8\l}"];
  Node0796D480 -> Node0796CF28;
  Node0796CF28 [label="{  if (a1 == 0):\l  else:\l}"];
  Node0796CF28 -> Node0796D3A8 [label="a1 == 0"];
  Node0796CF28 -> Node0796D708 [label="a1 != 0"];
  Node0796D3A8 [label="{  goto 0x397c_2\l}"];
  Node0796D3A8 -> Node0796D288;
  Node0796D708 [label="{0x392a:\l  v8 = (a1 - 8)\l  v1 = v8\l}"];
  Node0796D708 -> Node0796D630;
  Node0796D288 [label="{0x397c_2:\l  v26 = function_2200(v1, IntToPtrCastExpr\<ptr\>(v6), TruncCastExpr\<int32\>(v5), TruncCastExpr\<int32\>(v4), v2)\l  *(IntToPtrCastExpr\<ptr\>(v26)) = 22\l  return 4294967295\l}"];
  Node0796D288 -> Node0796CE50;
  Node0796D630 [label="{  if (*(IntToPtrCastExpr\<ptr\>(v8)) != 28972):\l  else:\l}"];
  Node0796D630 -> Node0796D318 [label="*(IntToPtrCastExpr\<ptr\>(v8)) != 28972"];
  Node0796D630 -> Node0796CEE0 [label="*(IntToPtrCastExpr\<ptr\>(v8)) == 28972"];
  Node0796CE50 [label="{exit:\l}"];
  Node0796D318 [label="{  goto 0x397c_2\l}"];
  Node0796D318 -> Node0796D288;
  Node0796CEE0 [label="{0x393e:\l  v9 = *(IntToPtrCastExpr\<ptr\>((a1 + 8)))\l  v3 = 0\l}"];
  Node0796CEE0 -> Node0796CF70;
  Node0796CF70 [label="{  if (v9 == v8):\l  else:\l}"];
  Node0796CF70 -> Node0796CFB8 [label="v9 == v8"];
  Node0796CF70 -> Node0796D360 [label="v9 != v8"];
  Node0796CFB8 [label="{  goto 0x39b8\l}"];
  Node0796CFB8 -> Node0796DAB0;
  Node0796D360 [label="{0x395c:\l  v10 = *(IntToPtrCastExpr\<ptr\>((v9 + 32)))\l  v11 = v10\l  v4 = v11\l  v5 = v9\l  v1 = v8\l  v2 = 1\l}"];
  Node0796D360 -> Node0796D048;
  Node0796DAB0 [label="{0x39b8:\l  v27 = function_2750(v8, v7)\l}"];
  Node0796DAB0 -> Node0796DA20;
  Node0796D048 [label="{  if (v10 \< 33):\l  else:\l}"];
  Node0796D048 -> Node0796D870 [label="v10 \< 33"];
  Node0796D048 -> Node0796DCF0 [label="v10 \>= 33"];
  Node0796DA20 [label="{  if (v27 == 0):\l}"];
  Node0796DA20 -> Node0796DD80 [label="v27 == 0"];
  Node0796DA20 -> Node0796D750 [label="v27 != 0"];
  Node0796D870 [label="{  v12 = 0\l  v13 = 0\l  v14 = (1 \<\< (v11 % 64))\l  v15\l  v16\l}"];
  Node0796D870 -> Node0796D798;
  Node0796DCF0 [label="{  goto 0x397c_2\l}"];
  Node0796DCF0 -> Node0796D288;
  Node0796DD80 [label="{0x39d6:\l  return 4294967295\l}"];
  Node0796DD80 -> Node0796CE50;
  Node0796D750 [label="{0x39c5:\l  *(IntToPtrCastExpr\<ptr\>((v27 + 32))) = 16\l  function_2630(v27)\l  *(IntToPtrCastExpr\<ptr\>((v27 + 64))) = TruncCastExpr\<int32\>(v3)\l  return 0\l}"];
  Node0796D750 -> Node0796CE50;
  Node0796D798 [label="{  if ((v14 & 276) != 0):\l  else:\l}"];
  Node0796D798 -> Node0796DFC0 [label="(v14 & 276) != 0"];
  Node0796D798 -> Node0796DAF8 [label="(v14 & 276) == 0"];
  Node0796DFC0 [label="{0x3990:\l  v16 = ExtCastExpr\<int64\>((*(IntToPtrCastExpr\<ptr\>((v9 + 64))) \| TruncCastExpr\<int32\>(v12)))\l  v15 = v13\l}"];
  Node0796DFC0 -> Node0796E008;
  Node0796DAF8 [label="{0x3972:\l  v16 = v12\l  v15 = v13\l}"];
  Node0796DAF8 -> Node0796D9D8;
  Node0796E008 [label="{  v17 = v15\l  v18 = v16\l  v19 = *(IntToPtrCastExpr\<ptr\>((v9 + 16)))\l}"];
  Node0796E008 -> Node0796DA68;
  Node0796D9D8 [label="{  if ((v14 & 4294967298) == 0):\l}"];
  Node0796D9D8 -> Node0796DEE8 [label="(v14 & 4294967298) == 0"];
  Node0796D9D8 -> Node0796E008 [label="(v14 & 4294967298) != 0"];
  Node0796DA68 [label="{0x3964:\l  while (v19 != v8):\l}"];
  Node0796DA68 -> Node0796DBD0 [label="v19 != v8"];
  Node0796DA68 -> Node0796DC18 [label="v19 == v8"];
  Node0796DEE8 [label="{0x3977:\l  v4 = v11\l  v5 = v9\l  v6 = v14\l  v1 = v8\l  v2 = 1\l  v16 = v12\l  v15 = v9\l}"];
  Node0796DEE8 -> Node0796D7E0;
  Node0796DBD0 [label="{  v20 = *(IntToPtrCastExpr\<ptr\>((v19 + 32)))\l  v21 = v20\l  v22 = v20\l  v4 = v21\l  v5 = v19\l  v6 = v14\l  v1 = v8\l  v2 = 1\l}"];
  Node0796DBD0 -> Node0796D8B8;
  Node0796DC18 [label="{0x399c:\l  v3 = v18\l  v7 = v14\l}"];
  Node0796DC18 -> Node0796D990;
  Node0796D7E0 [label="{  if (v10 != 16):\l}"];
  Node0796D7E0 -> Node0796DDC8 [label="v10 != 16"];
  Node0796D7E0 -> Node0796E008;
  Node0796D8B8 [label="{  if (v20 \>= 33):\l}"];
  Node0796D8B8 -> Node0796DF30 [label="v20 \>= 33"];
  Node0796D8B8 -> Node0796DE58 [label="v20 \< 33"];
  Node0796D990 [label="{  if (v17 != 0):\l}"];
  Node0796D990 -> Node0796DEA0 [label="v17 != 0"];
  Node0796D990 -> Node0796D828 [label="v17 == 0"];
  Node0796DDC8 [label="{  goto 0x397c_2\l}"];
  Node0796DDC8 -> Node0796D288;
  Node0796DF30 [label="{  goto 0x397c_2\l}"];
  Node0796DF30 -> Node0796D288;
  Node0796DE58 [label="{  v23 = v19\l  v12 = v18\l  v13 = v17\l  v24 = v21\l  v14 = (1 \<\< (v24 % 64))\l}"];
  Node0796DE58 -> Node0796DC60;
  Node0796DEA0 [label="{0x39a1:\l  *(IntToPtrCastExpr\<ptr\>((v17 + 64))) = TruncCastExpr\<int32\>(v18)\l  return 0\l}"];
  Node0796DEA0 -> Node0796CE50;
  Node0796D828 [label="{  goto 0x39b8\l}"];
  Node0796D828 -> Node0796DAB0;
  Node0796DC60 [label="{  if ((v14 & 276) != 0):\l  else:\l}"];
  Node0796DC60 -> Node0796D900 [label="(v14 & 276) != 0"];
  Node0796DC60 -> Node0796DCA8 [label="(v14 & 276) == 0"];
  Node0796D900 [label="{  v25 = *(IntToPtrCastExpr\<ptr\>((v23 + 64)))\l  v16 = (v25 \| TruncCastExpr\<int32\>(v12))\l  v15 = v13\l}"];
  Node0796D900 -> Node0796DF78;
  Node0796DCA8 [label="{0x3972:\l  v16 = v12\l  v15 = v13\l}"];
  Node0796DCA8 -> Node0796DD38;
  Node0796DF78 [label="{0x3993:\l  v17 = v15\l  v18 = v16\l  v19 = *(IntToPtrCastExpr\<ptr\>((v23 + 16)))\l}"];
  Node0796DF78 -> Node0796DA68;
  Node0796DD38 [label="{  if ((v14 & 4294967298) == 0):\l}"];
  Node0796DD38 -> Node0796D948 [label="(v14 & 4294967298) == 0"];
  Node0796DD38 -> Node0796DF78 [label="(v14 & 4294967298) != 0"];
  Node0796D948 [label="{0x3977:\l  v4 = v24\l  v5 = v23\l  v6 = v14\l  v1 = v8\l  v2 = 1\l  v16 = v12\l  v15 = v23\l}"];
  Node0796D948 -> Node0796E878;
  Node0796E878 [label="{  if (v22 != 16):\l}"];
  Node0796E878 -> Node0796E8C0 [label="v22 != 16"];
  Node0796E878 -> Node0796DF78;
  Node0796E8C0 [label="{  goto 0x397c_2\l}"];
  Node0796E8C0 -> Node0796D288;

}
