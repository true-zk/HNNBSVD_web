digraph "Control-flow graph for function 'function_2dc0(result)'." {
  label="Control-flow graph for function 'function_2dc0(result)'.";
  node [shape=record];

  Node0796A300 [label="{entry:\l  result\l}"];
  Node0796A300 -> Node0796A348;
  Node0796A348 [label="{0x2dc0:\l  if (result == 0):\l}"];
  Node0796A348 -> Node0796A8E8 [label="result == 0"];
  Node0796A348 -> Node0796A390 [label="result != 0"];
  Node0796A8E8 [label="{0x2edc:\l  return 0\l}"];
  Node0796A8E8 -> Node0796A780;
  Node0796A390 [label="{  v1 = result\l  v2 = result\l  v3 = v1\l}"];
  Node0796A390 -> Node0796A810;
  Node0796A780 [label="{exit:\l}"];
  Node0796A810 [label="{  if (v1 == 0):\l}"];
  Node0796A810 -> Node0796A930 [label="v1 == 0"];
  Node0796A810 -> Node0796A4F8 [label="v1 != 0"];
  Node0796A930 [label="{0x2edc:\l  return result\l}"];
  Node0796A930 -> Node0796A780;
  Node0796A4F8 [label="{  v4 = 0\l  v5\l}"];
  Node0796A4F8 -> Node0796A5D0;
  Node0796A5D0 [label="{  while True:\l}"];
  Node0796A5D0 -> Node0796A9C0 [label="True"];
  Node0796A9C0 [label="{0x2df8:\l  v6 = v4\l  v7 = v3\l}"];
  Node0796A9C0 -> Node0796B158;
  Node0796B158 [label="{  if (v7 == 92):\l  else:\l}"];
  Node0796B158 -> Node0796B1A0 [label="v7 == 92"];
  Node0796B158 -> Node0796AE40 [label="v7 != 92"];
  Node0796B1A0 [label="{0x2e0b:\l  v5 = (v6 + 1)\l  goto 0x2e0f\l}"];
  Node0796B1A0 -> Node0796AE88;
  Node0796AE40 [label="{0x2dfe:\l  v5 = v6\l}"];
  Node0796AE40 -> Node0796B1E8;
  Node0796AE88 [label="{0x2e0f:\l  v8 = v5\l  v2 = (v2 + 1)\l  v30 = *(IntToPtrCastExpr\<ptr\>(v2))\l  v3 = v30\l  v4 = v8\l}"];
  Node0796AE88 -> Node0796ADF8;
  Node0796B1E8 [label="{  if (function_22a0(PtrToIntCastExpr\<int64\>(\":, \\t\\n\\r\"), v7) == 0):\l  else:\l}"];
  Node0796B1E8 -> Node0796AED0 [label="function_22a0(PtrToIntCastExpr\<int64\>(\":, \\t\\n\\r\"), v7) == 0"];
  Node0796B1E8 -> Node0796B0C8 [label="function_22a0(PtrToIntCastExpr\<int64\>(\":, \\t\\n\\r\"), v7) != 0"];
  Node0796ADF8 [label="{  if (v30 == 0):\l}"];
  Node0796ADF8 -> Node0796B308 [label="v30 == 0"];
  Node0796ADF8 -> Node0796AAE0 [label="v30 != 0"];
  Node0796AED0 [label="{  goto 0x2e0f\l}"];
  Node0796AED0 -> Node0796AE88;
  Node0796B0C8 [label="{0x2e0b:\l  v5 = (v6 + 1)\l  goto 0x2e0f\l}"];
  Node0796B0C8 -> Node0796AE88;
  Node0796B308 [label="{break -\> 0x2e1c:\l  goto 0x2e1c\l}"];
  Node0796B308 -> Node0796A6A8;
  Node0796AAE0 [label="{  goto 0x2df8\l}"];
  Node0796AAE0 -> Node0796A9C0;
  Node0796A6A8 [label="{0x2e1c:\l  v8\l}"];
  Node0796A6A8 -> Node0796A6F0;
  Node0796A6F0 [label="{  if (v8 == 0):\l}"];
  Node0796A6F0 -> Node0796AC48 [label="v8 == 0"];
  Node0796A6F0 -> Node0796A978 [label="v8 != 0"];
  Node0796AC48 [label="{0x2edc:\l  return result\l}"];
  Node0796AC48 -> Node0796A780;
  Node0796A978 [label="{  v9 = PtrToIntCastExpr\<int64\>(g8)\l  v10 = ((3 * v8) + (v2 - result))\l  v11 = v9\l}"];
  Node0796A978 -> Node0796A738;
  Node0796A738 [label="{  if ((v10 + 1) \> g7):\l}"];
  Node0796A738 -> Node0796AD68 [label="(v10 + 1) \> g7"];
  Node0796A738 -> Node0796A7C8 [label="(v10 + 1) \<= g7"];
  Node0796AD68 [label="{  v12 = ((v10 + 256) & -256)\l  v13 = function_2330(v9, v12)\l}"];
  Node0796AD68 -> Node0796B278;
  Node0796A7C8 [label="{  v14 = v1\l  v15 = result\l  v16 = v11\l  v17\l  v18\l  v19\l  v20\l  v21\l}"];
  Node0796A7C8 -> Node0796A858;
  Node0796B278 [label="{  if (v13 == 0):\l}"];
  Node0796B278 -> Node0796AF60 [label="v13 == 0"];
  Node0796B278 -> Node0796B2C0 [label="v13 != 0"];
  Node0796A858 [label="{  while True:\l}"];
  Node0796A858 -> Node0796B110 [label="True"];
  Node0796AF60 [label="{0x2edc:\l  return 0\l}"];
  Node0796AF60 -> Node0796A780;
  Node0796B2C0 [label="{0x2f1c:\l  g8 = IntToPtrCastExpr\<ptr\>(v13)\l  g7 = v12\l  v11 = v13\l}"];
  Node0796B2C0 -> Node0796A7C8;
  Node0796B110 [label="{0x2ea0_2:\l  v22 = v16\l  v18 = v15\l  v23 = v14\l}"];
  Node0796B110 -> Node0796B038;
  Node0796B038 [label="{  if (function_22a0(PtrToIntCastExpr\<int64\>(\":, \\t\\n\\r\"), v23) != 0):\l  else:\l}"];
  Node0796B038 -> Node0796AD20 [label="function_22a0(PtrToIntCastExpr\<int64\>(\":, \\t\\n\\r\"), v23) != 0"];
  Node0796B038 -> Node0796B230 [label="function_22a0(PtrToIntCastExpr\<int64\>(\":, \\t\\n\\r\"), v23) == 0"];
  Node0796AD20 [label="{0x2e58:\l  *(IntToPtrCastExpr\<ptr\>(v22)) = 92\l  v24 = IntToPtrCastExpr\<ptr\>(v18)\l  *(IntToPtrCastExpr\<ptr\>((v22 + 1))) = ((*(v24) / 64) \| 48)\l  *(IntToPtrCastExpr\<ptr\>((v22 + 2))) = (((*(v24) / 8) % 8) \| 48)\l  *(IntToPtrCastExpr\<ptr\>((v22 + 3))) = ((*(v24) % 8) \| 48)\l  v19 = (v22 + 4)\l  goto 0x2e91\l}"];
  Node0796AD20 -> Node0796AC00;
  Node0796B230 [label="{0x2eb1:\l  if (v23 == 92):\l  else:\l}"];
  Node0796B230 -> Node0796AF18 [label="v23 == 92"];
  Node0796B230 -> Node0796ACD8 [label="v23 != 92"];
  Node0796AC00 [label="{0x2e91:\l  v28 = (v18 + 1)\l  v29 = *(IntToPtrCastExpr\<ptr\>(v28))\l  v21 = v29\l  v17 = v28\l  v20 = v19\l  v27 = v19\l}"];
  Node0796AC00 -> Node0796ADB0;
  Node0796AF18 [label="{0x2ee8:\l  *(IntToPtrCastExpr\<ptr\>(v22)) = 23644\l  v19 = (v22 + 2)\l  goto 0x2e91\l}"];
  Node0796AF18 -> Node0796AC00;
  Node0796ACD8 [label="{0x2eb7:\l  v25 = (v18 + 1)\l  *(IntToPtrCastExpr\<ptr\>(v22)) = v23\l  v26 = *(IntToPtrCastExpr\<ptr\>(v25))\l  v21 = v26\l  v17 = v25\l  v20 = (v22 + 1)\l}"];
  Node0796ACD8 -> Node0796B080;
  Node0796ADB0 [label="{  if (v29 == 0):\l}"];
  Node0796ADB0 -> Node0796AA50 [label="v29 == 0"];
  Node0796ADB0 -> Node0796AC90 [label="v29 != 0"];
  Node0796B080 [label="{  if (v26 == 0):\l}"];
  Node0796B080 -> Node0796AFA8 [label="v26 != 0"];
  Node0796AA50 [label="{break -\> 0x2ed0:\l  goto 0x2ed0\l}"];
  Node0796AA50 -> Node0796A8A0;
  Node0796AC90 [label="{  goto 0x2ea0\l}"];
  Node0796AC90 -> Node0796AA98;
  Node0796AFA8 [label="{  goto 0x2ea0\l}"];
  Node0796AFA8 -> Node0796AA98;
  Node0796A8A0 [label="{0x2ed0:\l  v27\l  *(IntToPtrCastExpr\<ptr\>(v27)) = 0\l  return PtrToIntCastExpr\<int64\>(g8)\l}"];
  Node0796A8A0 -> Node0796A780;
  Node0796AA98 [label="{0x2ea0:\l  v14 = v21\l  v15 = v17\l  v16 = v20\l  goto 0x2ea0_2\l}"];
  Node0796AA98 -> Node0796B110;
  Node0796AA98 -> Node0796AE88;

}
