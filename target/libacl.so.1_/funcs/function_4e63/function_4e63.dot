digraph "Control-flow graph for function 'function_4e63(a1, a2)'." {
  label="Control-flow graph for function 'function_4e63(a1, a2)'.";
  node [shape=record];

  Node081A3368 [label="{entry:\l  a1\l  a2\l}"];
  Node081A3368 -> Node081A3CF8;
  Node081A3CF8 [label="{0x4e63:\l  v1\l}"];
  Node081A3CF8 -> Node081A3C68;
  Node081A3C68 [label="{  if (a1 == 0):\l  else:\l}"];
  Node081A3C68 -> Node081A3950 [label="a1 == 0"];
  Node081A3C68 -> Node081A3998 [label="a1 != 0"];
  Node081A3950 [label="{  goto 0x4ef0\l}"];
  Node081A3950 -> Node081A3E60;
  Node081A3998 [label="{0x4e71:\l  v2 = (a1 - 8)\l}"];
  Node081A3998 -> Node081A3758;
  Node081A3E60 [label="{0x4ef0:\l  v8\l  v9\l  v10\l  v11 = function_2200(a1, IntToPtrCastExpr\<ptr\>(a2), TruncCastExpr\<int32\>(v9), TruncCastExpr\<int32\>(v10), v8)\l  *(IntToPtrCastExpr\<ptr\>(v11)) = 22\l  v1 = 0\l}"];
  Node081A3E60 -> Node081A2F78;
  Node081A3758 [label="{  if (*(IntToPtrCastExpr\<ptr\>(v2)) != 28972):\l  else:\l}"];
  Node081A3758 -> Node081A3B00 [label="*(IntToPtrCastExpr\<ptr\>(v2)) != 28972"];
  Node081A3758 -> Node081A3EF0 [label="*(IntToPtrCastExpr\<ptr\>(v2)) == 28972"];
  Node081A2F78 [label="{  if (a2 != 0):\l}"];
  Node081A2F78 -> Node081A3D88 [label="a2 != 0"];
  Node081A2F78 -> Node081A3908 [label="a2 == 0"];
  Node081A3B00 [label="{  goto 0x4ef0\l}"];
  Node081A3B00 -> Node081A3E60;
  Node081A3EF0 [label="{0x4e79:\l  v1 = v2\l}"];
  Node081A3EF0 -> Node081A3F80;
  Node081A3D88 [label="{0x4f00:\l  v1 = a2\l}"];
  Node081A3D88 -> Node081A3EA8;
  Node081A3908 [label="{  goto 0x4f08\l}"];
  Node081A3908 -> Node081A4010;
  Node081A3F80 [label="{  if (a2 != 0):\l}"];
  Node081A3F80 -> Node081A3830 [label="a2 != 0"];
  Node081A3F80 -> Node081A3FC8 [label="a2 == 0"];
  Node081A3EA8 [label="{  if (*(IntToPtrCastExpr\<ptr\>((a2 - 8))) == 28972):\l}"];
  Node081A3EA8 -> Node081A3BD8 [label="*(IntToPtrCastExpr\<ptr\>((a2 - 8))) == 28972"];
  Node081A3EA8 -> Node081A3908 [label="*(IntToPtrCastExpr\<ptr\>((a2 - 8))) != 28972"];
  Node081A4010 [label="{0x4f08:\l  v12 = function_2200(a1, IntToPtrCastExpr\<ptr\>(v1), TruncCastExpr\<int32\>(v9), TruncCastExpr\<int32\>(v10), v8)\l  *(IntToPtrCastExpr\<ptr\>(v12)) = 22\l  return 4294967295\l}"];
  Node081A4010 -> Node081A3F38;
  Node081A3830 [label="{0x4e86:\l  v1 = v2\l}"];
  Node081A3830 -> Node081A3878;
  Node081A3FC8 [label="{  goto 0x4f08\l}"];
  Node081A3FC8 -> Node081A4010;
  Node081A3BD8 [label="{0x4ee5:\l  return 4294967295\l}"];
  Node081A3BD8 -> Node081A3F38;
  Node081A3F38 [label="{exit:\l}"];
  Node081A3878 [label="{  if (*(IntToPtrCastExpr\<ptr\>((a2 - 8))) == 28972):\l}"];
  Node081A3878 -> Node081A3CB0 [label="*(IntToPtrCastExpr\<ptr\>((a2 - 8))) == 28972"];
  Node081A3878 -> Node081A3FC8 [label="*(IntToPtrCastExpr\<ptr\>((a2 - 8))) != 28972"];
  Node081A3CB0 [label="{0x4e8e:\l  if (*(IntToPtrCastExpr\<ptr\>((a1 + 40))) != *(IntToPtrCastExpr\<ptr\>((a2 + 40)))):\l}"];
  Node081A3CB0 -> Node081A4520 [label="*(IntToPtrCastExpr\<ptr\>((a1 + 40))) != *(IntToPtrCastExpr\<ptr\>((a2 + 40)))"];
  Node081A3CB0 -> Node081A3A28 [label="*(IntToPtrCastExpr\<ptr\>((a1 + 40))) == *(IntToPtrCastExpr\<ptr\>((a2 + 40)))"];
  Node081A4520 [label="{0x4ee5:\l  return 1\l}"];
  Node081A4520 -> Node081A3F38;
  Node081A3A28 [label="{  v3 = *(IntToPtrCastExpr\<ptr\>((a1 + 8)))\l}"];
  Node081A3A28 -> Node081A3E18;
  Node081A3E18 [label="{  if (v3 == v2):\l}"];
  Node081A3E18 -> Node081A40E8 [label="v3 == v2"];
  Node081A3E18 -> Node081A3A70 [label="v3 != v2"];
  Node081A40E8 [label="{0x4ee5:\l  return 0\l}"];
  Node081A40E8 -> Node081A3F38;
  Node081A3A70 [label="{  v4 = v3\l  v5 = *(IntToPtrCastExpr\<ptr\>((a2 + 8)))\l  v6 = *(IntToPtrCastExpr\<ptr\>((v4 + 32)))\l  result = 1\l}"];
  Node081A3A70 -> Node081A3AB8;
  Node081A3AB8 [label="{  while (v6 == *(IntToPtrCastExpr\<ptr\>((v5 + 32)))):\l}"];
  Node081A3AB8 -> Node081A44D8 [label="v6 == *(IntToPtrCastExpr\<ptr\>((v5 + 32)))"];
  Node081A3AB8 -> Node081A4130 [label="v6 != *(IntToPtrCastExpr\<ptr\>((v5 + 32)))"];
  Node081A44D8 [label="{0x4ec5:\l  result = 1\l}"];
  Node081A44D8 -> Node081A46D0;
  Node081A4130 [label="{0x4ee5:\l  return result\l}"];
  Node081A4130 -> Node081A3F38;
  Node081A46D0 [label="{  if (*(IntToPtrCastExpr\<ptr\>((v4 + 64))) != *(IntToPtrCastExpr\<ptr\>((v5 + 64)))):\l}"];
  Node081A46D0 -> Node081A45F8 [label="*(IntToPtrCastExpr\<ptr\>((v4 + 64))) != *(IntToPtrCastExpr\<ptr\>((v5 + 64)))"];
  Node081A46D0 -> Node081A4880 [label="*(IntToPtrCastExpr\<ptr\>((v4 + 64))) == *(IntToPtrCastExpr\<ptr\>((v5 + 64)))"];
  Node081A45F8 [label="{break -\> 0x4ee5:\l  break\l}"];
  Node081A45F8 -> Node081A4130;
  Node081A4880 [label="{  if ((v6 != 2) != (v6 != 8)):\l}"];
  Node081A4880 -> Node081A47A8 [label="(v6 != 2) != (v6 != 8)"];
  Node081A4880 -> Node081A41C0 [label="(v6 != 2) == (v6 != 8)"];
  Node081A47A8 [label="{0x4ed7:\l  result = 1\l}"];
  Node081A47A8 -> Node081A4448;
  Node081A41C0 [label="{  v7 = *(IntToPtrCastExpr\<ptr\>((v4 + 16)))\l  result = 0\l}"];
  Node081A41C0 -> Node081A4568;
  Node081A4448 [label="{  if (*(IntToPtrCastExpr\<ptr\>((v4 + 48))) != *(IntToPtrCastExpr\<ptr\>((v5 + 48)))):\l}"];
  Node081A4448 -> Node081A4718 [label="*(IntToPtrCastExpr\<ptr\>((v4 + 48))) != *(IntToPtrCastExpr\<ptr\>((v5 + 48)))"];
  Node081A4448 -> Node081A41C0 [label="*(IntToPtrCastExpr\<ptr\>((v4 + 48))) == *(IntToPtrCastExpr\<ptr\>((v5 + 48)))"];
  Node081A4568 [label="{  if (v7 == v2):\l}"];
  Node081A4568 -> Node081A4688 [label="v7 == v2"];
  Node081A4568 -> Node081A45B0 [label="v7 != v2"];
  Node081A4718 [label="{break -\> 0x4ee5:\l  break\l}"];
  Node081A4718 -> Node081A4130;
  Node081A4688 [label="{break -\> 0x4ee5:\l  break\l}"];
  Node081A4688 -> Node081A4130;
  Node081A45B0 [label="{  v4 = v7\l  v5 = *(IntToPtrCastExpr\<ptr\>((v5 + 16)))\l  v6 = *(IntToPtrCastExpr\<ptr\>((v4 + 32)))\l  result = 1\l}"];
  Node081A45B0 -> Node081A3AB8;

}
