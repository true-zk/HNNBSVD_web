digraph "Control-flow graph for function 'function_2630(a1)'." {
  label="Control-flow graph for function 'function_2630(a1)'.";
  node [shape=record];

  Node07C66740 [label="{entry:\l  a1\l}"];
  Node07C66740 -> Node07C67DC0;
  Node07C67DC0 [label="{  v1 = *(IntToPtrCastExpr\<ptr\>((a1 + 24)))\l  result\l}"];
  Node07C67DC0 -> Node07C6B528;
  Node07C6B528 [label="{  if (*(IntToPtrCastExpr\<ptr\>((v1 + 48))) \< 2):\l}"];
  Node07C6B528 -> Node07C6D808 [label="*(IntToPtrCastExpr\<ptr\>((v1 + 48))) \< 2"];
  Node07C6B528 -> Node07C6D3D0 [label="*(IntToPtrCastExpr\<ptr\>((v1 + 48))) \>= 2"];
  Node07C6D808 [label="{0x26a0:\l  return result\l}"];
  Node07C6D808 -> Node07C668A8;
  Node07C6D3D0 [label="{  v2 = *(IntToPtrCastExpr\<ptr\>((a1 + 32)))\l}"];
  Node07C6D3D0 -> Node07C6D7C0;
  Node07C668A8 [label="{exit:\l}"];
  Node07C6D7C0 [label="{  switch v2:\l  case 2:\l  case 8:\l  case 0:\l}"];
  Node07C6D7C0 -> Node07C6DC88 [label="v2 == 8"];
  Node07C6D7C0 -> Node07C6DDA8 [label="v2 == 0"];
  Node07C6D7C0 -> Node07C6D580;
  Node07C6D7C0 -> Node07C6DC88 [label="v2 == 2"];
  Node07C6DC88 [label="{0x26b0:\l  if (*(IntToPtrCastExpr\<ptr\>((a1 + 48))) == -1):\l}"];
  Node07C6DC88 -> Node07C6E780 [label="*(IntToPtrCastExpr\<ptr\>((a1 + 48))) == -1"];
  Node07C6DC88 -> Node07C6D970 [label="*(IntToPtrCastExpr\<ptr\>((a1 + 48))) != -1"];
  Node07C6DDA8 [label="{0x26a0:\l  return result\l}"];
  Node07C6DDA8 -> Node07C668A8;
  Node07C6D580 [label="{  v3 = IntToPtrCastExpr\<ptr\>((a1 + 16))\l  v4 = *(v3)\l  v5 = IntToPtrCastExpr\<ptr\>((a1 + 8))\l  v6 = *(v5)\l  *(IntToPtrCastExpr\<ptr\>((v6 + 16))) = v4\l  *(IntToPtrCastExpr\<ptr\>((v4 + 8))) = v6\l  v7 = *(IntToPtrCastExpr\<ptr\>((v1 + 16)))\l  v8 = v7\l}"];
  Node07C6D580 -> Node07C66818;
  Node07C6E780 [label="{0x26a0:\l  return result\l}"];
  Node07C6E780 -> Node07C668A8;
  Node07C6D970 [label="{break -\> 0x264c:\l  break\l}"];
  Node07C6D970 -> Node07C6D580;
  Node07C66818 [label="{  if (v1 != v7):\l}"];
  Node07C66818 -> Node07C6D9B8 [label="v1 != v7"];
  Node07C66818 -> Node07C6D850 [label="v1 == v7"];
  Node07C6D9B8 [label="{  v9 = *(IntToPtrCastExpr\<ptr\>((v7 + 32)))\l}"];
  Node07C6D9B8 -> Node07C6DCD0;
  Node07C6D850 [label="{  v12 = *(IntToPtrCastExpr\<ptr\>((v8 + 8)))\l  *(v3) = v8\l  *(v5) = v12\l  *(IntToPtrCastExpr\<ptr\>((v12 + 16))) = a1\l  result2 = *(v3)\l  *(IntToPtrCastExpr\<ptr\>((result2 + 8))) = a1\l  return result2\l}"];
  Node07C6D850 -> Node07C668A8;
  Node07C6DCD0 [label="{  if (v9 \>= v2):\l}"];
  Node07C6DCD0 -> Node07C6E270 [label="v9 \>= v2"];
  Node07C6DCD0 -> Node07C6DD18 [label="v9 \< v2"];
  Node07C6E270 [label="{0x2686:\l  if (v2 \< v9):\l}"];
  Node07C6E270 -> Node07C6F398 [label="v2 \< v9"];
  Node07C6E270 -> Node07C6E5D0 [label="v2 \>= v9"];
  Node07C6DD18 [label="{  v10 = *(IntToPtrCastExpr\<ptr\>((v7 + 16)))\l  v8 = v1\l}"];
  Node07C6DD18 -> Node07C6E930;
  Node07C6F398 [label="{break -\> 0x2688:\l  break\l}"];
  Node07C6F398 -> Node07C668A8;
  Node07C6E5D0 [label="{0x2670:\l  if (*(IntToPtrCastExpr\<ptr\>((v7 + 48))) \> *(IntToPtrCastExpr\<ptr\>((a1 + 48)))):\l}"];
  Node07C6E5D0 -> Node07C6EBB8 [label="*(IntToPtrCastExpr\<ptr\>((v7 + 48))) \> *(IntToPtrCastExpr\<ptr\>((a1 + 48)))"];
  Node07C6E5D0 -> Node07C6DD18 [label="*(IntToPtrCastExpr\<ptr\>((v7 + 48))) \<= *(IntToPtrCastExpr\<ptr\>((a1 + 48)))"];
  Node07C6E930 [label="{  while (v1 != v10):\l}"];
  Node07C6E930 -> Node07C6E420 [label="v1 != v10"];
  Node07C6E930 -> Node07C668A8 [label="v1 == v10"];
  Node07C6EBB8 [label="{break -\> 0x2688:\l  break\l}"];
  Node07C6EBB8 -> Node07C668A8;
  Node07C6E420 [label="{  v11 = v10\l  v9 = *(IntToPtrCastExpr\<ptr\>((v11 + 32)))\l}"];
  Node07C6E420 -> Node07C6E6A8;
  Node07C6E6A8 [label="{  if (v9 \>= v2):\l}"];
  Node07C6E6A8 -> Node07C6EDF8 [label="v9 \>= v2"];
  Node07C6E6A8 -> Node07C6EDB0 [label="v9 \< v2"];
  Node07C6EDF8 [label="{0x2686:\l  v8 = v11\l}"];
  Node07C6EDF8 -> Node07C6EB70;
  Node07C6EDB0 [label="{0x2678:\l  v10 = *(IntToPtrCastExpr\<ptr\>((v11 + 16)))\l  v8 = v1\l}"];
  Node07C6EDB0 -> Node07C6E930;
  Node07C6EB70 [label="{  if (v2 \< v9):\l}"];
  Node07C6EB70 -> Node07C6F9C8 [label="v2 \< v9"];
  Node07C6EB70 -> Node07C6F230 [label="v2 \>= v9"];
  Node07C6F9C8 [label="{break -\> 0x2688:\l  break\l}"];
  Node07C6F9C8 -> Node07C668A8;
  Node07C6F230 [label="{0x2670:\l  v8 = v11\l}"];
  Node07C6F230 -> Node07C6EC48;
  Node07C6EC48 [label="{  if (*(IntToPtrCastExpr\<ptr\>((v11 + 48))) \> *(IntToPtrCastExpr\<ptr\>((a1 + 48)))):\l}"];
  Node07C6EC48 -> Node07C6F548 [label="*(IntToPtrCastExpr\<ptr\>((v11 + 48))) \> *(IntToPtrCastExpr\<ptr\>((a1 + 48)))"];
  Node07C6EC48 -> Node07C6EDB0 [label="*(IntToPtrCastExpr\<ptr\>((v11 + 48))) \<= *(IntToPtrCastExpr\<ptr\>((a1 + 48)))"];
  Node07C6F548 [label="{break -\> 0x2688:\l  break\l}"];
  Node07C6F548 -> Node07C668A8;

}
