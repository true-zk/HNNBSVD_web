digraph "Control-flow graph for function 'function_2950(*a1, *a2)'." {
  label="Control-flow graph for function 'function_2950(*a1, *a2)'.";
  node [shape=record];

  Node07967450 [label="{entry:\l  a1\l  a2\l}"];
  Node07967450 -> Node07967A38;
  Node07967A38 [label="{  v1 = PtrToIntCastExpr\<int64\>(a2)\l  v2 = function_2280(v1)\l  v3\l  v4 = v3\l  v5 = v4\l  v6 = v1\l  v7 = v4\l  v8 = v1\l  v9\l}"];
  Node07967A38 -> Node07967D08;
  Node07967D08 [label="{  if (v4 \< 33):\l  else:\l}"];
  Node07967D08 -> Node079680F8 [label="v4 \< 33"];
  Node07967D08 -> Node07967EB8 [label="v4 \>= 33"];
  Node079680F8 [label="{  v9 = v6\l}"];
  Node079680F8 -> Node079681D0;
  Node07967EB8 [label="{0x2992:\l  v9 = v8\l  v10 = v8\l}"];
  Node07967EB8 -> Node07967F00;
  Node079681D0 [label="{  while (((1 \<\< ExtCastExpr\<int64\>((v5 % 64))) & -4294977025) == 0):\l}"];
  Node079681D0 -> Node07968020 [label="((1 \<\< ExtCastExpr\<int64\>((v5 % 64))) & -4294977025) == 0"];
  Node079681D0 -> Node07967528 [label="((1 \<\< ExtCastExpr\<int64\>((v5 % 64))) & -4294977025) != 0"];
  Node07967F00 [label="{  if (v7 == 35):\l}"];
  Node07967F00 -> Node07968218 [label="v7 == 35"];
  Node07967F00 -> Node07967528 [label="v7 != 35"];
  Node07968020 [label="{0x2986:\l  v6 = (v6 + 1)\l  v5 = *(IntToPtrCastExpr\<ptr\>(v6))\l  v7 = v5\l  v8 = v6\l}"];
  Node07968020 -> Node07968068;
  Node07967528 [label="{0x2996:\l  v12 = function_2220(v9, v1, v2)\l  v13 = v2\l}"];
  Node07967528 -> Node079675B8;
  Node07968218 [label="{  while True:\l}"];
  Node07968218 -> Node07968260 [label="True"];
  Node07968068 [label="{  if (v5 \>= 33):\l}"];
  Node07968068 -> Node079683C8 [label="v5 \>= 33"];
  Node07968068 -> Node079685C0 [label="v5 \< 33"];
  Node079675B8 [label="{  if (TruncCastExpr\<int32\>(v12) != 0):\l}"];
  Node079675B8 -> Node07967D98 [label="TruncCastExpr\<int32\>(v12) != 0"];
  Node079675B8 -> Node07967AC8 [label="TruncCastExpr\<int32\>(v12) == 0"];
  Node07968260 [label="{0x29cc:\l  v11 = (v10 + 1)\l  v9 = v11\l  v10 = v11\l}"];
  Node07968260 -> Node07967F48;
  Node079683C8 [label="{  goto 0x2992\l}"];
  Node079683C8 -> Node07967EB8;
  Node079685C0 [label="{  v9 = v6\l}"];
  Node079685C0 -> Node079681D0;
  Node07967D98 [label="{0x29a8:\l  v13 = 1\l  v14\l}"];
  Node07967D98 -> Node079680B0;
  Node07967AC8 [label="{  v15 = (v13 + v9)\l  v16 = *(IntToPtrCastExpr\<ptr\>(v15))\l  v17 = v16\l  v18 = v17\l  v19 = v15\l  v20 = v17\l  v21 = v15\l}"];
  Node07967AC8 -> Node07967B10;
  Node07967F48 [label="{  switch *(IntToPtrCastExpr\<ptr\>(v11)):\l  case 10:\l  case 0:\l  default:\l}"];
  Node07967F48 -> Node079684A0 [label="*(IntToPtrCastExpr\<ptr\>(v11)) == 10"];
  Node07967F48 -> Node079684E8 [label="*(IntToPtrCastExpr\<ptr\>(v11)) == 0"];
  Node07967F48 -> Node07968530 [label="(*(IntToPtrCastExpr\<ptr\>(v11)) != 10) and (*(IntToPtrCastExpr\<ptr\>(v11)) != 0)"];
  Node079680B0 [label="{  if (*(IntToPtrCastExpr\<ptr\>(v9)) != TruncCastExpr\<int8\>(v14)):\l}"];
  Node079680B0 -> Node07967E28 [label="*(IntToPtrCastExpr\<ptr\>(v9)) != TruncCastExpr\<int8\>(v14)"];
  Node079680B0 -> Node07967AC8 [label="*(IntToPtrCastExpr\<ptr\>(v9)) == TruncCastExpr\<int8\>(v14)"];
  Node07967B10 [label="{  if (v16 \>= 33):\l}"];
  Node07967B10 -> Node07968140 [label="v16 \>= 33"];
  Node07967B10 -> Node07967690 [label="v16 \< 33"];
  Node079684A0 [label="{  goto 0x2996\l}"];
  Node079684A0 -> Node07967528;
  Node079684E8 [label="{  goto 0x2996\l}"];
  Node079684E8 -> Node07967528;
  Node07968530 [label="{  goto 0x29cc\l}"];
  Node07968530 -> Node07968260;
  Node07967E28 [label="{0x29b7:\l  return 0\l}"];
  Node07967E28 -> Node07967498;
  Node07968140 [label="{0x2a0a:\l  v22 = v20\l  v23 = v21\l}"];
  Node07968140 -> Node079682A8;
  Node07967690 [label="{  while (((1 \<\< (v18 % 64)) & -4294977025) == 0):\l}"];
  Node07967690 -> Node07967FD8 [label="((1 \<\< (v18 % 64)) & -4294977025) == 0"];
  Node07967690 -> Node07968578 [label="((1 \<\< (v18 % 64)) & -4294977025) != 0"];
  Node07967498 [label="{exit:\l}"];
  Node079682A8 [label="{  if (v20 == 35):\l}"];
  Node079682A8 -> Node07968338 [label="v20 == 35"];
  Node079682A8 -> Node07968188 [label="v20 != 35"];
  Node07967FD8 [label="{  v27 = (v19 + 1)\l  v28 = *(IntToPtrCastExpr\<ptr\>(v27))\l  v29 = v28\l  v18 = v29\l  v19 = v27\l  v20 = v29\l  v21 = v27\l}"];
  Node07967FD8 -> Node07968608;
  Node07968578 [label="{0x2a19:\l  *(a1) = v19\l  return 1\l}"];
  Node07968578 -> Node07967498;
  Node07968338 [label="{  v24 = (v21 + 1)\l  v25 = *(IntToPtrCastExpr\<ptr\>(v24))\l  v26 = v24\l}"];
  Node07968338 -> Node07967DE0;
  Node07968188 [label="{0x2a19:\l  *(a1) = (v23 + ExtCastExpr\<int64\>((TruncCastExpr\<int8\>(v22) == 58)))\l  return 1\l}"];
  Node07968188 -> Node07967498;
  Node07968608 [label="{  if (v28 \>= 33):\l}"];
  Node07968608 -> Node07967E70 [label="v28 \>= 33"];
  Node07968608 -> Node07967690 [label="v28 \< 33"];
  Node07967DE0 [label="{  while ((v25 != 10) == (v25 != 0)):\l}"];
  Node07967DE0 -> Node079682F0 [label="(v25 != 10) == (v25 != 0)"];
  Node07967DE0 -> Node07968458 [label="(v25 != 10) != (v25 != 0)"];
  Node07967E70 [label="{  goto 0x2a0a\l}"];
  Node07967E70 -> Node07968140;
  Node079682F0 [label="{0x2a30:\l  v24 = (v26 + 1)\l  v25 = *(IntToPtrCastExpr\<ptr\>(v24))\l  v26 = v24\l}"];
  Node079682F0 -> Node07967DE0;
  Node07968458 [label="{0x2a0e:\l  v22 = v25\l  v23 = v24\l}"];
  Node07968458 -> Node07968188;

}
