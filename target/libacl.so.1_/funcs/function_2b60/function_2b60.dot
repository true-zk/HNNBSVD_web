digraph "Control-flow graph for function 'function_2b60(a1)'." {
  label="Control-flow graph for function 'function_2b60(a1)'.";
  node [shape=record];

  Node079692B0 [label="{entry:\l  a1\l}"];
  Node079692B0 -> Node079694A8;
  Node079694A8 [label="{0x2b60:\l  v1\l  v2 = &(v1)\l  v3 = IntToPtrCastExpr\<ptr\>((a1 + 48))\l  v4 = *(v3)\l  v5 = __readfsqword(40)\l  v6 = ((8 * v4) + 23)\l  v7 = (v6 & -4096)\l  v8 = (v2 - v7)\l  v9 = v2\l  v10 = v2\l}"];
  Node079694A8 -> Node079696E8;
  Node079696E8 [label="{  if (v7 != 0):\l}"];
  Node079696E8 -> Node07969778 [label="v7 != 0"];
  Node079696E8 -> Node079694F0 [label="v7 == 0"];
  Node07969778 [label="{  v9 = (v9 - PtrToIntCastExpr\<int64\>(&(g1)))\l  v10 = v9\l}"];
  Node07969778 -> Node07968F50;
  Node079694F0 [label="{  v11 = (v6 & (ExtCastExpr\<int64\>(PtrToIntCastExpr\<int32\>(&(g9))) & -16))\l  v12 = (v10 - v11)\l  v13 = ((v12 + 15) & -16)\l  v14 = v8\l  v15 = v11\l  v16 = v4\l  v17 = a1\l}"];
  Node079694F0 -> Node079697C0;
  Node07968F50 [label="{  while (v9 != v8):\l}"];
  Node07968F50 -> Node07969AD8 [label="v9 != v8"];
  Node07968F50 -> Node079694F0 [label="v9 == v8"];
  Node079697C0 [label="{  if (v4 \>= 2):\l}"];
  Node079697C0 -> Node07968F98 [label="v4 \>= 2"];
  Node079697C0 -> Node07969808 [label="v4 \< 2"];
  Node07969AD8 [label="{0x2ba1:\l  v9 = (v9 - PtrToIntCastExpr\<int64\>(&(g1)))\l  v10 = v9\l}"];
  Node07969AD8 -> Node07968F50;
  Node07968F98 [label="{  v18 = IntToPtrCastExpr\<ptr\>((a1 + 16))\l  v19 = *(v18)\l  v20 = v13\l}"];
  Node07968F98 -> Node07968FE0;
  Node07969808 [label="{0x2c7c:\l  if (v5 == __readfsqword(40)):\l}"];
  Node07969808 -> Node07969F58 [label="v5 == __readfsqword(40)"];
  Node07969808 -> Node07969190 [label="v5 != __readfsqword(40)"];
  Node07968FE0 [label="{  if (v19 != a1):\l}"];
  Node07968FE0 -> Node07969E38 [label="v19 != a1"];
  Node07968FE0 -> Node07969070 [label="v19 == a1"];
  Node07969F58 [label="{0x2c8b:\l  return 0\l}"];
  Node07969F58 -> Node079693D0;
  Node07969190 [label="{0x2cab:\l  function_2290()\l  *(IntToPtrCastExpr\<ptr\>((v12 - 16))) = v13\l  v37\l  *(IntToPtrCastExpr\<ptr\>((v12 - 24))) = PtrToIntCastExpr\<int64\>(&(v37))\l  *(IntToPtrCastExpr\<ptr\>((v12 - 32))) = a1\l  v38 = v16\l  v39\l  v40\l  v41\l  v42\l}"];
  Node07969190 -> Node07969658;
  Node07969E38 [label="{  *(IntToPtrCastExpr\<ptr\>(v20)) = v19\l  v21 = *(IntToPtrCastExpr\<ptr\>((v19 + 16)))\l  v22 = v21\l  v20 = (v20 + 8)\l}"];
  Node07969E38 -> Node07969FA0;
  Node07969070 [label="{0x2c00:\l  function_2240(v13)\l  v17 = (8 * *(v3))\l}"];
  Node07969070 -> Node079690B8;
  Node079693D0 [label="{exit:\l}"];
  Node07969658 [label="{  if (v16 \>= 4):\l}"];
  Node07969658 -> Node07969A90 [label="v16 \>= 4"];
  Node07969658 -> Node07969730 [label="v16 \< 4"];
  Node07969FA0 [label="{  while (v21 != a1):\l}"];
  Node07969FA0 -> Node07969CD0 [label="v21 != a1"];
  Node07969FA0 -> Node07969070 [label="v21 == a1"];
  Node079690B8 [label="{  if (v17 != 0):\l}"];
  Node079690B8 -> Node07969BB0 [label="v17 != 0"];
  Node079690B8 -> Node07969B68 [label="v17 == 0"];
  Node07969A90 [label="{0x2cc4:\l  v38 = v16\l}"];
  Node07969A90 -> Node07969B20;
  Node07969730 [label="{0x2d70:\l  v53\l  v54 = function_2200(v17, IntToPtrCastExpr\<ptr\>(v38), TruncCastExpr\<int32\>(v15), TruncCastExpr\<int32\>(v14), v53)\l  *(IntToPtrCastExpr\<ptr\>(v54)) = 22\l  return 0\l}"];
  Node07969730 -> Node079693D0;
  Node07969CD0 [label="{0x2bf0:\l  *(IntToPtrCastExpr\<ptr\>(v20)) = v22\l  v21 = *(IntToPtrCastExpr\<ptr\>((v22 + 16)))\l  v22 = v21\l  v20 = (v20 + 8)\l}"];
  Node07969CD0 -> Node07969FA0;
  Node07969BB0 [label="{  v23 = IntToPtrCastExpr\<ptr\>(v13)\l  v24 = (v13 + 8)\l  *(IntToPtrCastExpr\<ptr\>((*(v23) + 8))) = a1\l  v25 = v24\l  v26 = *(v23)\l}"];
  Node07969BB0 -> Node0796A108;
  Node07969B68 [label="{0x2c44:\l  v16 = (v13 - 8)\l  v27 = (v17 + v16)\l  v28 = IntToPtrCastExpr\<ptr\>(v27)\l  v29 = *(v28)\l  *(IntToPtrCastExpr\<ptr\>((a1 + 8))) = v29\l  v14 = a1\l  v15 = v29\l}"];
  Node07969B68 -> Node0796A078;
  Node07969B20 [label="{  if (*(IntToPtrCastExpr\<ptr\>(v17)) == 2):\l}"];
  Node07969B20 -> Node07969EC8 [label="*(IntToPtrCastExpr\<ptr\>(v17)) == 2"];
  Node07969B20 -> Node07969730 [label="*(IntToPtrCastExpr\<ptr\>(v17)) != 2"];
  Node0796A108 [label="{  while (v24 != (v17 + v13)):\l}"];
  Node0796A108 -> Node07969850 [label="v24 != (v17 + v13)"];
  Node0796A108 -> Node07969B68 [label="v24 == (v17 + v13)"];
  Node0796A078 [label="{  if (v17 != 0):\l}"];
  Node0796A078 -> Node07969E80 [label="v17 != 0"];
  Node0796A078 -> Node0796A0C0 [label="v17 == 0"];
  Node07969EC8 [label="{  v43 = (v16 - 4)\l  v38 = v43\l}"];
  Node07969EC8 -> Node07969FE8;
  Node07969850 [label="{0x2c30:\l  v23 = IntToPtrCastExpr\<ptr\>(v25)\l  v24 = (v25 + 8)\l  *(IntToPtrCastExpr\<ptr\>((*(v23) + 8))) = v26\l  v25 = v24\l  v26 = *(v23)\l}"];
  Node07969850 -> Node0796A108;
  Node07969E80 [label="{0x2c63:\l  *(IntToPtrCastExpr\<ptr\>((v29 + 16))) = a1\l  v30 = (v27 - 8)\l  v31 = *(v28)\l  v14 = v31\l  v15 = v29\l}"];
  Node07969E80 -> Node07969BF8;
  Node0796A0C0 [label="{0x2c74:\l  *(v18) = *(IntToPtrCastExpr\<ptr\>(v13))\l}"];
  Node0796A0C0 -> Node07969808;
  Node07969FE8 [label="{  if ((v43 % 8) == 0):\l}"];
  Node07969FE8 -> Node0796A030 [label="(v43 % 8) == 0"];
  Node07969FE8 -> Node07969730;
  Node07969BF8 [label="{  if (v30 != v16):\l}"];
  Node07969BF8 -> Node07969C40 [label="v30 != v16"];
  Node07969BF8 -> Node0796A0C0 [label="v30 == v16"];
  Node0796A030 [label="{0x2cdb:\l  v40 = function_27e0((v43 / 8))\l}"];
  Node0796A030 -> Node07969D18;
  Node07969C40 [label="{  v32 = IntToPtrCastExpr\<ptr\>(v30)\l  v33 = *(v32)\l  *(IntToPtrCastExpr\<ptr\>((v33 + 16))) = v31\l  v34 = (v30 - 8)\l  v35 = *(v32)\l  v36 = v34\l  v14 = v35\l  v15 = v33\l}"];
  Node07969C40 -> Node07969C88;
  Node07969D18 [label="{  if (v40 == 0):\l}"];
  Node07969D18 -> Node07969970 [label="v40 == 0"];
  Node07969D18 -> Node07969898 [label="v40 != 0"];
  Node07969C88 [label="{  while (v34 != v16):\l}"];
  Node07969C88 -> Node07969928 [label="v34 != v16"];
  Node07969C88 -> Node0796A0C0;
  Node07969970 [label="{0x2c8b:\l  return 0\l}"];
  Node07969970 -> Node079693D0;
  Node07969898 [label="{  v44 = (v17 + 4)\l  v41 = (v43 & -8)\l  v45 = v44\l}"];
  Node07969898 -> Node07969DA8;
  Node07969928 [label="{0x2c60:\l  v32 = IntToPtrCastExpr\<ptr\>(v36)\l  v33 = *(v32)\l  *(IntToPtrCastExpr\<ptr\>((v33 + 16))) = v35\l  v34 = (v36 - 8)\l  v35 = *(v32)\l  v36 = v34\l  v14 = v35\l  v15 = v33\l}"];
  Node07969928 -> Node07969C88;
  Node07969DA8 [label="{  if (v41 == 0):\l}"];
  Node07969DA8 -> Node079699B8 [label="v41 == 0"];
  Node07969DA8 -> Node07969D60 [label="v41 != 0"];
  Node079699B8 [label="{0x2da3:\l  if (TruncCastExpr\<int32\>(function_2b60(v40)) == 0):\l}"];
  Node079699B8 -> Node0796A1E0 [label="TruncCastExpr\<int32\>(function_2b60(v40)) == 0"];
  Node079699B8 -> Node07969A48 [label="TruncCastExpr\<int32\>(function_2b60(v40)) != 0"];
  Node07969D60 [label="{  v46 = function_2750(v40, v41)\l}"];
  Node07969D60 -> Node07969F10;
  Node0796A1E0 [label="{0x2c8b:\l  return (v40 + 8)\l}"];
  Node0796A1E0 -> Node079693D0;
  Node07969A48 [label="{0x2d54:\l  function_28f0(v40)\l  return 0\l}"];
  Node07969A48 -> Node079693D0;
  Node07969F10 [label="{  while (v46 != 0):\l}"];
  Node07969F10 -> Node0796A150 [label="v46 != 0"];
  Node07969F10 -> Node079698E0 [label="v46 == 0"];
  Node0796A150 [label="{  v47 = v45\l  v48 = *(IntToPtrCastExpr\<ptr\>(v47))\l  v42 = v48\l  *(IntToPtrCastExpr\<ptr\>((v46 + 32))) = v42\l  v49 = *(IntToPtrCastExpr\<ptr\>((v47 + 2)))\l  *(IntToPtrCastExpr\<ptr\>((v46 + 64))) = ExtCastExpr\<int32\>(v49)\l}"];
  Node0796A150 -> Node0796A420;
  Node079698E0 [label="{0x2d54:\l  function_28f0(v40)\l  return 0\l}"];
  Node079698E0 -> Node079693D0;
  Node0796A420 [label="{  if (v48 \>= 33):\l}"];
  Node0796A420 -> Node0796A228 [label="v48 \>= 33"];
  Node0796A420 -> Node0796AA08 [label="v48 \< 33"];
  Node0796A228 [label="{0x2d49:\l  v39 = v49\l  goto 0x2d49_2\l}"];
  Node0796A228 -> Node0796A4B0;
  Node0796AA08 [label="{  v50 = (v48 % 64)\l  v51 = (1 if (v50 == 0) else (1 \<\< ExtCastExpr\<int64\>(v50)))\l  v52 = -1\l}"];
  Node0796AA08 -> Node0796A3D8;
  Node0796A4B0 [label="{0x2d49_2:\l  v55 = function_2200(v40, IntToPtrCastExpr\<ptr\>(v41), TruncCastExpr\<int32\>(v39), v42, v53)\l  *(IntToPtrCastExpr\<ptr\>(v55)) = 22\l  goto 0x2d54\l}"];
  Node0796A4B0 -> Node079698E0;
  Node0796A3D8 [label="{  if ((v51 & 4295032850) == 0):\l}"];
  Node0796A3D8 -> Node0796A660 [label="(v51 & 4295032850) == 0"];
  Node0796A3D8 -> Node0796A540 [label="(v51 & 4295032850) != 0"];
  Node0796A660 [label="{0x2d41:\l  v39 = v51\l}"];
  Node0796A660 -> Node0796A198;
  Node0796A540 [label="{0x2d93:\l  v45 = (v47 + 8)\l  *(IntToPtrCastExpr\<ptr\>((v46 + 48))) = v52\l}"];
  Node0796A540 -> Node0796A468;
  Node0796A198 [label="{  if ((v51 & 260) == 0):\l}"];
  Node0796A198 -> Node0796A270 [label="(v51 & 260) == 0"];
  Node0796A198 -> Node0796A2B8 [label="(v51 & 260) != 0"];
  Node0796A468 [label="{  if ((v44 + v41) == v45):\l}"];
  Node0796A468 -> Node0796A618 [label="(v44 + v41) == v45"];
  Node0796A468 -> Node0796A588 [label="(v44 + v41) != v45"];
  Node0796A270 [label="{  goto 0x2d49_2\l}"];
  Node0796A270 -> Node0796A4B0;
  Node0796A2B8 [label="{0x2d90:\l  v52 = *(IntToPtrCastExpr\<ptr\>((v47 + 4)))\l}"];
  Node0796A2B8 -> Node0796A540;
  Node0796A618 [label="{  goto 0x2da3\l}"];
  Node0796A618 -> Node079699B8;
  Node0796A588 [label="{  v46 = function_2750(v40, v41)\l}"];
  Node0796A588 -> Node07969F10;

}
