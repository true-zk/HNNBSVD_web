cli 
push rbp
mov rbp, rsp
push r14
push r13
mov r13d, edi
push r12
sub rsp, 0xa8
mov rax, qword ptr fs:[0x28]
mov qword ptr [rbp - 0x28], rax
mov rax, rsp
cmp rsp, rax
je 0x5392 <function_5353+0x3f>
sub rsp, 0x1000
or qword ptr [rsp + 0xff8], 0
cmp rsp, rax
jne 0x537d <function_5353+0x2a>
sub rsp, 0x90
or qword ptr [rsp + 0x88], 0
lea r14, [rip + 0xc57]
mov ecx, 0x84
mov rsi, r14
lea r12, [rsp + 0xf]
mov edi, r13d
and r12, 0xfffffffffffffff0
mov rdx, r12
call 0x2320 <function_2320>
movsxd rsi, eax
cmp eax, -1
je 0x5420 <function_5353+0xcd>
test esi, esi
jg 0x54b0 <function_5353+0x15d>
test esi, esi
je 0x53e5 <function_5353+0x92>
call 0x2200 <function_2200>
mov eax, dword ptr [rax]
cmp eax, 0x3d
jne 0x53fc <function_5353+0xa9>
lea rsi, [rbp - 0xc0]
mov edi, r13d
call 0x2380 <function_2380>
test eax, eax
je 0x54c0 <function_5353+0x16d>
xor eax, eax
mov rdx, qword ptr [rbp - 0x28]
sub rdx, qword ptr fs:[0x28]
jne 0x54d0 <function_5353+0x17d>
lea rsp, [rbp - 0x18]
pop r12
pop r13
pop r14
pop rbp
ret 
