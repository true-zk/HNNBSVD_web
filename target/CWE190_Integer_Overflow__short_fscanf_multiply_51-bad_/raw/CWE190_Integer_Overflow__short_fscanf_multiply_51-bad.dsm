;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2023 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2023-04-23 17:32:26
;; Architecture: x86-64
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x810 -- 0x827
0x810:      48 83 ec 08                  	sub rsp, 8
0x814:      48 8b 05 cd 17 20 00         	mov rax, qword ptr [rip + 0x2017cd]
0x81b:      48 85 c0                     	test rax, rax
0x81e:      74 02                        	je 0x822 <_init+0x12>
0x820:      ff d0                        	call rax <__gmon_start__>
0x822:      48 83 c4 08                  	add rsp, 8
0x826:      c3                           	ret 
; section: .plt
; data inside code section at 0x830 -- 0x840
0x830:      ff 35 32 17 20 00 ff 25  34 17 20 00 0f 1f 40 00   |.52. ..%4. ...@.|
; function: function_840 at 0x840 -- 0x846
0x840:      ff 25 32 17 20 00            	jmp qword ptr [rip + 0x201732] <fscanf>
; data inside code section at 0x846 -- 0x850
0x846:      68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_850 at 0x850 -- 0x856
0x850:      ff 25 2a 17 20 00            	jmp qword ptr [rip + 0x20172a] <puts>
; data inside code section at 0x856 -- 0x860
0x856:      68 01 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_860 at 0x860 -- 0x866
0x860:      ff 25 22 17 20 00            	jmp qword ptr [rip + 0x201722] <iswxdigit>
; data inside code section at 0x866 -- 0x870
0x866:      68 02 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; function: function_870 at 0x870 -- 0x876
0x870:      ff 25 1a 17 20 00            	jmp qword ptr [rip + 0x20171a] <__stack_chk_fail>
; data inside code section at 0x876 -- 0x880
0x876:      68 03 00 00 00 e9 b0 ff  ff ff                     |h.........      |
; function: function_880 at 0x880 -- 0x886
0x880:      ff 25 12 17 20 00            	jmp qword ptr [rip + 0x201712] <printf>
; data inside code section at 0x886 -- 0x890
0x886:      68 04 00 00 00 e9 a0 ff  ff ff                     |h.........      |
; function: function_890 at 0x890 -- 0x896
0x890:      ff 25 0a 17 20 00            	jmp qword ptr [rip + 0x20170a] <srand>
; data inside code section at 0x896 -- 0x8a0
0x896:      68 05 00 00 00 e9 90 ff  ff ff                     |h.........      |
; function: function_8a0 at 0x8a0 -- 0x8a6
0x8a0:      ff 25 02 17 20 00            	jmp qword ptr [rip + 0x201702] <swscanf>
; data inside code section at 0x8a6 -- 0x8b0
0x8a6:      68 06 00 00 00 e9 80 ff  ff ff                     |h.........      |
; function: function_8b0 at 0x8b0 -- 0x8b6
0x8b0:      ff 25 fa 16 20 00            	jmp qword ptr [rip + 0x2016fa] <time>
; data inside code section at 0x8b6 -- 0x8c0
0x8b6:      68 07 00 00 00 e9 70 ff  ff ff                     |h.....p...      |
; function: function_8c0 at 0x8c0 -- 0x8c6
0x8c0:      ff 25 f2 16 20 00            	jmp qword ptr [rip + 0x2016f2] <wprintf>
; data inside code section at 0x8c6 -- 0x8d0
0x8c6:      68 08 00 00 00 e9 60 ff  ff ff                     |h.....`...      |
; function: function_8d0 at 0x8d0 -- 0x8d6
0x8d0:      ff 25 ea 16 20 00            	jmp qword ptr [rip + 0x2016ea] <sscanf>
; data inside code section at 0x8d6 -- 0x8e0
0x8d6:      68 09 00 00 00 e9 50 ff  ff ff                     |h.....P...      |
; function: function_8e0 at 0x8e0 -- 0x8e6
0x8e0:      ff 25 e2 16 20 00            	jmp qword ptr [rip + 0x2016e2] <rand>
; data inside code section at 0x8e6 -- 0x8f0
0x8e6:      68 0a 00 00 00 e9 40 ff  ff ff                     |h.....@...      |
; function: function_8f0 at 0x8f0 -- 0x8f6
0x8f0:      ff 25 da 16 20 00            	jmp qword ptr [rip + 0x2016da] <__ctype_b_loc>
; data inside code section at 0x8f6 -- 0x900
0x8f6:      68 0b 00 00 00 e9 30 ff  ff ff                     |h.....0...      |
; section: .plt.got
; function: function_900 at 0x900 -- 0x906
0x900:      ff 25 f2 16 20 00            	jmp qword ptr [rip + 0x2016f2] <__cxa_finalize>
; data inside code section at 0x906 -- 0x908
0x906:      66 90                                              |f.              |
; section: .text
; function: _start at 0x910 -- 0x93b
0x910:      31 ed                        	xor ebp, ebp
0x912:      49 89 d1                     	mov r9, rdx
0x915:      5e                           	pop rsi
0x916:      48 89 e2                     	mov rdx, rsp
0x919:      48 83 e4 f0                  	and rsp, 0xfffffffffffffff0
0x91d:      50                           	push rax
0x91e:      54                           	push rsp
0x91f:      4c 8d 05 7a 07 00 00         	lea r8, [rip + 0x77a]
0x926:      48 8d 0d 03 07 00 00         	lea rcx, [rip + 0x703]
0x92d:      48 8d 3d 45 01 00 00         	lea rdi, [rip + 0x145]
0x934:      ff 15 a6 16 20 00            	call qword ptr [rip + 0x2016a6] <__libc_start_main>
0x93a:      f4                           	hlt 
; data inside code section at 0x93b -- 0x940
0x93b:      0f 1f 44 00 00                                     |..D..           |
; function: deregister_tm_clones at 0x940 -- 0x972
0x940:      48 8d 3d d1 16 20 00         	lea rdi, [rip + 0x2016d1]
0x947:      55                           	push rbp
0x948:      48 8d 05 c9 16 20 00         	lea rax, [rip + 0x2016c9]
0x94f:      48 39 f8                     	cmp rax, rdi
0x952:      48 89 e5                     	mov rbp, rsp
0x955:      74 19                        	je 0x970 <deregister_tm_clones+0x30>
0x957:      48 8b 05 7a 16 20 00         	mov rax, qword ptr [rip + 0x20167a]
0x95e:      48 85 c0                     	test rax, rax
0x961:      74 0d                        	je 0x970 <deregister_tm_clones+0x30>
0x963:      5d                           	pop rbp
0x964:      ff e0                        	jmp rax <_ITM_deregisterTMCloneTable>
; data inside code section at 0x966 -- 0x970
0x966:      66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0x970:      5d                           	pop rbp
0x971:      c3                           	ret 
; data inside code section at 0x972 -- 0x980
0x972:      0f 1f 40 00 66 2e 0f 1f  84 00 00 00 00 00         |..@.f.........  |
; function: register_tm_clones at 0x980 -- 0x9c2
0x980:      48 8d 3d 91 16 20 00         	lea rdi, [rip + 0x201691]
0x987:      48 8d 35 8a 16 20 00         	lea rsi, [rip + 0x20168a]
0x98e:      55                           	push rbp
0x98f:      48 29 fe                     	sub rsi, rdi
0x992:      48 89 e5                     	mov rbp, rsp
0x995:      48 c1 fe 03                  	sar rsi, 3
0x999:      48 89 f0                     	mov rax, rsi
0x99c:      48 c1 e8 3f                  	shr rax, 0x3f
0x9a0:      48 01 c6                     	add rsi, rax
0x9a3:      48 d1 fe                     	sar rsi, 1
0x9a6:      74 18                        	je 0x9c0 <register_tm_clones+0x40>
0x9a8:      48 8b 05 41 16 20 00         	mov rax, qword ptr [rip + 0x201641]
0x9af:      48 85 c0                     	test rax, rax
0x9b2:      74 0c                        	je 0x9c0 <register_tm_clones+0x40>
0x9b4:      5d                           	pop rbp
0x9b5:      ff e0                        	jmp rax <_ITM_registerTMCloneTable>
; data inside code section at 0x9b7 -- 0x9c0
0x9b7:      66 0f 1f 84 00 00 00 00  00                        |f........       |
0x9c0:      5d                           	pop rbp
0x9c1:      c3                           	ret 
; data inside code section at 0x9c2 -- 0x9d0
0x9c2:      0f 1f 40 00 66 2e 0f 1f  84 00 00 00 00 00         |..@.f.........  |
; function: __do_global_dtors_aux at 0x9d0 -- 0xa0a
0x9d0:      80 3d 51 16 20 00 00         	cmp byte ptr [rip + 0x201651], 0
0x9d7:      75 2f                        	jne 0xa08 <__do_global_dtors_aux+0x38>
0x9d9:      48 83 3d 17 16 20 00 00      	cmp qword ptr [rip + 0x201617], 0
0x9e1:      55                           	push rbp
0x9e2:      48 89 e5                     	mov rbp, rsp
0x9e5:      74 0c                        	je 0x9f3 <__do_global_dtors_aux+0x23>
0x9e7:      48 8b 3d 1a 16 20 00         	mov rdi, qword ptr [rip + 0x20161a]
0x9ee:      e8 0d ff ff ff               	call 0x900 <__cxa_finalize>
0x9f3:      e8 48 ff ff ff               	call 0x940 <deregister_tm_clones>
0x9f8:      c6 05 29 16 20 00 01         	mov byte ptr [rip + 0x201629], 1
0x9ff:      5d                           	pop rbp
0xa00:      c3                           	ret 
; data inside code section at 0xa01 -- 0xa08
0xa01:      0f 1f 80 00 00 00 00                               |.......         |
0xa08:      f3 c3                        	ret 
; data inside code section at 0xa0a -- 0xa10
0xa0a:      66 0f 1f 44 00 00                                  |f..D..          |
; function: frame_dummy at 0xa10 -- 0xa1a
0xa10:      55                           	push rbp
0xa11:      48 89 e5                     	mov rbp, rsp
0xa14:      5d                           	pop rbp
0xa15:      e9 66 ff ff ff               	jmp 0x980 <register_tm_clones>
; function: CWE190_Integer_Overflow__short_fscanf_multiply_51_bad at 0xa1a -- 0xa79
0xa1a:      55                           	push rbp
0xa1b:      48 89 e5                     	mov rbp, rsp
0xa1e:      48 83 ec 10                  	sub rsp, 0x10
0xa22:      64 48 8b 04 25 28 00 00 00   	mov rax, qword ptr fs:[0x28]
0xa2b:      48 89 45 f8                  	mov qword ptr [rbp - 8], rax
0xa2f:      31 c0                        	xor eax, eax
0xa31:      66 c7 45 f6 00 00            	mov word ptr [rbp - 0xa], 0
0xa37:      48 8b 05 e2 15 20 00         	mov rax, qword ptr [rip + 0x2015e2]
0xa3e:      48 8d 55 f6                  	lea rdx, [rbp - 0xa]
0xa42:      48 8d 35 6b 06 00 00         	lea rsi, [rip + 0x66b]
0xa49:      48 89 c7                     	mov rdi, rax
0xa4c:      b8 00 00 00 00               	mov eax, 0
0xa51:      e8 ea fd ff ff               	call 0x840 <fscanf>
0xa56:      0f b7 45 f6                  	movzx eax, word ptr [rbp - 0xa]
0xa5a:      98                           	cwde 
0xa5b:      89 c7                        	mov edi, eax
0xa5d:      e8 60 00 00 00               	call 0xac2 <CWE190_Integer_Overflow__short_fscanf_multiply_51b_badSink>
0xa62:      90                           	nop 
0xa63:      48 8b 45 f8                  	mov rax, qword ptr [rbp - 8]
0xa67:      64 48 33 04 25 28 00 00 00   	xor rax, qword ptr fs:[0x28]
0xa70:      74 05                        	je 0xa77 <CWE190_Integer_Overflow__short_fscanf_multiply_51_bad+0x5d>
0xa72:      e8 f9 fd ff ff               	call 0x870 <__stack_chk_fail>
0xa77:      c9                           	leave 
0xa78:      c3                           	ret 
; function: main at 0xa79 -- 0xac2
0xa79:      55                           	push rbp
0xa7a:      48 89 e5                     	mov rbp, rsp
0xa7d:      48 83 ec 10                  	sub rsp, 0x10
0xa81:      89 7d fc                     	mov dword ptr [rbp - 4], edi
0xa84:      48 89 75 f0                  	mov qword ptr [rbp - 0x10], rsi
0xa88:      bf 00 00 00 00               	mov edi, 0
0xa8d:      e8 1e fe ff ff               	call 0x8b0 <time>
0xa92:      89 c7                        	mov edi, eax
0xa94:      e8 f7 fd ff ff               	call 0x890 <srand>
0xa99:      48 8d 3d 18 06 00 00         	lea rdi, [rip + 0x618]
0xaa0:      e8 4a 00 00 00               	call 0xaef <printLine>
0xaa5:      b8 00 00 00 00               	mov eax, 0
0xaaa:      e8 6b ff ff ff               	call 0xa1a <CWE190_Integer_Overflow__short_fscanf_multiply_51_bad>
0xaaf:      48 8d 3d 13 06 00 00         	lea rdi, [rip + 0x613]
0xab6:      e8 34 00 00 00               	call 0xaef <printLine>
0xabb:      b8 00 00 00 00               	mov eax, 0
0xac0:      c9                           	leave 
0xac1:      c3                           	ret 
; function: CWE190_Integer_Overflow__short_fscanf_multiply_51b_badSink at 0xac2 -- 0xaef
0xac2:      55                           	push rbp
0xac3:      48 89 e5                     	mov rbp, rsp
0xac6:      48 83 ec 20                  	sub rsp, 0x20
0xaca:      89 f8                        	mov eax, edi
0xacc:      66 89 45 ec                  	mov word ptr [rbp - 0x14], ax
0xad0:      66 83 7d ec 00               	cmp word ptr [rbp - 0x14], 0
0xad5:      7e 15                        	jle 0xaec <CWE190_Integer_Overflow__short_fscanf_multiply_51b_badSink+0x2a>
0xad7:      0f b7 45 ec                  	movzx eax, word ptr [rbp - 0x14]
0xadb:      01 c0                        	add eax, eax
0xadd:      66 89 45 fe                  	mov word ptr [rbp - 2], ax
0xae1:      0f bf 45 fe                  	movsx eax, word ptr [rbp - 2]
0xae5:      89 c7                        	mov edi, eax
0xae7:      e8 53 00 00 00               	call 0xb3f <printIntLine>
0xaec:      90                           	nop 
0xaed:      c9                           	leave 
0xaee:      c3                           	ret 
; function: printLine at 0xaef -- 0xb11
0xaef:      55                           	push rbp
0xaf0:      48 89 e5                     	mov rbp, rsp
0xaf3:      48 83 ec 10                  	sub rsp, 0x10
0xaf7:      48 89 7d f8                  	mov qword ptr [rbp - 8], rdi
0xafb:      48 83 7d f8 00               	cmp qword ptr [rbp - 8], 0
0xb00:      74 0c                        	je 0xb0e <printLine+0x1f>
0xb02:      48 8b 45 f8                  	mov rax, qword ptr [rbp - 8]
0xb06:      48 89 c7                     	mov rdi, rax
0xb09:      e8 42 fd ff ff               	call 0x850 <puts>
0xb0e:      90                           	nop 
0xb0f:      c9                           	leave 
0xb10:      c3                           	ret 
; function: printWLine at 0xb11 -- 0xb3f
0xb11:      55                           	push rbp
0xb12:      48 89 e5                     	mov rbp, rsp
0xb15:      48 83 ec 10                  	sub rsp, 0x10
0xb19:      48 89 7d f8                  	mov qword ptr [rbp - 8], rdi
0xb1d:      48 83 7d f8 00               	cmp qword ptr [rbp - 8], 0
0xb22:      74 18                        	je 0xb3c <printWLine+0x2b>
0xb24:      48 8b 45 f8                  	mov rax, qword ptr [rbp - 8]
0xb28:      48 89 c6                     	mov rsi, rax
0xb2b:      48 8d 3d a6 05 00 00         	lea rdi, [rip + 0x5a6]
0xb32:      b8 00 00 00 00               	mov eax, 0
0xb37:      e8 84 fd ff ff               	call 0x8c0 <wprintf>
0xb3c:      90                           	nop 
0xb3d:      c9                           	leave 
0xb3e:      c3                           	ret 
; function: printIntLine at 0xb3f -- 0xb63
0xb3f:      55                           	push rbp
0xb40:      48 89 e5                     	mov rbp, rsp
0xb43:      48 83 ec 10                  	sub rsp, 0x10
0xb47:      89 7d fc                     	mov dword ptr [rbp - 4], edi
0xb4a:      8b 45 fc                     	mov eax, dword ptr [rbp - 4]
0xb4d:      89 c6                        	mov esi, eax
0xb4f:      48 8d 3d 96 05 00 00         	lea rdi, [rip + 0x596]
0xb56:      b8 00 00 00 00               	mov eax, 0
0xb5b:      e8 20 fd ff ff               	call 0x880 <printf>
0xb60:      90                           	nop 
0xb61:      c9                           	leave 
0xb62:      c3                           	ret 
; function: printShortLine at 0xb63 -- 0xb8b
0xb63:      55                           	push rbp
0xb64:      48 89 e5                     	mov rbp, rsp
0xb67:      48 83 ec 10                  	sub rsp, 0x10
0xb6b:      89 f8                        	mov eax, edi
0xb6d:      66 89 45 fc                  	mov word ptr [rbp - 4], ax
0xb71:      0f bf 45 fc                  	movsx eax, word ptr [rbp - 4]
0xb75:      89 c6                        	mov esi, eax
0xb77:      48 8d 3d 72 05 00 00         	lea rdi, [rip + 0x572]
0xb7e:      b8 00 00 00 00               	mov eax, 0
0xb83:      e8 f8 fc ff ff               	call 0x880 <printf>
0xb88:      90                           	nop 
0xb89:      c9                           	leave 
0xb8a:      c3                           	ret 
; function: printFloatLine at 0xb8b -- 0xbb1
0xb8b:      55                           	push rbp
0xb8c:      48 89 e5                     	mov rbp, rsp
0xb8f:      48 83 ec 10                  	sub rsp, 0x10
0xb93:      f3 0f 11 45 fc               	movss dword ptr [rbp - 4], xmm0
0xb98:      f3 0f 5a 45 fc               	cvtss2sd xmm0, dword ptr [rbp - 4]
0xb9d:      48 8d 3d 51 05 00 00         	lea rdi, [rip + 0x551]
0xba4:      b8 01 00 00 00               	mov eax, 1
0xba9:      e8 d2 fc ff ff               	call 0x880 <printf>
0xbae:      90                           	nop 
0xbaf:      c9                           	leave 
0xbb0:      c3                           	ret 
; function: printLongLine at 0xbb1 -- 0xbd8
0xbb1:      55                           	push rbp
0xbb2:      48 89 e5                     	mov rbp, rsp
0xbb5:      48 83 ec 10                  	sub rsp, 0x10
0xbb9:      48 89 7d f8                  	mov qword ptr [rbp - 8], rdi
0xbbd:      48 8b 45 f8                  	mov rax, qword ptr [rbp - 8]
0xbc1:      48 89 c6                     	mov rsi, rax
0xbc4:      48 8d 3d 2e 05 00 00         	lea rdi, [rip + 0x52e]
0xbcb:      b8 00 00 00 00               	mov eax, 0
0xbd0:      e8 ab fc ff ff               	call 0x880 <printf>
0xbd5:      90                           	nop 
0xbd6:      c9                           	leave 
0xbd7:      c3                           	ret 
; function: printLongLongLine at 0xbd8 -- 0xbff
0xbd8:      55                           	push rbp
0xbd9:      48 89 e5                     	mov rbp, rsp
0xbdc:      48 83 ec 10                  	sub rsp, 0x10
0xbe0:      48 89 7d f8                  	mov qword ptr [rbp - 8], rdi
0xbe4:      48 8b 45 f8                  	mov rax, qword ptr [rbp - 8]
0xbe8:      48 89 c6                     	mov rsi, rax
0xbeb:      48 8d 3d 07 05 00 00         	lea rdi, [rip + 0x507]
0xbf2:      b8 00 00 00 00               	mov eax, 0
0xbf7:      e8 84 fc ff ff               	call 0x880 <printf>
0xbfc:      90                           	nop 
0xbfd:      c9                           	leave 
0xbfe:      c3                           	ret 
; function: printSizeTLine at 0xbff -- 0xc26
0xbff:      55                           	push rbp
0xc00:      48 89 e5                     	mov rbp, rsp
0xc03:      48 83 ec 10                  	sub rsp, 0x10
0xc07:      48 89 7d f8                  	mov qword ptr [rbp - 8], rdi
0xc0b:      48 8b 45 f8                  	mov rax, qword ptr [rbp - 8]
0xc0f:      48 89 c6                     	mov rsi, rax
0xc12:      48 8d 3d e5 04 00 00         	lea rdi, [rip + 0x4e5]
0xc19:      b8 00 00 00 00               	mov eax, 0
0xc1e:      e8 5d fc ff ff               	call 0x880 <printf>
0xc23:      90                           	nop 
0xc24:      c9                           	leave 
0xc25:      c3                           	ret 
; function: printHexCharLine at 0xc26 -- 0xc4d
0xc26:      55                           	push rbp
0xc27:      48 89 e5                     	mov rbp, rsp
0xc2a:      48 83 ec 10                  	sub rsp, 0x10
0xc2e:      89 f8                        	mov eax, edi
0xc30:      88 45 fc                     	mov byte ptr [rbp - 4], al
0xc33:      0f be 45 fc                  	movsx eax, byte ptr [rbp - 4]
0xc37:      89 c6                        	mov esi, eax
0xc39:      48 8d 3d c3 04 00 00         	lea rdi, [rip + 0x4c3]
0xc40:      b8 00 00 00 00               	mov eax, 0
0xc45:      e8 36 fc ff ff               	call 0x880 <printf>
0xc4a:      90                           	nop 
0xc4b:      c9                           	leave 
0xc4c:      c3                           	ret 
; function: printWcharLine at 0xc4d -- 0xca3
0xc4d:      55                           	push rbp
0xc4e:      48 89 e5                     	mov rbp, rsp
0xc51:      48 83 ec 20                  	sub rsp, 0x20
0xc55:      89 7d ec                     	mov dword ptr [rbp - 0x14], edi
0xc58:      64 48 8b 04 25 28 00 00 00   	mov rax, qword ptr fs:[0x28]
0xc61:      48 89 45 f8                  	mov qword ptr [rbp - 8], rax
0xc65:      31 c0                        	xor eax, eax
0xc67:      8b 45 ec                     	mov eax, dword ptr [rbp - 0x14]
0xc6a:      89 45 f0                     	mov dword ptr [rbp - 0x10], eax
0xc6d:      c7 45 f4 00 00 00 00         	mov dword ptr [rbp - 0xc], 0
0xc74:      48 8d 45 f0                  	lea rax, [rbp - 0x10]
0xc78:      48 89 c6                     	mov rsi, rax
0xc7b:      48 8d 3d 87 04 00 00         	lea rdi, [rip + 0x487]
0xc82:      b8 00 00 00 00               	mov eax, 0
0xc87:      e8 f4 fb ff ff               	call 0x880 <printf>
0xc8c:      90                           	nop 
0xc8d:      48 8b 45 f8                  	mov rax, qword ptr [rbp - 8]
0xc91:      64 48 33 04 25 28 00 00 00   	xor rax, qword ptr fs:[0x28]
0xc9a:      74 05                        	je 0xca1 <printWcharLine+0x54>
0xc9c:      e8 cf fb ff ff               	call 0x870 <__stack_chk_fail>
0xca1:      c9                           	leave 
0xca2:      c3                           	ret 
; function: printUnsignedLine at 0xca3 -- 0xcc7
0xca3:      55                           	push rbp
0xca4:      48 89 e5                     	mov rbp, rsp
0xca7:      48 83 ec 10                  	sub rsp, 0x10
0xcab:      89 7d fc                     	mov dword ptr [rbp - 4], edi
0xcae:      8b 45 fc                     	mov eax, dword ptr [rbp - 4]
0xcb1:      89 c6                        	mov esi, eax
0xcb3:      48 8d 3d 54 04 00 00         	lea rdi, [rip + 0x454]
0xcba:      b8 00 00 00 00               	mov eax, 0
0xcbf:      e8 bc fb ff ff               	call 0x880 <printf>
0xcc4:      90                           	nop 
0xcc5:      c9                           	leave 
0xcc6:      c3                           	ret 
; function: printHexUnsignedCharLine at 0xcc7 -- 0xcee
0xcc7:      55                           	push rbp
0xcc8:      48 89 e5                     	mov rbp, rsp
0xccb:      48 83 ec 10                  	sub rsp, 0x10
0xccf:      89 f8                        	mov eax, edi
0xcd1:      88 45 fc                     	mov byte ptr [rbp - 4], al
0xcd4:      0f b6 45 fc                  	movzx eax, byte ptr [rbp - 4]
0xcd8:      89 c6                        	mov esi, eax
0xcda:      48 8d 3d 22 04 00 00         	lea rdi, [rip + 0x422]
0xce1:      b8 00 00 00 00               	mov eax, 0
0xce6:      e8 95 fb ff ff               	call 0x880 <printf>
0xceb:      90                           	nop 
0xcec:      c9                           	leave 
0xced:      c3                           	ret 
; function: printDoubleLine at 0xcee -- 0xd1c
0xcee:      55                           	push rbp
0xcef:      48 89 e5                     	mov rbp, rsp
0xcf2:      48 83 ec 10                  	sub rsp, 0x10
0xcf6:      f2 0f 11 45 f8               	movsd qword ptr [rbp - 8], xmm0
0xcfb:      48 8b 45 f8                  	mov rax, qword ptr [rbp - 8]
0xcff:      48 89 45 f0                  	mov qword ptr [rbp - 0x10], rax
0xd03:      f2 0f 10 45 f0               	movsd xmm0, qword ptr [rbp - 0x10]
0xd08:      48 8d 3d 03 04 00 00         	lea rdi, [rip + 0x403]
0xd0f:      b8 01 00 00 00               	mov eax, 1
0xd14:      e8 67 fb ff ff               	call 0x880 <printf>
0xd19:      90                           	nop 
0xd1a:      c9                           	leave 
0xd1b:      c3                           	ret 
; function: printStructLine at 0xd1c -- 0xd4b
0xd1c:      55                           	push rbp
0xd1d:      48 89 e5                     	mov rbp, rsp
0xd20:      48 83 ec 10                  	sub rsp, 0x10
0xd24:      48 89 7d f8                  	mov qword ptr [rbp - 8], rdi
0xd28:      48 8b 45 f8                  	mov rax, qword ptr [rbp - 8]
0xd2c:      8b 50 04                     	mov edx, dword ptr [rax + 4]
0xd2f:      48 8b 45 f8                  	mov rax, qword ptr [rbp - 8]
0xd33:      8b 00                        	mov eax, dword ptr [rax]
0xd35:      89 c6                        	mov esi, eax
0xd37:      48 8d 3d d8 03 00 00         	lea rdi, [rip + 0x3d8]
0xd3e:      b8 00 00 00 00               	mov eax, 0
0xd43:      e8 38 fb ff ff               	call 0x880 <printf>
0xd48:      90                           	nop 
0xd49:      c9                           	leave 
0xd4a:      c3                           	ret 
; function: printBytesLine at 0xd4b -- 0xda7
0xd4b:      55                           	push rbp
0xd4c:      48 89 e5                     	mov rbp, rsp
0xd4f:      48 83 ec 20                  	sub rsp, 0x20
0xd53:      48 89 7d e8                  	mov qword ptr [rbp - 0x18], rdi
0xd57:      48 89 75 e0                  	mov qword ptr [rbp - 0x20], rsi
0xd5b:      48 c7 45 f8 00 00 00 00      	mov qword ptr [rbp - 8], 0
0xd63:      eb 29                        	jmp 0xd8e <printBytesLine+0x43>
0xd65:      48 8b 55 e8                  	mov rdx, qword ptr [rbp - 0x18]
0xd69:      48 8b 45 f8                  	mov rax, qword ptr [rbp - 8]
0xd6d:      48 01 d0                     	add rax, rdx
0xd70:      0f b6 00                     	movzx eax, byte ptr [rax]
0xd73:      0f b6 c0                     	movzx eax, al
0xd76:      89 c6                        	mov esi, eax
0xd78:      48 8d 3d a1 03 00 00         	lea rdi, [rip + 0x3a1]
0xd7f:      b8 00 00 00 00               	mov eax, 0
0xd84:      e8 f7 fa ff ff               	call 0x880 <printf>
0xd89:      48 83 45 f8 01               	add qword ptr [rbp - 8], 1
0xd8e:      48 8b 45 f8                  	mov rax, qword ptr [rbp - 8]
0xd92:      48 3b 45 e0                  	cmp rax, qword ptr [rbp - 0x20]
0xd96:      72 cd                        	jb 0xd65 <printBytesLine+0x1a>
0xd98:      48 8d 3d 86 03 00 00         	lea rdi, [rip + 0x386]
0xd9f:      e8 ac fa ff ff               	call 0x850 <puts>
0xda4:      90                           	nop 
0xda5:      c9                           	leave 
0xda6:      c3                           	ret 
; function: decodeHexChars at 0xda7 -- 0xea5
0xda7:      55                           	push rbp
0xda8:      48 89 e5                     	mov rbp, rsp
0xdab:      48 83 ec 40                  	sub rsp, 0x40
0xdaf:      48 89 7d d8                  	mov qword ptr [rbp - 0x28], rdi
0xdb3:      48 89 75 d0                  	mov qword ptr [rbp - 0x30], rsi
0xdb7:      48 89 55 c8                  	mov qword ptr [rbp - 0x38], rdx
0xdbb:      64 48 8b 04 25 28 00 00 00   	mov rax, qword ptr fs:[0x28]
0xdc4:      48 89 45 f8                  	mov qword ptr [rbp - 8], rax
0xdc8:      31 c0                        	xor eax, eax
0xdca:      48 c7 45 f0 00 00 00 00      	mov qword ptr [rbp - 0x10], 0
0xdd2:      eb 40                        	jmp 0xe14 <decodeHexChars+0x6d>
0xdd4:      48 8b 45 f0                  	mov rax, qword ptr [rbp - 0x10]
0xdd8:      48 8d 14 00                  	lea rdx, [rax + rax]
0xddc:      48 8b 45 c8                  	mov rax, qword ptr [rbp - 0x38]
0xde0:      48 8d 0c 02                  	lea rcx, [rdx + rax]
0xde4:      48 8d 45 ec                  	lea rax, [rbp - 0x14]
0xde8:      48 89 c2                     	mov rdx, rax
0xdeb:      48 8d 35 2e 03 00 00         	lea rsi, [rip + 0x32e]
0xdf2:      48 89 cf                     	mov rdi, rcx
0xdf5:      b8 00 00 00 00               	mov eax, 0
0xdfa:      e8 d1 fa ff ff               	call 0x8d0 <sscanf>
0xdff:      8b 55 ec                     	mov edx, dword ptr [rbp - 0x14]
0xe02:      48 8b 4d d8                  	mov rcx, qword ptr [rbp - 0x28]
0xe06:      48 8b 45 f0                  	mov rax, qword ptr [rbp - 0x10]
0xe0a:      48 01 c8                     	add rax, rcx
0xe0d:      88 10                        	mov byte ptr [rax], dl
0xe0f:      48 83 45 f0 01               	add qword ptr [rbp - 0x10], 1
0xe14:      48 8b 45 f0                  	mov rax, qword ptr [rbp - 0x10]
0xe18:      48 3b 45 d0                  	cmp rax, qword ptr [rbp - 0x30]
0xe1c:      73 6d                        	jae 0xe8b <decodeHexChars+0xe4>
0xe1e:      e8 cd fa ff ff               	call 0x8f0 <__ctype_b_loc>
0xe23:      48 8b 00                     	mov rax, qword ptr [rax]
0xe26:      48 8b 55 f0                  	mov rdx, qword ptr [rbp - 0x10]
0xe2a:      48 8d 0c 12                  	lea rcx, [rdx + rdx]
0xe2e:      48 8b 55 c8                  	mov rdx, qword ptr [rbp - 0x38]
0xe32:      48 01 ca                     	add rdx, rcx
0xe35:      0f b6 12                     	movzx edx, byte ptr [rdx]
0xe38:      48 0f be d2                  	movsx rdx, dl
0xe3c:      48 01 d2                     	add rdx, rdx
0xe3f:      48 01 d0                     	add rax, rdx
0xe42:      0f b7 00                     	movzx eax, word ptr [rax]
0xe45:      0f b7 c0                     	movzx eax, ax
0xe48:      25 00 10 00 00               	and eax, 0x1000
0xe4d:      85 c0                        	test eax, eax
0xe4f:      74 3a                        	je 0xe8b <decodeHexChars+0xe4>
0xe51:      e8 9a fa ff ff               	call 0x8f0 <__ctype_b_loc>
0xe56:      48 8b 00                     	mov rax, qword ptr [rax]
0xe59:      48 8b 55 f0                  	mov rdx, qword ptr [rbp - 0x10]
0xe5d:      48 01 d2                     	add rdx, rdx
0xe60:      48 8d 4a 01                  	lea rcx, [rdx + 1]
0xe64:      48 8b 55 c8                  	mov rdx, qword ptr [rbp - 0x38]
0xe68:      48 01 ca                     	add rdx, rcx
0xe6b:      0f b6 12                     	movzx edx, byte ptr [rdx]
0xe6e:      48 0f be d2                  	movsx rdx, dl
0xe72:      48 01 d2                     	add rdx, rdx
0xe75:      48 01 d0                     	add rax, rdx
0xe78:      0f b7 00                     	movzx eax, word ptr [rax]
0xe7b:      0f b7 c0                     	movzx eax, ax
0xe7e:      25 00 10 00 00               	and eax, 0x1000
0xe83:      85 c0                        	test eax, eax
0xe85:      0f 85 49 ff ff ff            	jne 0xdd4 <decodeHexChars+0x2d>
0xe8b:      48 8b 45 f0                  	mov rax, qword ptr [rbp - 0x10]
0xe8f:      48 8b 75 f8                  	mov rsi, qword ptr [rbp - 8]
0xe93:      64 48 33 34 25 28 00 00 00   	xor rsi, qword ptr fs:[0x28]
0xe9c:      74 05                        	je 0xea3 <decodeHexChars+0xfc>
0xe9e:      e8 cd f9 ff ff               	call 0x870 <__stack_chk_fail>
0xea3:      c9                           	leave 
0xea4:      c3                           	ret 
; function: decodeHexWChars at 0xea5 -- 0xf7e
0xea5:      55                           	push rbp
0xea6:      48 89 e5                     	mov rbp, rsp
0xea9:      48 83 ec 40                  	sub rsp, 0x40
0xead:      48 89 7d d8                  	mov qword ptr [rbp - 0x28], rdi
0xeb1:      48 89 75 d0                  	mov qword ptr [rbp - 0x30], rsi
0xeb5:      48 89 55 c8                  	mov qword ptr [rbp - 0x38], rdx
0xeb9:      64 48 8b 04 25 28 00 00 00   	mov rax, qword ptr fs:[0x28]
0xec2:      48 89 45 f8                  	mov qword ptr [rbp - 8], rax
0xec6:      31 c0                        	xor eax, eax
0xec8:      48 c7 45 f0 00 00 00 00      	mov qword ptr [rbp - 0x10], 0
0xed0:      eb 44                        	jmp 0xf16 <decodeHexWChars+0x71>
0xed2:      48 8b 45 f0                  	mov rax, qword ptr [rbp - 0x10]
0xed6:      48 8d 14 c5 00 00 00 00      	lea rdx, [rax*8]
0xede:      48 8b 45 c8                  	mov rax, qword ptr [rbp - 0x38]
0xee2:      48 8d 0c 02                  	lea rcx, [rdx + rax]
0xee6:      48 8d 45 ec                  	lea rax, [rbp - 0x14]
0xeea:      48 89 c2                     	mov rdx, rax
0xeed:      48 8d 35 34 02 00 00         	lea rsi, [rip + 0x234]
0xef4:      48 89 cf                     	mov rdi, rcx
0xef7:      b8 00 00 00 00               	mov eax, 0
0xefc:      e8 9f f9 ff ff               	call 0x8a0 <swscanf>
0xf01:      8b 55 ec                     	mov edx, dword ptr [rbp - 0x14]
0xf04:      48 8b 4d d8                  	mov rcx, qword ptr [rbp - 0x28]
0xf08:      48 8b 45 f0                  	mov rax, qword ptr [rbp - 0x10]
0xf0c:      48 01 c8                     	add rax, rcx
0xf0f:      88 10                        	mov byte ptr [rax], dl
0xf11:      48 83 45 f0 01               	add qword ptr [rbp - 0x10], 1
0xf16:      48 8b 45 f0                  	mov rax, qword ptr [rbp - 0x10]
0xf1a:      48 3b 45 d0                  	cmp rax, qword ptr [rbp - 0x30]
0xf1e:      73 44                        	jae 0xf64 <decodeHexWChars+0xbf>
0xf20:      48 8b 45 f0                  	mov rax, qword ptr [rbp - 0x10]
0xf24:      48 8d 14 c5 00 00 00 00      	lea rdx, [rax*8]
0xf2c:      48 8b 45 c8                  	mov rax, qword ptr [rbp - 0x38]
0xf30:      48 01 d0                     	add rax, rdx
0xf33:      8b 00                        	mov eax, dword ptr [rax]
0xf35:      89 c7                        	mov edi, eax
0xf37:      e8 24 f9 ff ff               	call 0x860 <iswxdigit>
0xf3c:      85 c0                        	test eax, eax
0xf3e:      74 24                        	je 0xf64 <decodeHexWChars+0xbf>
0xf40:      48 8b 45 f0                  	mov rax, qword ptr [rbp - 0x10]
0xf44:      48 c1 e0 03                  	shl rax, 3
0xf48:      48 8d 50 04                  	lea rdx, [rax + 4]
0xf4c:      48 8b 45 c8                  	mov rax, qword ptr [rbp - 0x38]
0xf50:      48 01 d0                     	add rax, rdx
0xf53:      8b 00                        	mov eax, dword ptr [rax]
0xf55:      89 c7                        	mov edi, eax
0xf57:      e8 04 f9 ff ff               	call 0x860 <iswxdigit>
0xf5c:      85 c0                        	test eax, eax
0xf5e:      0f 85 6e ff ff ff            	jne 0xed2 <decodeHexWChars+0x2d>
0xf64:      48 8b 45 f0                  	mov rax, qword ptr [rbp - 0x10]
0xf68:      48 8b 75 f8                  	mov rsi, qword ptr [rbp - 8]
0xf6c:      64 48 33 34 25 28 00 00 00   	xor rsi, qword ptr fs:[0x28]
0xf75:      74 05                        	je 0xf7c <decodeHexWChars+0xd7>
0xf77:      e8 f4 f8 ff ff               	call 0x870 <__stack_chk_fail>
0xf7c:      c9                           	leave 
0xf7d:      c3                           	ret 
; function: globalReturnsTrue at 0xf7e -- 0xf89
0xf7e:      55                           	push rbp
0xf7f:      48 89 e5                     	mov rbp, rsp
0xf82:      b8 01 00 00 00               	mov eax, 1
0xf87:      5d                           	pop rbp
0xf88:      c3                           	ret 
; function: globalReturnsFalse at 0xf89 -- 0xf94
0xf89:      55                           	push rbp
0xf8a:      48 89 e5                     	mov rbp, rsp
0xf8d:      b8 00 00 00 00               	mov eax, 0
0xf92:      5d                           	pop rbp
0xf93:      c3                           	ret 
; function: globalReturnsTrueOrFalse at 0xf94 -- 0xfb2
0xf94:      55                           	push rbp
0xf95:      48 89 e5                     	mov rbp, rsp
0xf98:      e8 43 f9 ff ff               	call 0x8e0 <rand>
0xf9d:      89 c2                        	mov edx, eax
0xf9f:      89 d0                        	mov eax, edx
0xfa1:      c1 f8 1f                     	sar eax, 0x1f
0xfa4:      c1 e8 1f                     	shr eax, 0x1f
0xfa7:      01 c2                        	add edx, eax
0xfa9:      83 e2 01                     	and edx, 1
0xfac:      29 c2                        	sub edx, eax
0xfae:      89 d0                        	mov eax, edx
0xfb0:      5d                           	pop rbp
0xfb1:      c3                           	ret 
; function: good1 at 0xfb2 -- 0xfb9
0xfb2:      55                           	push rbp
0xfb3:      48 89 e5                     	mov rbp, rsp
0xfb6:      90                           	nop 
0xfb7:      5d                           	pop rbp
0xfb8:      c3                           	ret 
; function: good2 at 0xfb9 -- 0xfc0
0xfb9:      55                           	push rbp
0xfba:      48 89 e5                     	mov rbp, rsp
0xfbd:      90                           	nop 
0xfbe:      5d                           	pop rbp
0xfbf:      c3                           	ret 
; function: good3 at 0xfc0 -- 0xfc7
0xfc0:      55                           	push rbp
0xfc1:      48 89 e5                     	mov rbp, rsp
0xfc4:      90                           	nop 
0xfc5:      5d                           	pop rbp
0xfc6:      c3                           	ret 
; function: good4 at 0xfc7 -- 0xfce
0xfc7:      55                           	push rbp
0xfc8:      48 89 e5                     	mov rbp, rsp
0xfcb:      90                           	nop 
0xfcc:      5d                           	pop rbp
0xfcd:      c3                           	ret 
; function: good5 at 0xfce -- 0xfd5
0xfce:      55                           	push rbp
0xfcf:      48 89 e5                     	mov rbp, rsp
0xfd2:      90                           	nop 
0xfd3:      5d                           	pop rbp
0xfd4:      c3                           	ret 
; function: good6 at 0xfd5 -- 0xfdc
0xfd5:      55                           	push rbp
0xfd6:      48 89 e5                     	mov rbp, rsp
0xfd9:      90                           	nop 
0xfda:      5d                           	pop rbp
0xfdb:      c3                           	ret 
; function: good7 at 0xfdc -- 0xfe3
0xfdc:      55                           	push rbp
0xfdd:      48 89 e5                     	mov rbp, rsp
0xfe0:      90                           	nop 
0xfe1:      5d                           	pop rbp
0xfe2:      c3                           	ret 
; function: good8 at 0xfe3 -- 0xfea
0xfe3:      55                           	push rbp
0xfe4:      48 89 e5                     	mov rbp, rsp
0xfe7:      90                           	nop 
0xfe8:      5d                           	pop rbp
0xfe9:      c3                           	ret 
; function: good9 at 0xfea -- 0xff1
0xfea:      55                           	push rbp
0xfeb:      48 89 e5                     	mov rbp, rsp
0xfee:      90                           	nop 
0xfef:      5d                           	pop rbp
0xff0:      c3                           	ret 
; function: bad1 at 0xff1 -- 0xff8
0xff1:      55                           	push rbp
0xff2:      48 89 e5                     	mov rbp, rsp
0xff5:      90                           	nop 
0xff6:      5d                           	pop rbp
0xff7:      c3                           	ret 
; function: bad2 at 0xff8 -- 0xfff
0xff8:      55                           	push rbp
0xff9:      48 89 e5                     	mov rbp, rsp
0xffc:      90                           	nop 
0xffd:      5d                           	pop rbp
0xffe:      c3                           	ret 
; function: bad3 at 0xfff -- 0x1006
0xfff:      55                           	push rbp
0x1000:     48 89 e5                     	mov rbp, rsp
0x1003:     90                           	nop 
0x1004:     5d                           	pop rbp
0x1005:     c3                           	ret 
; function: bad4 at 0x1006 -- 0x100d
0x1006:     55                           	push rbp
0x1007:     48 89 e5                     	mov rbp, rsp
0x100a:     90                           	nop 
0x100b:     5d                           	pop rbp
0x100c:     c3                           	ret 
; function: bad5 at 0x100d -- 0x1014
0x100d:     55                           	push rbp
0x100e:     48 89 e5                     	mov rbp, rsp
0x1011:     90                           	nop 
0x1012:     5d                           	pop rbp
0x1013:     c3                           	ret 
; function: bad6 at 0x1014 -- 0x101b
0x1014:     55                           	push rbp
0x1015:     48 89 e5                     	mov rbp, rsp
0x1018:     90                           	nop 
0x1019:     5d                           	pop rbp
0x101a:     c3                           	ret 
; function: bad7 at 0x101b -- 0x1022
0x101b:     55                           	push rbp
0x101c:     48 89 e5                     	mov rbp, rsp
0x101f:     90                           	nop 
0x1020:     5d                           	pop rbp
0x1021:     c3                           	ret 
; function: bad8 at 0x1022 -- 0x1029
0x1022:     55                           	push rbp
0x1023:     48 89 e5                     	mov rbp, rsp
0x1026:     90                           	nop 
0x1027:     5d                           	pop rbp
0x1028:     c3                           	ret 
; function: bad9 at 0x1029 -- 0x1030
0x1029:     55                           	push rbp
0x102a:     48 89 e5                     	mov rbp, rsp
0x102d:     90                           	nop 
0x102e:     5d                           	pop rbp
0x102f:     c3                           	ret 
; function: __libc_csu_init at 0x1030 -- 0x1095
0x1030:     41 57                        	push r15
0x1032:     41 56                        	push r14
0x1034:     49 89 d7                     	mov r15, rdx
0x1037:     41 55                        	push r13
0x1039:     41 54                        	push r12
0x103b:     4c 8d 25 1e 0d 20 00         	lea r12, [rip + 0x200d1e]
0x1042:     55                           	push rbp
0x1043:     48 8d 2d 1e 0d 20 00         	lea rbp, [rip + 0x200d1e]
0x104a:     53                           	push rbx
0x104b:     41 89 fd                     	mov r13d, edi
0x104e:     49 89 f6                     	mov r14, rsi
0x1051:     4c 29 e5                     	sub rbp, r12
0x1054:     48 83 ec 08                  	sub rsp, 8
0x1058:     48 c1 fd 03                  	sar rbp, 3
0x105c:     e8 af f7 ff ff               	call 0x810 <_init>
0x1061:     48 85 ed                     	test rbp, rbp
0x1064:     74 20                        	je 0x1086 <__libc_csu_init+0x56>
0x1066:     31 db                        	xor ebx, ebx
0x1068:     0f 1f 84 00 00 00 00 00      	nop dword ptr [rax + rax]
0x1070:     4c 89 fa                     	mov rdx, r15
0x1073:     4c 89 f6                     	mov rsi, r14
0x1076:     44 89 ef                     	mov edi, r13d
0x1079:     41 ff 14 dc                  	call qword ptr [r12 + rbx*8]
0x107d:     48 83 c3 01                  	add rbx, 1
0x1081:     48 39 dd                     	cmp rbp, rbx
0x1084:     75 ea                        	jne 0x1070 <__libc_csu_init+0x40>
0x1086:     48 83 c4 08                  	add rsp, 8
0x108a:     5b                           	pop rbx
0x108b:     5d                           	pop rbp
0x108c:     41 5c                        	pop r12
0x108e:     41 5d                        	pop r13
0x1090:     41 5e                        	pop r14
0x1092:     41 5f                        	pop r15
0x1094:     c3                           	ret 
; data inside code section at 0x1095 -- 0x10a0
0x1095:     90 66 2e 0f 1f 84 00 00  00 00 00                  |.f.........     |
; function: __libc_csu_fini at 0x10a0 -- 0x10a2
0x10a0:     f3 c3                        	ret 
; section: .fini
; function: _fini at 0x10a4 -- 0x10ad
0x10a4:     48 83 ec 08                  	sub rsp, 8
0x10a8:     48 83 c4 08                  	add rsp, 8
0x10ac:     c3                           	ret 

;;
;; Data Segment
;;

; section: .interp
0x238:      2f 6c 69 62 36 34 2f 6c  64 2d 6c 69 6e 75 78 2d   |/lib64/ld-linux-|
0x248:      78 38 36 2d 36 34 2e 73  6f 2e 32 00 04            |x86-64.so.2..   |
; section: .gnu.hash
0x298:      02 00 00 00 12 00 00 00  01 00 00 00 06 00 00 00   |................|
0x2a8:      00 00 20 00 80 00 00 00  00 00 00 00 12 00 00 00   |.. .............|
0x2b8:      67 55 61 10 ??                                     |gUa.?           |
; section: .dynsym
0x2c0:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2d0:      00 00 00 00 00 00 00 00  ce 00 00 00 20 00 00 00   |............ ...|
0x2e0:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f0:      53 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |S...............|
0x300:      00 00 00 00 00 00 00 00  21 00 00 00 12 00 00 00   |........!.......|
0x310:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x320:      71 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |q...............|
0x330:      00 00 00 00 00 00 00 00  2b 00 00 00 12 00 00 00   |........+.......|
0x340:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x350:      8b 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x360:      00 00 00 00 00 00 00 00  92 00 00 00 12 00 00 00   |................|
0x370:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x380:      0b 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x390:      00 00 00 00 00 00 00 00  42 00 00 00 12 00 00 00   |........B.......|
0x3a0:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3b0:      ea 00 00 00 20 00 00 00  00 00 00 00 00 00 00 00   |.... ...........|
0x3c0:      00 00 00 00 00 00 00 00  26 00 00 00 12 00 00 00   |........&.......|
0x3d0:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3e0:      8a 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3f0:      00 00 00 00 00 00 00 00  11 00 00 00 12 00 00 00   |................|
0x400:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x410:      f9 00 00 00 20 00 00 00  00 00 00 00 00 00 00 00   |.... ...........|
0x420:      00 00 00 00 00 00 00 00  7b 00 00 00 22 00 00 00   |........{..."...|
0x430:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x440:      0c 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x450:      00 00 00 00 00 00 00 00  63 00 00 00 12 00 00 00   |........c.......|
0x460:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x470:      3c 00 00 00 11 00 18 00  20 20 20 00 00 00 00 00   |<.......   .....|
0x480:      08 00 00 00 00 00 00 00  00                        |.........       |
; section: .dynstr
0x488:      00 6c 69 62 63 2e 73 6f  2e 36 00 73 72 61 6e 64   |.libc.so.6.srand|
0x498:      00 5f 5f 69 73 6f 63 39  39 5f 73 73 63 61 6e 66   |.__isoc99_sscanf|
0x4a8:      00 70 75 74 73 00 74 69  6d 65 00 5f 5f 73 74 61   |.puts.time.__sta|
0x4b8:      63 6b 5f 63 68 6b 5f 66  61 69 6c 00 73 74 64 69   |ck_chk_fail.stdi|
0x4c8:      6e 00 5f 5f 69 73 6f 63  39 39 5f 73 77 73 63 61   |n.__isoc99_swsca|
0x4d8:      6e 66 00 5f 5f 69 73 6f  63 39 39 5f 66 73 63 61   |nf.__isoc99_fsca|
0x4e8:      6e 66 00 5f 5f 63 74 79  70 65 5f 62 5f 6c 6f 63   |nf.__ctype_b_loc|
0x4f8:      00 69 73 77 78 64 69 67  69 74 00 5f 5f 63 78 61   |.iswxdigit.__cxa|
0x508:      5f 66 69 6e 61 6c 69 7a  65 00 77 70 72 69 6e 74   |_finalize.wprint|
0x518:      66 00 5f 5f 6c 69 62 63  5f 73 74 61 72 74 5f 6d   |f.__libc_start_m|
0x528:      61 69 6e 00 47 4c 49 42  43 5f 32 2e 33 00 47 4c   |ain.GLIBC_2.3.GL|
0x538:      49 42 43 5f 32 2e 34 00  47 4c 49 42 43 5f 32 2e   |IBC_2.4.GLIBC_2.|
0x548:      32 2e 35 00 47 4c 49 42  43 5f 32 2e 37 00 5f 49   |2.5.GLIBC_2.7._I|
0x558:      54 4d 5f 64 65 72 65 67  69 73 74 65 72 54 4d 43   |TM_deregisterTMC|
0x568:      6c 6f 6e 65 54 61 62 6c  65 00 5f 5f 67 6d 6f 6e   |loneTable.__gmon|
0x578:      5f 73 74 61 72 74 5f 5f  00 5f 49 54 4d 5f 72 65   |_start__._ITM_re|
0x588:      67 69 73 74 65 72 54 4d  43 6c 6f 6e 65 54 61 62   |gisterTMCloneTab|
0x598:      6c 65 00 ??                                        |le.?            |
; section: .gnu.version
0x59c:      00 00 00 00 02 00 03 00  03 00 04 00 03 00 03 00   |................|
0x5ac:      03 00 02 00 00 00 03 00  03 00 02 00 00 00 03 00   |................|
0x5bc:      03 00 05 00 03 00 ??                               |......?         |
; section: .gnu.version_r
0x5c8:      01 00 04 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x5d8:      13 69 69 0d 00 00 05 00  a4 00 00 00 10 00 00 00   |.ii.............|
0x5e8:      14 69 69 0d 00 00 04 00  ae 00 00 00 10 00 00 00   |.ii.............|
0x5f8:      75 1a 69 09 00 00 03 00  b8 00 00 00 10 00 00 00   |u.i.............|
0x608:      17 69 69 0d 00 00 02 00  c4 00 00 00 00 00 00 00   |.ii.............|
0x618:      60                                                 |`               |
; section: .rela.dyn
0x618:      60 1d 20 00 00 00 00 00  08 00 00 00 00 00 00 00   |`. .............|
0x628:      10 0a 00 00 00 00 00 00  68 1d 20 00 00 00 00 00   |........h. .....|
0x638:      08 00 00 00 00 00 00 00  d0 09 00 00 00 00 00 00   |................|
0x648:      08 20 20 00 00 00 00 00  08 00 00 00 00 00 00 00   |.  .............|
0x658:      08 20 20 00 00 00 00 00  d8 1f 20 00 00 00 00 00   |.  ....... .....|
0x668:      06 00 00 00 01 00 00 00  00 00 00 00 00 00 00 00   |................|
0x678:      e0 1f 20 00 00 00 00 00  06 00 00 00 07 00 00 00   |.. .............|
0x688:      00 00 00 00 00 00 00 00  e8 1f 20 00 00 00 00 00   |.......... .....|
0x698:      06 00 00 00 0a 00 00 00  00 00 00 00 00 00 00 00   |................|
0x6a8:      f0 1f 20 00 00 00 00 00  06 00 00 00 0e 00 00 00   |.. .............|
0x6b8:      00 00 00 00 00 00 00 00  f8 1f 20 00 00 00 00 00   |.......... .....|
0x6c8:      06 00 00 00 0f 00 00 00  00 00 00 00 00 00 00 00   |................|
0x6d8:      20 20 20 00 00 00 00 00  05 00 00 00 12 00 00 00   |   .............|
0x6e8:      00 00 00 00 00 00 00 00  78                        |........x       |
; section: .rela.plt
0x6f0:      78 1f 20 00 00 00 00 00  07 00 00 00 02 00 00 00   |x. .............|
0x700:      00 00 00 00 00 00 00 00  80 1f 20 00 00 00 00 00   |.......... .....|
0x710:      07 00 00 00 03 00 00 00  00 00 00 00 00 00 00 00   |................|
0x720:      88 1f 20 00 00 00 00 00  07 00 00 00 04 00 00 00   |.. .............|
0x730:      00 00 00 00 00 00 00 00  90 1f 20 00 00 00 00 00   |.......... .....|
0x740:      07 00 00 00 05 00 00 00  00 00 00 00 00 00 00 00   |................|
0x750:      98 1f 20 00 00 00 00 00  07 00 00 00 06 00 00 00   |.. .............|
0x760:      00 00 00 00 00 00 00 00  a0 1f 20 00 00 00 00 00   |.......... .....|
0x770:      07 00 00 00 08 00 00 00  00 00 00 00 00 00 00 00   |................|
0x780:      a8 1f 20 00 00 00 00 00  07 00 00 00 09 00 00 00   |.. .............|
0x790:      00 00 00 00 00 00 00 00  b0 1f 20 00 00 00 00 00   |.......... .....|
0x7a0:      07 00 00 00 0b 00 00 00  00 00 00 00 00 00 00 00   |................|
0x7b0:      b8 1f 20 00 00 00 00 00  07 00 00 00 0c 00 00 00   |.. .............|
0x7c0:      00 00 00 00 00 00 00 00  c0 1f 20 00 00 00 00 00   |.......... .....|
0x7d0:      07 00 00 00 0d 00 00 00  00 00 00 00 00 00 00 00   |................|
0x7e0:      c8 1f 20 00 00 00 00 00  07 00 00 00 10 00 00 00   |.. .............|
0x7f0:      00 00 00 00 00 00 00 00  d0 1f 20 00 00 00 00 00   |.......... .....|
0x800:      07 00 00 00 11 00 00 00  00 00 00 00 00 00 00 00   |................|
0x810:      48                                                 |H               |
; section: .rodata
0x10b0:     01 00 02 00                                        |....            |
0x10b4:     25 68 64 00                                        |%hd.            |   "%hd"
0x10b8:     43 61 6c 6c 69 6e 67 20  62 61 64 28 29 2e 2e 2e   |Calling bad()...|   "Calling bad()..."
0x10c8:     00                                                 |.               |
0x10c9:     46 69 6e 69 73 68 65 64  20 62 61 64 28 29 00      |Finished bad(). |   "Finished bad()"
0x10d8:     25 00 00 00 6c 00 00 00  73 00 00 00 0a 00 00 00   |%...l...s.......|   L"%ls\n"
0x10e8:     00 00 00 00                                        |....            |
0x10ec:     25 64 0a 00                                        |%d..            |   "%d\n"
0x10f0:     25 68 64 0a 00                                     |%hd..           |   "%hd\n"
0x10f5:     25 66 0a 00                                        |%f..            |   "%f\n"
0x10f9:     25 6c 64 0a 00                                     |%ld..           |   "%ld\n"
0x10fe:     25 7a 75 0a 00                                     |%zu..           |   "%zu\n"
0x1103:     25 30 32 78 0a 00                                  |%02x..          |   "%02x\n"
0x1109:     25 6c 73 0a 00                                     |%ls..           |   "%ls\n"
0x110e:     25 75 0a 00                                        |%u..            |   "%u\n"
0x1112:     25 67 0a 00                                        |%g..            |   "%g\n"
0x1116:     25 64 20 2d 2d 20 25 64  0a 00                     |%d -- %d..      |   "%d -- %d\n"
0x1120:     25 30 32 78 00                                     |%02x.           |   "%02x"
0x1125:     00 00 00                                           |...             |
0x1128:     25 00 00 00 30 00 00 00  32 00 00 00 78 00 00 00   |%...0...2...x...|   L"%02x"
0x1138:     00 00 00 00                                        |....            |
0x113c:     01 00 00 00 00 00 00 00  05 00 00 00 01            |.............   |
; section: .eh_frame_hdr
0x1148:     01 1b 03 3b 7c 01 00 00  2e 00 00 00 e8 f6 ff ff   |...;|...........|
0x1158:     c8 01 00 00 b8 f7 ff ff  f0 01 00 00 c8 f7 ff ff   |................|
0x1168:     98 01 00 00 d2 f8 ff ff  08 02 00 00 31 f9 ff ff   |............1...|
0x1178:     28 02 00 00 7a f9 ff ff  48 02 00 00 a7 f9 ff ff   |(...z...H.......|
0x1188:     68 02 00 00 c9 f9 ff ff  88 02 00 00 f7 f9 ff ff   |h...............|
0x1198:     a8 02 00 00 1b fa ff ff  c8 02 00 00 43 fa ff ff   |............C...|
0x11a8:     e8 02 00 00 69 fa ff ff  08 03 00 00 90 fa ff ff   |....i...........|
0x11b8:     28 03 00 00 b7 fa ff ff  48 03 00 00 de fa ff ff   |(.......H.......|
0x11c8:     68 03 00 00 05 fb ff ff  88 03 00 00 5b fb ff ff   |h...........[...|
0x11d8:     a8 03 00 00 7f fb ff ff  c8 03 00 00 a6 fb ff ff   |................|
0x11e8:     e8 03 00 00 d4 fb ff ff  08 04 00 00 03 fc ff ff   |................|
0x11f8:     28 04 00 00 5f fc ff ff  48 04 00 00 5d fd ff ff   |(..._...H...]...|
0x1208:     68 04 00 00 36 fe ff ff  88 04 00 00 41 fe ff ff   |h...6.......A...|
0x1218:     a8 04 00 00 4c fe ff ff  c8 04 00 00 6a fe ff ff   |....L.......j...|
0x1228:     e8 04 00 00 71 fe ff ff  08 05 00 00 78 fe ff ff   |....q.......x...|
0x1238:     28 05 00 00 7f fe ff ff  48 05 00 00 86 fe ff ff   |(.......H.......|
0x1248:     68 05 00 00 8d fe ff ff  88 05 00 00 94 fe ff ff   |h...............|
0x1258:     a8 05 00 00 9b fe ff ff  c8 05 00 00 a2 fe ff ff   |................|
0x1268:     e8 05 00 00 a9 fe ff ff  08 06 00 00 b0 fe ff ff   |................|
0x1278:     28 06 00 00 b7 fe ff ff  48 06 00 00 be fe ff ff   |(.......H.......|
0x1288:     68 06 00 00 c5 fe ff ff  88 06 00 00 cc fe ff ff   |h...............|
0x1298:     a8 06 00 00 d3 fe ff ff  c8 06 00 00 da fe ff ff   |................|
0x12a8:     e8 06 00 00 e1 fe ff ff  08 07 00 00 e8 fe ff ff   |................|
0x12b8:     28 07 00 00 58 ff ff ff  70 07 00 00 ??            |(...X...p...?   |
; section: .eh_frame
0x12c8:     14 00 00 00 00 00 00 00  01 7a 52 00 01 78 10 01   |.........zR..x..|
0x12d8:     1b 0c 07 08 90 01 07 10  14 00 00 00 1c 00 00 00   |................|
0x12e8:     28 f6 ff ff 2b 00 00 00  00 00 00 00 00 00 00 00   |(...+...........|
0x12f8:     14 00 00 00 00 00 00 00  01 7a 52 00 01 78 10 01   |.........zR..x..|
0x1308:     1b 0c 07 08 90 01 00 00  24 00 00 00 1c 00 00 00   |........$.......|
0x1318:     18 f5 ff ff d0 00 00 00  00 0e 10 46 0e 18 4a 0f   |...........F..J.|
0x1328:     0b 77 08 80 00 3f 1a 3b  2a 33 24 22 00 00 00 00   |.w...?.;*3$"....|
0x1338:     14 00 00 00 44 00 00 00  c0 f5 ff ff 08 00 00 00   |....D...........|
0x1348:     00 00 00 00 00 00 00 00  1c 00 00 00 5c 00 00 00   |............\...|
0x1358:     c2 f6 ff ff 5f 00 00 00  00 41 0e 10 86 02 43 0d   |...._....A....C.|
0x1368:     06 02 5a 0c 07 08 00 00  1c 00 00 00 7c 00 00 00   |..Z.........|...|
0x1378:     01 f7 ff ff 49 00 00 00  00 41 0e 10 86 02 43 0d   |....I....A....C.|
0x1388:     06 02 44 0c 07 08 00 00  1c 00 00 00 9c 00 00 00   |..D.............|
0x1398:     2a f7 ff ff 2d 00 00 00  00 41 0e 10 86 02 43 0d   |*...-....A....C.|
0x13a8:     06 68 0c 07 08 00 00 00  1c 00 00 00 bc 00 00 00   |.h..............|
0x13b8:     37 f7 ff ff 22 00 00 00  00 41 0e 10 86 02 43 0d   |7..."....A....C.|
0x13c8:     06 5d 0c 07 08 00 00 00  1c 00 00 00 dc 00 00 00   |.]..............|
0x13d8:     39 f7 ff ff 2e 00 00 00  00 41 0e 10 86 02 43 0d   |9........A....C.|
0x13e8:     06 69 0c 07 08 00 00 00  1c 00 00 00 fc 00 00 00   |.i..............|
0x13f8:     47 f7 ff ff 24 00 00 00  00 41 0e 10 86 02 43 0d   |G...$....A....C.|
0x1408:     06 5f 0c 07 08 00 00 00  1c 00 00 00 1c 01 00 00   |._..............|
0x1418:     4b f7 ff ff 28 00 00 00  00 41 0e 10 86 02 43 0d   |K...(....A....C.|
0x1428:     06 63 0c 07 08 00 00 00  1c 00 00 00 3c 01 00 00   |.c..........<...|
0x1438:     53 f7 ff ff 26 00 00 00  00 41 0e 10 86 02 43 0d   |S...&....A....C.|
0x1448:     06 61 0c 07 08 00 00 00  1c 00 00 00 5c 01 00 00   |.a..........\...|
0x1458:     59 f7 ff ff 27 00 00 00  00 41 0e 10 86 02 43 0d   |Y...'....A....C.|
0x1468:     06 62 0c 07 08 00 00 00  1c 00 00 00 7c 01 00 00   |.b..........|...|
0x1478:     60 f7 ff ff 27 00 00 00  00 41 0e 10 86 02 43 0d   |`...'....A....C.|
0x1488:     06 62 0c 07 08 00 00 00  1c 00 00 00 9c 01 00 00   |.b..............|
0x1498:     67 f7 ff ff 27 00 00 00  00 41 0e 10 86 02 43 0d   |g...'....A....C.|
0x14a8:     06 62 0c 07 08 00 00 00  1c 00 00 00 bc 01 00 00   |.b..............|
0x14b8:     6e f7 ff ff 27 00 00 00  00 41 0e 10 86 02 43 0d   |n...'....A....C.|
0x14c8:     06 62 0c 07 08 00 00 00  1c 00 00 00 dc 01 00 00   |.b..............|
0x14d8:     75 f7 ff ff 56 00 00 00  00 41 0e 10 86 02 43 0d   |u...V....A....C.|
0x14e8:     06 02 51 0c 07 08 00 00  1c 00 00 00 fc 01 00 00   |..Q.............|
0x14f8:     ab f7 ff ff 24 00 00 00  00 41 0e 10 86 02 43 0d   |....$....A....C.|
0x1508:     06 5f 0c 07 08 00 00 00  1c 00 00 00 1c 02 00 00   |._..............|
0x1518:     af f7 ff ff 27 00 00 00  00 41 0e 10 86 02 43 0d   |....'....A....C.|
0x1528:     06 62 0c 07 08 00 00 00  1c 00 00 00 3c 02 00 00   |.b..........<...|
0x1538:     b6 f7 ff ff 2e 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x1548:     06 69 0c 07 08 00 00 00  1c 00 00 00 5c 02 00 00   |.i..........\...|
0x1558:     c4 f7 ff ff 2f 00 00 00  00 41 0e 10 86 02 43 0d   |..../....A....C.|
0x1568:     06 6a 0c 07 08 00 00 00  1c 00 00 00 7c 02 00 00   |.j..........|...|
0x1578:     d3 f7 ff ff 5c 00 00 00  00 41 0e 10 86 02 43 0d   |....\....A....C.|
0x1588:     06 02 57 0c 07 08 00 00  1c 00 00 00 9c 02 00 00   |..W.............|
0x1598:     0f f8 ff ff fe 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x15a8:     06 02 f9 0c 07 08 00 00  1c 00 00 00 bc 02 00 00   |................|
0x15b8:     ed f8 ff ff d9 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x15c8:     06 02 d4 0c 07 08 00 00  1c 00 00 00 dc 02 00 00   |................|
0x15d8:     a6 f9 ff ff 0b 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x15e8:     06 46 0c 07 08 00 00 00  1c 00 00 00 fc 02 00 00   |.F..............|
0x15f8:     91 f9 ff ff 0b 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x1608:     06 46 0c 07 08 00 00 00  1c 00 00 00 1c 03 00 00   |.F..............|
0x1618:     7c f9 ff ff 1e 00 00 00  00 41 0e 10 86 02 43 0d   ||........A....C.|
0x1628:     06 59 0c 07 08 00 00 00  1c 00 00 00 3c 03 00 00   |.Y..........<...|
0x1638:     7a f9 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |z........A....C.|
0x1648:     06 42 0c 07 08 00 00 00  1c 00 00 00 5c 03 00 00   |.B..........\...|
0x1658:     61 f9 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |a........A....C.|
0x1668:     06 42 0c 07 08 00 00 00  1c 00 00 00 7c 03 00 00   |.B..........|...|
0x1678:     48 f9 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |H........A....C.|
0x1688:     06 42 0c 07 08 00 00 00  1c 00 00 00 9c 03 00 00   |.B..............|
0x1698:     2f f9 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |/........A....C.|
0x16a8:     06 42 0c 07 08 00 00 00  1c 00 00 00 bc 03 00 00   |.B..............|
0x16b8:     16 f9 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x16c8:     06 42 0c 07 08 00 00 00  1c 00 00 00 dc 03 00 00   |.B..............|
0x16d8:     fd f8 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x16e8:     06 42 0c 07 08 00 00 00  1c 00 00 00 fc 03 00 00   |.B..............|
0x16f8:     e4 f8 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x1708:     06 42 0c 07 08 00 00 00  1c 00 00 00 1c 04 00 00   |.B..............|
0x1718:     cb f8 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x1728:     06 42 0c 07 08 00 00 00  1c 00 00 00 3c 04 00 00   |.B..........<...|
0x1738:     b2 f8 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x1748:     06 42 0c 07 08 00 00 00  1c 00 00 00 5c 04 00 00   |.B..........\...|
0x1758:     99 f8 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x1768:     06 42 0c 07 08 00 00 00  1c 00 00 00 7c 04 00 00   |.B..........|...|
0x1778:     80 f8 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x1788:     06 42 0c 07 08 00 00 00  1c 00 00 00 9c 04 00 00   |.B..............|
0x1798:     67 f8 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |g........A....C.|
0x17a8:     06 42 0c 07 08 00 00 00  1c 00 00 00 bc 04 00 00   |.B..............|
0x17b8:     4e f8 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |N........A....C.|
0x17c8:     06 42 0c 07 08 00 00 00  1c 00 00 00 dc 04 00 00   |.B..............|
0x17d8:     35 f8 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |5........A....C.|
0x17e8:     06 42 0c 07 08 00 00 00  1c 00 00 00 fc 04 00 00   |.B..............|
0x17f8:     1c f8 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x1808:     06 42 0c 07 08 00 00 00  1c 00 00 00 1c 05 00 00   |.B..............|
0x1818:     03 f8 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x1828:     06 42 0c 07 08 00 00 00  1c 00 00 00 3c 05 00 00   |.B..........<...|
0x1838:     ea f7 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x1848:     06 42 0c 07 08 00 00 00  1c 00 00 00 5c 05 00 00   |.B..........\...|
0x1858:     d1 f7 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x1868:     06 42 0c 07 08 00 00 00  44 00 00 00 7c 05 00 00   |.B......D...|...|
0x1878:     b8 f7 ff ff 65 00 00 00  00 42 0e 10 8f 02 42 0e   |....e....B....B.|
0x1888:     18 8e 03 45 0e 20 8d 04  42 0e 28 8c 05 48 0e 30   |...E. ..B.(..H.0|
0x1898:     86 06 48 0e 38 83 07 4d  0e 40 72 0e 38 41 0e 30   |..H.8..M.@r.8A.0|
0x18a8:     41 0e 28 42 0e 20 42 0e  18 42 0e 10 42 0e 08 00   |A.(B. B..B..B...|
0x18b8:     10 00 00 00 c4 05 00 00  e0 f7 ff ff 02 00 00 00   |................|
0x18c8:     00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x201d60:   10 0a 00 00 00 00 00 00  d0                        |.........       |
; section: .fini_array
0x201d68:   d0 09 00 00 00 00 00 00  01                        |.........       |
; section: .dynamic
0x201d70:   01 00 00 00 00 00 00 00  01 00 00 00 00 00 00 00   |................|
0x201d80:   0c 00 00 00 00 00 00 00  10 08 00 00 00 00 00 00   |................|
0x201d90:   0d 00 00 00 00 00 00 00  a4 10 00 00 00 00 00 00   |................|
0x201da0:   19 00 00 00 00 00 00 00  60 1d 20 00 00 00 00 00   |........`. .....|
0x201db0:   1b 00 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |................|
0x201dc0:   1a 00 00 00 00 00 00 00  68 1d 20 00 00 00 00 00   |........h. .....|
0x201dd0:   1c 00 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |................|
0x201de0:   f5 fe ff 6f 00 00 00 00  98 02 00 00 00 00 00 00   |...o............|
0x201df0:   05 00 00 00 00 00 00 00  88 04 00 00 00 00 00 00   |................|
0x201e00:   06 00 00 00 00 00 00 00  c0 02 00 00 00 00 00 00   |................|
0x201e10:   0a 00 00 00 00 00 00 00  13 01 00 00 00 00 00 00   |................|
0x201e20:   0b 00 00 00 00 00 00 00  18 00 00 00 00 00 00 00   |................|
0x201e30:   15 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x201e40:   03 00 00 00 00 00 00 00  60 1f 20 00 00 00 00 00   |........`. .....|
0x201e50:   02 00 00 00 00 00 00 00  20 01 00 00 00 00 00 00   |........ .......|
0x201e60:   14 00 00 00 00 00 00 00  07 00 00 00 00 00 00 00   |................|
0x201e70:   17 00 00 00 00 00 00 00  f0 06 00 00 00 00 00 00   |................|
0x201e80:   07 00 00 00 00 00 00 00  18 06 00 00 00 00 00 00   |................|
0x201e90:   08 00 00 00 00 00 00 00  d8 00 00 00 00 00 00 00   |................|
0x201ea0:   09 00 00 00 00 00 00 00  18 00 00 00 00 00 00 00   |................|
0x201eb0:   1e 00 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |................|
0x201ec0:   fb ff ff 6f 00 00 00 00  01 00 00 08 00 00 00 00   |...o............|
0x201ed0:   fe ff ff 6f 00 00 00 00  c8 05 00 00 00 00 00 00   |...o............|
0x201ee0:   ff ff ff 6f 00 00 00 00  01 00 00 00 00 00 00 00   |...o............|
0x201ef0:   f0 ff ff 6f 00 00 00 00  9c 05 00 00 00 00 00 00   |...o............|
0x201f00:   f9 ff ff 6f 00 00 00 00  03 00 00 00 00 00 00 00   |...o............|
0x201f10:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x201f20:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x201f30:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x201f40:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x201f50:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x201f60:   70                                                 |p               |
; section: .got
0x201f60:   70 1d 20 00 00 00 00 00  00 00 00 00 00 00 00 00   |p. .............|
0x201f70:   00 00 00 00 00 00 00 00  46 08 00 00 00 00 00 00   |........F.......|
0x201f80:   56 08 00 00 00 00 00 00  66 08 00 00 00 00 00 00   |V.......f.......|
0x201f90:   76 08 00 00 00 00 00 00  86 08 00 00 00 00 00 00   |v...............|
0x201fa0:   96 08 00 00 00 00 00 00  a6 08 00 00 00 00 00 00   |................|
0x201fb0:   b6 08 00 00 00 00 00 00  c6 08 00 00 00 00 00 00   |................|
0x201fc0:   d6 08 00 00 00 00 00 00  e6 08 00 00 00 00 00 00   |................|
0x201fd0:   f6 08 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x201fe0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x201ff0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x202000:   00                                                 |.               |
; section: .data
0x202000:   00 00 00 00 00 00 00 00  08 20 20 00 00 00 00 00   |.........  .....|
0x202010:   01 00 00 00 05 00 00 00  ??                        |........?       |
