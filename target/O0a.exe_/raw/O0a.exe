//
// This file was generated by the Retargetable Decompiler
// Website: https://retdec.com
// Copyright (c) Retargetable Decompiler <info@retdec.com>
//

#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>

// ------------------- Function Prototypes --------------------

int32_t ___do_global_ctors(void);
int32_t ___main(void);
int32_t _overint(int32_t a1);
int32_t _un_overint(int32_t a1);

// --------------------- Global Variables ---------------------

int32_t g1 = -1; // 0x403c60
int32_t g2 = 0; // 0x407028

// ------------------------ Functions -------------------------

// Address range: 0x401460 - 0x401473
int32_t _overint(int32_t a1) {
    // 0x401460
    return 2 * a1;
}

// Address range: 0x401473 - 0x4014c0
int32_t _un_overint(int32_t a1) {
    if ((a1 & 0x40000000) != 0) {
        if (a1 >= 0 == (a1 != 0)) {
            // 0x401497
            printf("%d * 2  will over int", a1);
            // 0x4014bb
            return 0;
        }
    }
    int32_t result = 2 * a1; // 0x40148b
    if (result < 1 || a1 >= 0) {
        // 0x4014bb
        return result;
    }
    // 0x401497
    printf("%d * 2  will over int", a1);
    // 0x4014bb
    return 0;
}

// Address range: 0x4014c0 - 0x40154e
int main(int argc, char ** argv) {
    // 0x4014c0
    ___main();
    printf("input a int, and press enter");
    int32_t v1; // 0x4014c0
    scanf("%d", (int32_t *)v1);
    int32_t v2 = _overint(v1); // 0x4014f5
    int32_t v3 = _un_overint(v1); // 0x401505
    if (v3 != 0) {
        // 0x40152b
        printf("%d, %d", v2, v3);
    } else {
        // 0x401515
        printf("%d, 0", v2);
    }
    // 0x401547
    return 0;
}

// Address range: 0x401a30 - 0x401a76
int32_t ___do_global_ctors(void) {
    int32_t v1 = 0;
    int32_t v2 = v1 + 1; // 0x401a66
    while (*(int32_t *)(4 * v2 + (int32_t)&g1) != 0) {
        // 0x401a66
        v1 = v2;
        v2 = v1 + 1;
    }
    // 0x401a74
    if (v1 == 0) {
        // 0x401a4f
        return atexit((void (*)())0x401a00);
    }
    int32_t v3 = v1; // 0x401a41
    while (v3 != 1) {
        // 0x401a43
        v3--;
    }
    // 0x401a4f
    return atexit((void (*)())0x401a00);
}

// Address range: 0x401a80 - 0x401a9c
int32_t ___main(void) {
    int32_t result = g2; // 0x401a80
    if (result != 0) {
        // 0x401a89
        return result;
    }
    // 0x401a90
    g2 = 1;
    return ___do_global_ctors();
}

// --------------- Dynamically Linked Functions ---------------

// int atexit(void(* func)(void));
// int printf(const char * restrict format, ...);
// int scanf(const char * restrict format, ...);

// --------------------- Meta-Information ---------------------

// Detected compiler/packer: gcc (6.3.0)
// Detected language: C
// Detected functions: 5
