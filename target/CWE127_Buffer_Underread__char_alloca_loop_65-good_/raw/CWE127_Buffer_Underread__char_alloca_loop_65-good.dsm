;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2023 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2023-04-22 22:54:54
;; Architecture: x86-64
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x7c0 -- 0x7d7
0x7c0:      48 83 ec 08                  	sub rsp, 8
0x7c4:      48 8b 05 1d 18 20 00         	mov rax, qword ptr [rip + 0x20181d]
0x7cb:      48 85 c0                     	test rax, rax
0x7ce:      74 02                        	je 0x7d2 <_init+0x12>
0x7d0:      ff d0                        	call rax <__gmon_start__>
0x7d2:      48 83 c4 08                  	add rsp, 8
0x7d6:      c3                           	ret 
; section: .plt
; data inside code section at 0x7e0 -- 0x7f0
0x7e0:      ff 35 82 17 20 00 ff 25  84 17 20 00 0f 1f 40 00   |.5.. ..%.. ...@.|
; function: function_7f0 at 0x7f0 -- 0x7f6
0x7f0:      ff 25 82 17 20 00            	jmp qword ptr [rip + 0x201782] <puts>
; data inside code section at 0x7f6 -- 0x800
0x7f6:      68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_800 at 0x800 -- 0x806
0x800:      ff 25 7a 17 20 00            	jmp qword ptr [rip + 0x20177a] <iswxdigit>
; data inside code section at 0x806 -- 0x810
0x806:      68 01 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_810 at 0x810 -- 0x816
0x810:      ff 25 72 17 20 00            	jmp qword ptr [rip + 0x201772] <__stack_chk_fail>
; data inside code section at 0x816 -- 0x820
0x816:      68 02 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; function: function_820 at 0x820 -- 0x826
0x820:      ff 25 6a 17 20 00            	jmp qword ptr [rip + 0x20176a] <printf>
; data inside code section at 0x826 -- 0x830
0x826:      68 03 00 00 00 e9 b0 ff  ff ff                     |h.........      |
; function: function_830 at 0x830 -- 0x836
0x830:      ff 25 62 17 20 00            	jmp qword ptr [rip + 0x201762] <memset>
; data inside code section at 0x836 -- 0x840
0x836:      68 04 00 00 00 e9 a0 ff  ff ff                     |h.........      |
; function: function_840 at 0x840 -- 0x846
0x840:      ff 25 5a 17 20 00            	jmp qword ptr [rip + 0x20175a] <srand>
; data inside code section at 0x846 -- 0x850
0x846:      68 05 00 00 00 e9 90 ff  ff ff                     |h.........      |
; function: function_850 at 0x850 -- 0x856
0x850:      ff 25 52 17 20 00            	jmp qword ptr [rip + 0x201752] <swscanf>
; data inside code section at 0x856 -- 0x860
0x856:      68 06 00 00 00 e9 80 ff  ff ff                     |h.........      |
; function: function_860 at 0x860 -- 0x866
0x860:      ff 25 4a 17 20 00            	jmp qword ptr [rip + 0x20174a] <time>
; data inside code section at 0x866 -- 0x870
0x866:      68 07 00 00 00 e9 70 ff  ff ff                     |h.....p...      |
; function: function_870 at 0x870 -- 0x876
0x870:      ff 25 42 17 20 00            	jmp qword ptr [rip + 0x201742] <wprintf>
; data inside code section at 0x876 -- 0x880
0x876:      68 08 00 00 00 e9 60 ff  ff ff                     |h.....`...      |
; function: function_880 at 0x880 -- 0x886
0x880:      ff 25 3a 17 20 00            	jmp qword ptr [rip + 0x20173a] <sscanf>
; data inside code section at 0x886 -- 0x890
0x886:      68 09 00 00 00 e9 50 ff  ff ff                     |h.....P...      |
; function: function_890 at 0x890 -- 0x896
0x890:      ff 25 32 17 20 00            	jmp qword ptr [rip + 0x201732] <rand>
; data inside code section at 0x896 -- 0x8a0
0x896:      68 0a 00 00 00 e9 40 ff  ff ff                     |h.....@...      |
; function: function_8a0 at 0x8a0 -- 0x8a6
0x8a0:      ff 25 2a 17 20 00            	jmp qword ptr [rip + 0x20172a] <__ctype_b_loc>
; data inside code section at 0x8a6 -- 0x8b0
0x8a6:      68 0b 00 00 00 e9 30 ff  ff ff                     |h.....0...      |
; section: .plt.got
; function: function_8b0 at 0x8b0 -- 0x8b6
0x8b0:      ff 25 42 17 20 00            	jmp qword ptr [rip + 0x201742] <__cxa_finalize>
; data inside code section at 0x8b6 -- 0x8b8
0x8b6:      66 90                                              |f.              |
; section: .text
; function: _start at 0x8c0 -- 0x8eb
0x8c0:      31 ed                        	xor ebp, ebp
0x8c2:      49 89 d1                     	mov r9, rdx
0x8c5:      5e                           	pop rsi
0x8c6:      48 89 e2                     	mov rdx, rsp
0x8c9:      48 83 e4 f0                  	and rsp, 0xfffffffffffffff0
0x8cd:      50                           	push rax
0x8ce:      54                           	push rsp
0x8cf:      4c 8d 05 3a 08 00 00         	lea r8, [rip + 0x83a]
0x8d6:      48 8d 0d c3 07 00 00         	lea rcx, [rip + 0x7c3]
0x8dd:      48 8d 3d 9a 01 00 00         	lea rdi, [rip + 0x19a]
0x8e4:      ff 15 f6 16 20 00            	call qword ptr [rip + 0x2016f6] <__libc_start_main>
0x8ea:      f4                           	hlt 
; data inside code section at 0x8eb -- 0x8f0
0x8eb:      0f 1f 44 00 00                                     |..D..           |
; function: deregister_tm_clones at 0x8f0 -- 0x922
0x8f0:      48 8d 3d 21 17 20 00         	lea rdi, [rip + 0x201721]
0x8f7:      55                           	push rbp
0x8f8:      48 8d 05 19 17 20 00         	lea rax, [rip + 0x201719]
0x8ff:      48 39 f8                     	cmp rax, rdi
0x902:      48 89 e5                     	mov rbp, rsp
0x905:      74 19                        	je 0x920 <deregister_tm_clones+0x30>
0x907:      48 8b 05 ca 16 20 00         	mov rax, qword ptr [rip + 0x2016ca]
0x90e:      48 85 c0                     	test rax, rax
0x911:      74 0d                        	je 0x920 <deregister_tm_clones+0x30>
0x913:      5d                           	pop rbp
0x914:      ff e0                        	jmp rax <_ITM_deregisterTMCloneTable>
; data inside code section at 0x916 -- 0x920
0x916:      66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0x920:      5d                           	pop rbp
0x921:      c3                           	ret 
; data inside code section at 0x922 -- 0x930
0x922:      0f 1f 40 00 66 2e 0f 1f  84 00 00 00 00 00         |..@.f.........  |
; function: register_tm_clones at 0x930 -- 0x972
0x930:      48 8d 3d e1 16 20 00         	lea rdi, [rip + 0x2016e1]
0x937:      48 8d 35 da 16 20 00         	lea rsi, [rip + 0x2016da]
0x93e:      55                           	push rbp
0x93f:      48 29 fe                     	sub rsi, rdi
0x942:      48 89 e5                     	mov rbp, rsp
0x945:      48 c1 fe 03                  	sar rsi, 3
0x949:      48 89 f0                     	mov rax, rsi
0x94c:      48 c1 e8 3f                  	shr rax, 0x3f
0x950:      48 01 c6                     	add rsi, rax
0x953:      48 d1 fe                     	sar rsi, 1
0x956:      74 18                        	je 0x970 <register_tm_clones+0x40>
0x958:      48 8b 05 91 16 20 00         	mov rax, qword ptr [rip + 0x201691]
0x95f:      48 85 c0                     	test rax, rax
0x962:      74 0c                        	je 0x970 <register_tm_clones+0x40>
0x964:      5d                           	pop rbp
0x965:      ff e0                        	jmp rax <_ITM_registerTMCloneTable>
; data inside code section at 0x967 -- 0x970
0x967:      66 0f 1f 84 00 00 00 00  00                        |f........       |
0x970:      5d                           	pop rbp
0x971:      c3                           	ret 
; data inside code section at 0x972 -- 0x980
0x972:      0f 1f 40 00 66 2e 0f 1f  84 00 00 00 00 00         |..@.f.........  |
; function: __do_global_dtors_aux at 0x980 -- 0x9ba
0x980:      80 3d 91 16 20 00 00         	cmp byte ptr [rip + 0x201691], 0
0x987:      75 2f                        	jne 0x9b8 <__do_global_dtors_aux+0x38>
0x989:      48 83 3d 67 16 20 00 00      	cmp qword ptr [rip + 0x201667], 0
0x991:      55                           	push rbp
0x992:      48 89 e5                     	mov rbp, rsp
0x995:      74 0c                        	je 0x9a3 <__do_global_dtors_aux+0x23>
0x997:      48 8b 3d 6a 16 20 00         	mov rdi, qword ptr [rip + 0x20166a]
0x99e:      e8 0d ff ff ff               	call 0x8b0 <__cxa_finalize>
0x9a3:      e8 48 ff ff ff               	call 0x8f0 <deregister_tm_clones>
0x9a8:      c6 05 69 16 20 00 01         	mov byte ptr [rip + 0x201669], 1
0x9af:      5d                           	pop rbp
0x9b0:      c3                           	ret 
; data inside code section at 0x9b1 -- 0x9b8
0x9b1:      0f 1f 80 00 00 00 00                               |.......         |
0x9b8:      f3 c3                        	ret 
; data inside code section at 0x9ba -- 0x9c0
0x9ba:      66 0f 1f 44 00 00                                  |f..D..          |
; function: frame_dummy at 0x9c0 -- 0x9ca
0x9c0:      55                           	push rbp
0x9c1:      48 89 e5                     	mov rbp, rsp
0x9c4:      5d                           	pop rbp
0x9c5:      e9 66 ff ff ff               	jmp 0x930 <register_tm_clones>
; function: goodG2B at 0x9ca -- 0xa6d
0x9ca:      55                           	push rbp
0x9cb:      48 89 e5                     	mov rbp, rsp
0x9ce:      48 83 ec 20                  	sub rsp, 0x20
0x9d2:      64 48 8b 04 25 28 00 00 00   	mov rax, qword ptr fs:[0x28]
0x9db:      48 89 45 f8                  	mov qword ptr [rbp - 8], rax
0x9df:      31 c0                        	xor eax, eax
0x9e1:      48 8d 05 df 00 00 00         	lea rax, [rip + 0xdf]
0x9e8:      48 89 45 e0                  	mov qword ptr [rbp - 0x20], rax
0x9ec:      b8 10 00 00 00               	mov eax, 0x10
0x9f1:      48 83 e8 01                  	sub rax, 1
0x9f5:      48 83 c0 73                  	add rax, 0x73
0x9f9:      b9 10 00 00 00               	mov ecx, 0x10
0x9fe:      ba 00 00 00 00               	mov edx, 0
0xa03:      48 f7 f1                     	div rcx
0xa06:      48 6b c0 10                  	imul rax, rax, 0x10
0xa0a:      48 29 c4                     	sub rsp, rax
0xa0d:      48 89 e0                     	mov rax, rsp
0xa10:      48 83 c0 0f                  	add rax, 0xf
0xa14:      48 c1 e8 04                  	shr rax, 4
0xa18:      48 c1 e0 04                  	shl rax, 4
0xa1c:      48 89 45 e8                  	mov qword ptr [rbp - 0x18], rax
0xa20:      48 8b 45 e8                  	mov rax, qword ptr [rbp - 0x18]
0xa24:      ba 63 00 00 00               	mov edx, 0x63
0xa29:      be 41 00 00 00               	mov esi, 0x41
0xa2e:      48 89 c7                     	mov rdi, rax
0xa31:      e8 fa fd ff ff               	call 0x830 <memset>
0xa36:      48 8b 45 e8                  	mov rax, qword ptr [rbp - 0x18]
0xa3a:      48 83 c0 63                  	add rax, 0x63
0xa3e:      c6 00 00                     	mov byte ptr [rax], 0
0xa41:      48 8b 45 e8                  	mov rax, qword ptr [rbp - 0x18]
0xa45:      48 89 45 f0                  	mov qword ptr [rbp - 0x10], rax
0xa49:      48 8b 55 f0                  	mov rdx, qword ptr [rbp - 0x10]
0xa4d:      48 8b 45 e0                  	mov rax, qword ptr [rbp - 0x20]
0xa51:      48 89 d7                     	mov rdi, rdx
0xa54:      ff d0                        	call rax
0xa56:      90                           	nop 
0xa57:      48 8b 45 f8                  	mov rax, qword ptr [rbp - 8]
0xa5b:      64 48 33 04 25 28 00 00 00   	xor rax, qword ptr fs:[0x28]
0xa64:      74 05                        	je 0xa6b <goodG2B+0xa1>
0xa66:      e8 a5 fd ff ff               	call 0x810 <__stack_chk_fail>
0xa6b:      c9                           	leave 
0xa6c:      c3                           	ret 
; function: CWE127_Buffer_Underread__char_alloca_loop_65_good at 0xa6d -- 0xa7e
0xa6d:      55                           	push rbp
0xa6e:      48 89 e5                     	mov rbp, rsp
0xa71:      b8 00 00 00 00               	mov eax, 0
0xa76:      e8 4f ff ff ff               	call 0x9ca <goodG2B>
0xa7b:      90                           	nop 
0xa7c:      5d                           	pop rbp
0xa7d:      c3                           	ret 
; function: main at 0xa7e -- 0xac7
0xa7e:      55                           	push rbp
0xa7f:      48 89 e5                     	mov rbp, rsp
0xa82:      48 83 ec 10                  	sub rsp, 0x10
0xa86:      89 7d fc                     	mov dword ptr [rbp - 4], edi
0xa89:      48 89 75 f0                  	mov qword ptr [rbp - 0x10], rsi
0xa8d:      bf 00 00 00 00               	mov edi, 0
0xa92:      e8 c9 fd ff ff               	call 0x860 <time>
0xa97:      89 c7                        	mov edi, eax
0xa99:      e8 a2 fd ff ff               	call 0x840 <srand>
0xa9e:      48 8d 3d 7f 06 00 00         	lea rdi, [rip + 0x67f]
0xaa5:      e8 b3 00 00 00               	call 0xb5d <printLine>
0xaaa:      b8 00 00 00 00               	mov eax, 0
0xaaf:      e8 b9 ff ff ff               	call 0xa6d <CWE127_Buffer_Underread__char_alloca_loop_65_good>
0xab4:      48 8d 3d 7b 06 00 00         	lea rdi, [rip + 0x67b]
0xabb:      e8 9d 00 00 00               	call 0xb5d <printLine>
0xac0:      b8 00 00 00 00               	mov eax, 0
0xac5:      c9                           	leave 
0xac6:      c3                           	ret 
; function: CWE127_Buffer_Underread__char_alloca_loop_65b_goodG2BSink at 0xac7 -- 0xb5d
0xac7:      55                           	push rbp
0xac8:      48 89 e5                     	mov rbp, rsp
0xacb:      48 81 ec 90 00 00 00         	sub rsp, 0x90
0xad2:      48 89 bd 78 ff ff ff         	mov qword ptr [rbp - 0x88], rdi
0xad9:      64 48 8b 04 25 28 00 00 00   	mov rax, qword ptr fs:[0x28]
0xae2:      48 89 45 f8                  	mov qword ptr [rbp - 8], rax
0xae6:      31 c0                        	xor eax, eax
0xae8:      48 8d 45 90                  	lea rax, [rbp - 0x70]
0xaec:      ba 63 00 00 00               	mov edx, 0x63
0xaf1:      be 43 00 00 00               	mov esi, 0x43
0xaf6:      48 89 c7                     	mov rdi, rax
0xaf9:      e8 32 fd ff ff               	call 0x830 <memset>
0xafe:      c6 45 f3 00                  	mov byte ptr [rbp - 0xd], 0
0xb02:      48 c7 45 88 00 00 00 00      	mov qword ptr [rbp - 0x78], 0
0xb0a:      eb 23                        	jmp 0xb2f <CWE127_Buffer_Underread__char_alloca_loop_65b_goodG2BSink+0x68>
0xb0c:      48 8b 95 78 ff ff ff         	mov rdx, qword ptr [rbp - 0x88]
0xb13:      48 8b 45 88                  	mov rax, qword ptr [rbp - 0x78]
0xb17:      48 01 d0                     	add rax, rdx
0xb1a:      0f b6 00                     	movzx eax, byte ptr [rax]
0xb1d:      48 8d 4d 90                  	lea rcx, [rbp - 0x70]
0xb21:      48 8b 55 88                  	mov rdx, qword ptr [rbp - 0x78]
0xb25:      48 01 ca                     	add rdx, rcx
0xb28:      88 02                        	mov byte ptr [rdx], al
0xb2a:      48 83 45 88 01               	add qword ptr [rbp - 0x78], 1
0xb2f:      48 83 7d 88 63               	cmp qword ptr [rbp - 0x78], 0x63
0xb34:      76 d6                        	jbe 0xb0c <CWE127_Buffer_Underread__char_alloca_loop_65b_goodG2BSink+0x45>
0xb36:      c6 45 f3 00                  	mov byte ptr [rbp - 0xd], 0
0xb3a:      48 8d 45 90                  	lea rax, [rbp - 0x70]
0xb3e:      48 89 c7                     	mov rdi, rax
0xb41:      e8 17 00 00 00               	call 0xb5d <printLine>
0xb46:      90                           	nop 
0xb47:      48 8b 45 f8                  	mov rax, qword ptr [rbp - 8]
0xb4b:      64 48 33 04 25 28 00 00 00   	xor rax, qword ptr fs:[0x28]
0xb54:      74 05                        	je 0xb5b <CWE127_Buffer_Underread__char_alloca_loop_65b_goodG2BSink+0x94>
0xb56:      e8 b5 fc ff ff               	call 0x810 <__stack_chk_fail>
0xb5b:      c9                           	leave 
0xb5c:      c3                           	ret 
; function: printLine at 0xb5d -- 0xb7f
0xb5d:      55                           	push rbp
0xb5e:      48 89 e5                     	mov rbp, rsp
0xb61:      48 83 ec 10                  	sub rsp, 0x10
0xb65:      48 89 7d f8                  	mov qword ptr [rbp - 8], rdi
0xb69:      48 83 7d f8 00               	cmp qword ptr [rbp - 8], 0
0xb6e:      74 0c                        	je 0xb7c <printLine+0x1f>
0xb70:      48 8b 45 f8                  	mov rax, qword ptr [rbp - 8]
0xb74:      48 89 c7                     	mov rdi, rax
0xb77:      e8 74 fc ff ff               	call 0x7f0 <puts>
0xb7c:      90                           	nop 
0xb7d:      c9                           	leave 
0xb7e:      c3                           	ret 
; function: printWLine at 0xb7f -- 0xbad
0xb7f:      55                           	push rbp
0xb80:      48 89 e5                     	mov rbp, rsp
0xb83:      48 83 ec 10                  	sub rsp, 0x10
0xb87:      48 89 7d f8                  	mov qword ptr [rbp - 8], rdi
0xb8b:      48 83 7d f8 00               	cmp qword ptr [rbp - 8], 0
0xb90:      74 18                        	je 0xbaa <printWLine+0x2b>
0xb92:      48 8b 45 f8                  	mov rax, qword ptr [rbp - 8]
0xb96:      48 89 c6                     	mov rsi, rax
0xb99:      48 8d 3d a8 05 00 00         	lea rdi, [rip + 0x5a8]
0xba0:      b8 00 00 00 00               	mov eax, 0
0xba5:      e8 c6 fc ff ff               	call 0x870 <wprintf>
0xbaa:      90                           	nop 
0xbab:      c9                           	leave 
0xbac:      c3                           	ret 
; function: printIntLine at 0xbad -- 0xbd1
0xbad:      55                           	push rbp
0xbae:      48 89 e5                     	mov rbp, rsp
0xbb1:      48 83 ec 10                  	sub rsp, 0x10
0xbb5:      89 7d fc                     	mov dword ptr [rbp - 4], edi
0xbb8:      8b 45 fc                     	mov eax, dword ptr [rbp - 4]
0xbbb:      89 c6                        	mov esi, eax
0xbbd:      48 8d 3d 98 05 00 00         	lea rdi, [rip + 0x598]
0xbc4:      b8 00 00 00 00               	mov eax, 0
0xbc9:      e8 52 fc ff ff               	call 0x820 <printf>
0xbce:      90                           	nop 
0xbcf:      c9                           	leave 
0xbd0:      c3                           	ret 
; function: printShortLine at 0xbd1 -- 0xbf9
0xbd1:      55                           	push rbp
0xbd2:      48 89 e5                     	mov rbp, rsp
0xbd5:      48 83 ec 10                  	sub rsp, 0x10
0xbd9:      89 f8                        	mov eax, edi
0xbdb:      66 89 45 fc                  	mov word ptr [rbp - 4], ax
0xbdf:      0f bf 45 fc                  	movsx eax, word ptr [rbp - 4]
0xbe3:      89 c6                        	mov esi, eax
0xbe5:      48 8d 3d 74 05 00 00         	lea rdi, [rip + 0x574]
0xbec:      b8 00 00 00 00               	mov eax, 0
0xbf1:      e8 2a fc ff ff               	call 0x820 <printf>
0xbf6:      90                           	nop 
0xbf7:      c9                           	leave 
0xbf8:      c3                           	ret 
; function: printFloatLine at 0xbf9 -- 0xc1f
0xbf9:      55                           	push rbp
0xbfa:      48 89 e5                     	mov rbp, rsp
0xbfd:      48 83 ec 10                  	sub rsp, 0x10
0xc01:      f3 0f 11 45 fc               	movss dword ptr [rbp - 4], xmm0
0xc06:      f3 0f 5a 45 fc               	cvtss2sd xmm0, dword ptr [rbp - 4]
0xc0b:      48 8d 3d 53 05 00 00         	lea rdi, [rip + 0x553]
0xc12:      b8 01 00 00 00               	mov eax, 1
0xc17:      e8 04 fc ff ff               	call 0x820 <printf>
0xc1c:      90                           	nop 
0xc1d:      c9                           	leave 
0xc1e:      c3                           	ret 
; function: printLongLine at 0xc1f -- 0xc46
0xc1f:      55                           	push rbp
0xc20:      48 89 e5                     	mov rbp, rsp
0xc23:      48 83 ec 10                  	sub rsp, 0x10
0xc27:      48 89 7d f8                  	mov qword ptr [rbp - 8], rdi
0xc2b:      48 8b 45 f8                  	mov rax, qword ptr [rbp - 8]
0xc2f:      48 89 c6                     	mov rsi, rax
0xc32:      48 8d 3d 30 05 00 00         	lea rdi, [rip + 0x530]
0xc39:      b8 00 00 00 00               	mov eax, 0
0xc3e:      e8 dd fb ff ff               	call 0x820 <printf>
0xc43:      90                           	nop 
0xc44:      c9                           	leave 
0xc45:      c3                           	ret 
; function: printLongLongLine at 0xc46 -- 0xc6d
0xc46:      55                           	push rbp
0xc47:      48 89 e5                     	mov rbp, rsp
0xc4a:      48 83 ec 10                  	sub rsp, 0x10
0xc4e:      48 89 7d f8                  	mov qword ptr [rbp - 8], rdi
0xc52:      48 8b 45 f8                  	mov rax, qword ptr [rbp - 8]
0xc56:      48 89 c6                     	mov rsi, rax
0xc59:      48 8d 3d 09 05 00 00         	lea rdi, [rip + 0x509]
0xc60:      b8 00 00 00 00               	mov eax, 0
0xc65:      e8 b6 fb ff ff               	call 0x820 <printf>
0xc6a:      90                           	nop 
0xc6b:      c9                           	leave 
0xc6c:      c3                           	ret 
; function: printSizeTLine at 0xc6d -- 0xc94
0xc6d:      55                           	push rbp
0xc6e:      48 89 e5                     	mov rbp, rsp
0xc71:      48 83 ec 10                  	sub rsp, 0x10
0xc75:      48 89 7d f8                  	mov qword ptr [rbp - 8], rdi
0xc79:      48 8b 45 f8                  	mov rax, qword ptr [rbp - 8]
0xc7d:      48 89 c6                     	mov rsi, rax
0xc80:      48 8d 3d e7 04 00 00         	lea rdi, [rip + 0x4e7]
0xc87:      b8 00 00 00 00               	mov eax, 0
0xc8c:      e8 8f fb ff ff               	call 0x820 <printf>
0xc91:      90                           	nop 
0xc92:      c9                           	leave 
0xc93:      c3                           	ret 
; function: printHexCharLine at 0xc94 -- 0xcbb
0xc94:      55                           	push rbp
0xc95:      48 89 e5                     	mov rbp, rsp
0xc98:      48 83 ec 10                  	sub rsp, 0x10
0xc9c:      89 f8                        	mov eax, edi
0xc9e:      88 45 fc                     	mov byte ptr [rbp - 4], al
0xca1:      0f be 45 fc                  	movsx eax, byte ptr [rbp - 4]
0xca5:      89 c6                        	mov esi, eax
0xca7:      48 8d 3d c5 04 00 00         	lea rdi, [rip + 0x4c5]
0xcae:      b8 00 00 00 00               	mov eax, 0
0xcb3:      e8 68 fb ff ff               	call 0x820 <printf>
0xcb8:      90                           	nop 
0xcb9:      c9                           	leave 
0xcba:      c3                           	ret 
; function: printWcharLine at 0xcbb -- 0xd11
0xcbb:      55                           	push rbp
0xcbc:      48 89 e5                     	mov rbp, rsp
0xcbf:      48 83 ec 20                  	sub rsp, 0x20
0xcc3:      89 7d ec                     	mov dword ptr [rbp - 0x14], edi
0xcc6:      64 48 8b 04 25 28 00 00 00   	mov rax, qword ptr fs:[0x28]
0xccf:      48 89 45 f8                  	mov qword ptr [rbp - 8], rax
0xcd3:      31 c0                        	xor eax, eax
0xcd5:      8b 45 ec                     	mov eax, dword ptr [rbp - 0x14]
0xcd8:      89 45 f0                     	mov dword ptr [rbp - 0x10], eax
0xcdb:      c7 45 f4 00 00 00 00         	mov dword ptr [rbp - 0xc], 0
0xce2:      48 8d 45 f0                  	lea rax, [rbp - 0x10]
0xce6:      48 89 c6                     	mov rsi, rax
0xce9:      48 8d 3d 89 04 00 00         	lea rdi, [rip + 0x489]
0xcf0:      b8 00 00 00 00               	mov eax, 0
0xcf5:      e8 26 fb ff ff               	call 0x820 <printf>
0xcfa:      90                           	nop 
0xcfb:      48 8b 45 f8                  	mov rax, qword ptr [rbp - 8]
0xcff:      64 48 33 04 25 28 00 00 00   	xor rax, qword ptr fs:[0x28]
0xd08:      74 05                        	je 0xd0f <printWcharLine+0x54>
0xd0a:      e8 01 fb ff ff               	call 0x810 <__stack_chk_fail>
0xd0f:      c9                           	leave 
0xd10:      c3                           	ret 
; function: printUnsignedLine at 0xd11 -- 0xd35
0xd11:      55                           	push rbp
0xd12:      48 89 e5                     	mov rbp, rsp
0xd15:      48 83 ec 10                  	sub rsp, 0x10
0xd19:      89 7d fc                     	mov dword ptr [rbp - 4], edi
0xd1c:      8b 45 fc                     	mov eax, dword ptr [rbp - 4]
0xd1f:      89 c6                        	mov esi, eax
0xd21:      48 8d 3d 56 04 00 00         	lea rdi, [rip + 0x456]
0xd28:      b8 00 00 00 00               	mov eax, 0
0xd2d:      e8 ee fa ff ff               	call 0x820 <printf>
0xd32:      90                           	nop 
0xd33:      c9                           	leave 
0xd34:      c3                           	ret 
; function: printHexUnsignedCharLine at 0xd35 -- 0xd5c
0xd35:      55                           	push rbp
0xd36:      48 89 e5                     	mov rbp, rsp
0xd39:      48 83 ec 10                  	sub rsp, 0x10
0xd3d:      89 f8                        	mov eax, edi
0xd3f:      88 45 fc                     	mov byte ptr [rbp - 4], al
0xd42:      0f b6 45 fc                  	movzx eax, byte ptr [rbp - 4]
0xd46:      89 c6                        	mov esi, eax
0xd48:      48 8d 3d 24 04 00 00         	lea rdi, [rip + 0x424]
0xd4f:      b8 00 00 00 00               	mov eax, 0
0xd54:      e8 c7 fa ff ff               	call 0x820 <printf>
0xd59:      90                           	nop 
0xd5a:      c9                           	leave 
0xd5b:      c3                           	ret 
; function: printDoubleLine at 0xd5c -- 0xd8a
0xd5c:      55                           	push rbp
0xd5d:      48 89 e5                     	mov rbp, rsp
0xd60:      48 83 ec 10                  	sub rsp, 0x10
0xd64:      f2 0f 11 45 f8               	movsd qword ptr [rbp - 8], xmm0
0xd69:      48 8b 45 f8                  	mov rax, qword ptr [rbp - 8]
0xd6d:      48 89 45 f0                  	mov qword ptr [rbp - 0x10], rax
0xd71:      f2 0f 10 45 f0               	movsd xmm0, qword ptr [rbp - 0x10]
0xd76:      48 8d 3d 05 04 00 00         	lea rdi, [rip + 0x405]
0xd7d:      b8 01 00 00 00               	mov eax, 1
0xd82:      e8 99 fa ff ff               	call 0x820 <printf>
0xd87:      90                           	nop 
0xd88:      c9                           	leave 
0xd89:      c3                           	ret 
; function: printStructLine at 0xd8a -- 0xdb9
0xd8a:      55                           	push rbp
0xd8b:      48 89 e5                     	mov rbp, rsp
0xd8e:      48 83 ec 10                  	sub rsp, 0x10
0xd92:      48 89 7d f8                  	mov qword ptr [rbp - 8], rdi
0xd96:      48 8b 45 f8                  	mov rax, qword ptr [rbp - 8]
0xd9a:      8b 50 04                     	mov edx, dword ptr [rax + 4]
0xd9d:      48 8b 45 f8                  	mov rax, qword ptr [rbp - 8]
0xda1:      8b 00                        	mov eax, dword ptr [rax]
0xda3:      89 c6                        	mov esi, eax
0xda5:      48 8d 3d da 03 00 00         	lea rdi, [rip + 0x3da]
0xdac:      b8 00 00 00 00               	mov eax, 0
0xdb1:      e8 6a fa ff ff               	call 0x820 <printf>
0xdb6:      90                           	nop 
0xdb7:      c9                           	leave 
0xdb8:      c3                           	ret 
; function: printBytesLine at 0xdb9 -- 0xe15
0xdb9:      55                           	push rbp
0xdba:      48 89 e5                     	mov rbp, rsp
0xdbd:      48 83 ec 20                  	sub rsp, 0x20
0xdc1:      48 89 7d e8                  	mov qword ptr [rbp - 0x18], rdi
0xdc5:      48 89 75 e0                  	mov qword ptr [rbp - 0x20], rsi
0xdc9:      48 c7 45 f8 00 00 00 00      	mov qword ptr [rbp - 8], 0
0xdd1:      eb 29                        	jmp 0xdfc <printBytesLine+0x43>
0xdd3:      48 8b 55 e8                  	mov rdx, qword ptr [rbp - 0x18]
0xdd7:      48 8b 45 f8                  	mov rax, qword ptr [rbp - 8]
0xddb:      48 01 d0                     	add rax, rdx
0xdde:      0f b6 00                     	movzx eax, byte ptr [rax]
0xde1:      0f b6 c0                     	movzx eax, al
0xde4:      89 c6                        	mov esi, eax
0xde6:      48 8d 3d a3 03 00 00         	lea rdi, [rip + 0x3a3]
0xded:      b8 00 00 00 00               	mov eax, 0
0xdf2:      e8 29 fa ff ff               	call 0x820 <printf>
0xdf7:      48 83 45 f8 01               	add qword ptr [rbp - 8], 1
0xdfc:      48 8b 45 f8                  	mov rax, qword ptr [rbp - 8]
0xe00:      48 3b 45 e0                  	cmp rax, qword ptr [rbp - 0x20]
0xe04:      72 cd                        	jb 0xdd3 <printBytesLine+0x1a>
0xe06:      48 8d 3d 88 03 00 00         	lea rdi, [rip + 0x388]
0xe0d:      e8 de f9 ff ff               	call 0x7f0 <puts>
0xe12:      90                           	nop 
0xe13:      c9                           	leave 
0xe14:      c3                           	ret 
; function: decodeHexChars at 0xe15 -- 0xf13
0xe15:      55                           	push rbp
0xe16:      48 89 e5                     	mov rbp, rsp
0xe19:      48 83 ec 40                  	sub rsp, 0x40
0xe1d:      48 89 7d d8                  	mov qword ptr [rbp - 0x28], rdi
0xe21:      48 89 75 d0                  	mov qword ptr [rbp - 0x30], rsi
0xe25:      48 89 55 c8                  	mov qword ptr [rbp - 0x38], rdx
0xe29:      64 48 8b 04 25 28 00 00 00   	mov rax, qword ptr fs:[0x28]
0xe32:      48 89 45 f8                  	mov qword ptr [rbp - 8], rax
0xe36:      31 c0                        	xor eax, eax
0xe38:      48 c7 45 f0 00 00 00 00      	mov qword ptr [rbp - 0x10], 0
0xe40:      eb 40                        	jmp 0xe82 <decodeHexChars+0x6d>
0xe42:      48 8b 45 f0                  	mov rax, qword ptr [rbp - 0x10]
0xe46:      48 8d 14 00                  	lea rdx, [rax + rax]
0xe4a:      48 8b 45 c8                  	mov rax, qword ptr [rbp - 0x38]
0xe4e:      48 8d 0c 02                  	lea rcx, [rdx + rax]
0xe52:      48 8d 45 ec                  	lea rax, [rbp - 0x14]
0xe56:      48 89 c2                     	mov rdx, rax
0xe59:      48 8d 35 30 03 00 00         	lea rsi, [rip + 0x330]
0xe60:      48 89 cf                     	mov rdi, rcx
0xe63:      b8 00 00 00 00               	mov eax, 0
0xe68:      e8 13 fa ff ff               	call 0x880 <sscanf>
0xe6d:      8b 55 ec                     	mov edx, dword ptr [rbp - 0x14]
0xe70:      48 8b 4d d8                  	mov rcx, qword ptr [rbp - 0x28]
0xe74:      48 8b 45 f0                  	mov rax, qword ptr [rbp - 0x10]
0xe78:      48 01 c8                     	add rax, rcx
0xe7b:      88 10                        	mov byte ptr [rax], dl
0xe7d:      48 83 45 f0 01               	add qword ptr [rbp - 0x10], 1
0xe82:      48 8b 45 f0                  	mov rax, qword ptr [rbp - 0x10]
0xe86:      48 3b 45 d0                  	cmp rax, qword ptr [rbp - 0x30]
0xe8a:      73 6d                        	jae 0xef9 <decodeHexChars+0xe4>
0xe8c:      e8 0f fa ff ff               	call 0x8a0 <__ctype_b_loc>
0xe91:      48 8b 00                     	mov rax, qword ptr [rax]
0xe94:      48 8b 55 f0                  	mov rdx, qword ptr [rbp - 0x10]
0xe98:      48 8d 0c 12                  	lea rcx, [rdx + rdx]
0xe9c:      48 8b 55 c8                  	mov rdx, qword ptr [rbp - 0x38]
0xea0:      48 01 ca                     	add rdx, rcx
0xea3:      0f b6 12                     	movzx edx, byte ptr [rdx]
0xea6:      48 0f be d2                  	movsx rdx, dl
0xeaa:      48 01 d2                     	add rdx, rdx
0xead:      48 01 d0                     	add rax, rdx
0xeb0:      0f b7 00                     	movzx eax, word ptr [rax]
0xeb3:      0f b7 c0                     	movzx eax, ax
0xeb6:      25 00 10 00 00               	and eax, 0x1000
0xebb:      85 c0                        	test eax, eax
0xebd:      74 3a                        	je 0xef9 <decodeHexChars+0xe4>
0xebf:      e8 dc f9 ff ff               	call 0x8a0 <__ctype_b_loc>
0xec4:      48 8b 00                     	mov rax, qword ptr [rax]
0xec7:      48 8b 55 f0                  	mov rdx, qword ptr [rbp - 0x10]
0xecb:      48 01 d2                     	add rdx, rdx
0xece:      48 8d 4a 01                  	lea rcx, [rdx + 1]
0xed2:      48 8b 55 c8                  	mov rdx, qword ptr [rbp - 0x38]
0xed6:      48 01 ca                     	add rdx, rcx
0xed9:      0f b6 12                     	movzx edx, byte ptr [rdx]
0xedc:      48 0f be d2                  	movsx rdx, dl
0xee0:      48 01 d2                     	add rdx, rdx
0xee3:      48 01 d0                     	add rax, rdx
0xee6:      0f b7 00                     	movzx eax, word ptr [rax]
0xee9:      0f b7 c0                     	movzx eax, ax
0xeec:      25 00 10 00 00               	and eax, 0x1000
0xef1:      85 c0                        	test eax, eax
0xef3:      0f 85 49 ff ff ff            	jne 0xe42 <decodeHexChars+0x2d>
0xef9:      48 8b 45 f0                  	mov rax, qword ptr [rbp - 0x10]
0xefd:      48 8b 75 f8                  	mov rsi, qword ptr [rbp - 8]
0xf01:      64 48 33 34 25 28 00 00 00   	xor rsi, qword ptr fs:[0x28]
0xf0a:      74 05                        	je 0xf11 <decodeHexChars+0xfc>
0xf0c:      e8 ff f8 ff ff               	call 0x810 <__stack_chk_fail>
0xf11:      c9                           	leave 
0xf12:      c3                           	ret 
; function: decodeHexWChars at 0xf13 -- 0xfec
0xf13:      55                           	push rbp
0xf14:      48 89 e5                     	mov rbp, rsp
0xf17:      48 83 ec 40                  	sub rsp, 0x40
0xf1b:      48 89 7d d8                  	mov qword ptr [rbp - 0x28], rdi
0xf1f:      48 89 75 d0                  	mov qword ptr [rbp - 0x30], rsi
0xf23:      48 89 55 c8                  	mov qword ptr [rbp - 0x38], rdx
0xf27:      64 48 8b 04 25 28 00 00 00   	mov rax, qword ptr fs:[0x28]
0xf30:      48 89 45 f8                  	mov qword ptr [rbp - 8], rax
0xf34:      31 c0                        	xor eax, eax
0xf36:      48 c7 45 f0 00 00 00 00      	mov qword ptr [rbp - 0x10], 0
0xf3e:      eb 44                        	jmp 0xf84 <decodeHexWChars+0x71>
0xf40:      48 8b 45 f0                  	mov rax, qword ptr [rbp - 0x10]
0xf44:      48 8d 14 c5 00 00 00 00      	lea rdx, [rax*8]
0xf4c:      48 8b 45 c8                  	mov rax, qword ptr [rbp - 0x38]
0xf50:      48 8d 0c 02                  	lea rcx, [rdx + rax]
0xf54:      48 8d 45 ec                  	lea rax, [rbp - 0x14]
0xf58:      48 89 c2                     	mov rdx, rax
0xf5b:      48 8d 35 36 02 00 00         	lea rsi, [rip + 0x236]
0xf62:      48 89 cf                     	mov rdi, rcx
0xf65:      b8 00 00 00 00               	mov eax, 0
0xf6a:      e8 e1 f8 ff ff               	call 0x850 <swscanf>
0xf6f:      8b 55 ec                     	mov edx, dword ptr [rbp - 0x14]
0xf72:      48 8b 4d d8                  	mov rcx, qword ptr [rbp - 0x28]
0xf76:      48 8b 45 f0                  	mov rax, qword ptr [rbp - 0x10]
0xf7a:      48 01 c8                     	add rax, rcx
0xf7d:      88 10                        	mov byte ptr [rax], dl
0xf7f:      48 83 45 f0 01               	add qword ptr [rbp - 0x10], 1
0xf84:      48 8b 45 f0                  	mov rax, qword ptr [rbp - 0x10]
0xf88:      48 3b 45 d0                  	cmp rax, qword ptr [rbp - 0x30]
0xf8c:      73 44                        	jae 0xfd2 <decodeHexWChars+0xbf>
0xf8e:      48 8b 45 f0                  	mov rax, qword ptr [rbp - 0x10]
0xf92:      48 8d 14 c5 00 00 00 00      	lea rdx, [rax*8]
0xf9a:      48 8b 45 c8                  	mov rax, qword ptr [rbp - 0x38]
0xf9e:      48 01 d0                     	add rax, rdx
0xfa1:      8b 00                        	mov eax, dword ptr [rax]
0xfa3:      89 c7                        	mov edi, eax
0xfa5:      e8 56 f8 ff ff               	call 0x800 <iswxdigit>
0xfaa:      85 c0                        	test eax, eax
0xfac:      74 24                        	je 0xfd2 <decodeHexWChars+0xbf>
0xfae:      48 8b 45 f0                  	mov rax, qword ptr [rbp - 0x10]
0xfb2:      48 c1 e0 03                  	shl rax, 3
0xfb6:      48 8d 50 04                  	lea rdx, [rax + 4]
0xfba:      48 8b 45 c8                  	mov rax, qword ptr [rbp - 0x38]
0xfbe:      48 01 d0                     	add rax, rdx
0xfc1:      8b 00                        	mov eax, dword ptr [rax]
0xfc3:      89 c7                        	mov edi, eax
0xfc5:      e8 36 f8 ff ff               	call 0x800 <iswxdigit>
0xfca:      85 c0                        	test eax, eax
0xfcc:      0f 85 6e ff ff ff            	jne 0xf40 <decodeHexWChars+0x2d>
0xfd2:      48 8b 45 f0                  	mov rax, qword ptr [rbp - 0x10]
0xfd6:      48 8b 75 f8                  	mov rsi, qword ptr [rbp - 8]
0xfda:      64 48 33 34 25 28 00 00 00   	xor rsi, qword ptr fs:[0x28]
0xfe3:      74 05                        	je 0xfea <decodeHexWChars+0xd7>
0xfe5:      e8 26 f8 ff ff               	call 0x810 <__stack_chk_fail>
0xfea:      c9                           	leave 
0xfeb:      c3                           	ret 
; function: globalReturnsTrue at 0xfec -- 0xff7
0xfec:      55                           	push rbp
0xfed:      48 89 e5                     	mov rbp, rsp
0xff0:      b8 01 00 00 00               	mov eax, 1
0xff5:      5d                           	pop rbp
0xff6:      c3                           	ret 
; function: globalReturnsFalse at 0xff7 -- 0x1002
0xff7:      55                           	push rbp
0xff8:      48 89 e5                     	mov rbp, rsp
0xffb:      b8 00 00 00 00               	mov eax, 0
0x1000:     5d                           	pop rbp
0x1001:     c3                           	ret 
; function: globalReturnsTrueOrFalse at 0x1002 -- 0x1020
0x1002:     55                           	push rbp
0x1003:     48 89 e5                     	mov rbp, rsp
0x1006:     e8 85 f8 ff ff               	call 0x890 <rand>
0x100b:     89 c2                        	mov edx, eax
0x100d:     89 d0                        	mov eax, edx
0x100f:     c1 f8 1f                     	sar eax, 0x1f
0x1012:     c1 e8 1f                     	shr eax, 0x1f
0x1015:     01 c2                        	add edx, eax
0x1017:     83 e2 01                     	and edx, 1
0x101a:     29 c2                        	sub edx, eax
0x101c:     89 d0                        	mov eax, edx
0x101e:     5d                           	pop rbp
0x101f:     c3                           	ret 
; function: good1 at 0x1020 -- 0x1027
0x1020:     55                           	push rbp
0x1021:     48 89 e5                     	mov rbp, rsp
0x1024:     90                           	nop 
0x1025:     5d                           	pop rbp
0x1026:     c3                           	ret 
; function: good2 at 0x1027 -- 0x102e
0x1027:     55                           	push rbp
0x1028:     48 89 e5                     	mov rbp, rsp
0x102b:     90                           	nop 
0x102c:     5d                           	pop rbp
0x102d:     c3                           	ret 
; function: good3 at 0x102e -- 0x1035
0x102e:     55                           	push rbp
0x102f:     48 89 e5                     	mov rbp, rsp
0x1032:     90                           	nop 
0x1033:     5d                           	pop rbp
0x1034:     c3                           	ret 
; function: good4 at 0x1035 -- 0x103c
0x1035:     55                           	push rbp
0x1036:     48 89 e5                     	mov rbp, rsp
0x1039:     90                           	nop 
0x103a:     5d                           	pop rbp
0x103b:     c3                           	ret 
; function: good5 at 0x103c -- 0x1043
0x103c:     55                           	push rbp
0x103d:     48 89 e5                     	mov rbp, rsp
0x1040:     90                           	nop 
0x1041:     5d                           	pop rbp
0x1042:     c3                           	ret 
; function: good6 at 0x1043 -- 0x104a
0x1043:     55                           	push rbp
0x1044:     48 89 e5                     	mov rbp, rsp
0x1047:     90                           	nop 
0x1048:     5d                           	pop rbp
0x1049:     c3                           	ret 
; function: good7 at 0x104a -- 0x1051
0x104a:     55                           	push rbp
0x104b:     48 89 e5                     	mov rbp, rsp
0x104e:     90                           	nop 
0x104f:     5d                           	pop rbp
0x1050:     c3                           	ret 
; function: good8 at 0x1051 -- 0x1058
0x1051:     55                           	push rbp
0x1052:     48 89 e5                     	mov rbp, rsp
0x1055:     90                           	nop 
0x1056:     5d                           	pop rbp
0x1057:     c3                           	ret 
; function: good9 at 0x1058 -- 0x105f
0x1058:     55                           	push rbp
0x1059:     48 89 e5                     	mov rbp, rsp
0x105c:     90                           	nop 
0x105d:     5d                           	pop rbp
0x105e:     c3                           	ret 
; function: bad1 at 0x105f -- 0x1066
0x105f:     55                           	push rbp
0x1060:     48 89 e5                     	mov rbp, rsp
0x1063:     90                           	nop 
0x1064:     5d                           	pop rbp
0x1065:     c3                           	ret 
; function: bad2 at 0x1066 -- 0x106d
0x1066:     55                           	push rbp
0x1067:     48 89 e5                     	mov rbp, rsp
0x106a:     90                           	nop 
0x106b:     5d                           	pop rbp
0x106c:     c3                           	ret 
; function: bad3 at 0x106d -- 0x1074
0x106d:     55                           	push rbp
0x106e:     48 89 e5                     	mov rbp, rsp
0x1071:     90                           	nop 
0x1072:     5d                           	pop rbp
0x1073:     c3                           	ret 
; function: bad4 at 0x1074 -- 0x107b
0x1074:     55                           	push rbp
0x1075:     48 89 e5                     	mov rbp, rsp
0x1078:     90                           	nop 
0x1079:     5d                           	pop rbp
0x107a:     c3                           	ret 
; function: bad5 at 0x107b -- 0x1082
0x107b:     55                           	push rbp
0x107c:     48 89 e5                     	mov rbp, rsp
0x107f:     90                           	nop 
0x1080:     5d                           	pop rbp
0x1081:     c3                           	ret 
; function: bad6 at 0x1082 -- 0x1089
0x1082:     55                           	push rbp
0x1083:     48 89 e5                     	mov rbp, rsp
0x1086:     90                           	nop 
0x1087:     5d                           	pop rbp
0x1088:     c3                           	ret 
; function: bad7 at 0x1089 -- 0x1090
0x1089:     55                           	push rbp
0x108a:     48 89 e5                     	mov rbp, rsp
0x108d:     90                           	nop 
0x108e:     5d                           	pop rbp
0x108f:     c3                           	ret 
; function: bad8 at 0x1090 -- 0x1097
0x1090:     55                           	push rbp
0x1091:     48 89 e5                     	mov rbp, rsp
0x1094:     90                           	nop 
0x1095:     5d                           	pop rbp
0x1096:     c3                           	ret 
; function: bad9 at 0x1097 -- 0x109e
0x1097:     55                           	push rbp
0x1098:     48 89 e5                     	mov rbp, rsp
0x109b:     90                           	nop 
0x109c:     5d                           	pop rbp
0x109d:     c3                           	ret 
; data inside code section at 0x109e -- 0x10a0
0x109e:     66 90                                              |f.              |
; function: __libc_csu_init at 0x10a0 -- 0x1105
0x10a0:     41 57                        	push r15
0x10a2:     41 56                        	push r14
0x10a4:     49 89 d7                     	mov r15, rdx
0x10a7:     41 55                        	push r13
0x10a9:     41 54                        	push r12
0x10ab:     4c 8d 25 ae 0c 20 00         	lea r12, [rip + 0x200cae]
0x10b2:     55                           	push rbp
0x10b3:     48 8d 2d ae 0c 20 00         	lea rbp, [rip + 0x200cae]
0x10ba:     53                           	push rbx
0x10bb:     41 89 fd                     	mov r13d, edi
0x10be:     49 89 f6                     	mov r14, rsi
0x10c1:     4c 29 e5                     	sub rbp, r12
0x10c4:     48 83 ec 08                  	sub rsp, 8
0x10c8:     48 c1 fd 03                  	sar rbp, 3
0x10cc:     e8 ef f6 ff ff               	call 0x7c0 <_init>
0x10d1:     48 85 ed                     	test rbp, rbp
0x10d4:     74 20                        	je 0x10f6 <__libc_csu_init+0x56>
0x10d6:     31 db                        	xor ebx, ebx
0x10d8:     0f 1f 84 00 00 00 00 00      	nop dword ptr [rax + rax]
0x10e0:     4c 89 fa                     	mov rdx, r15
0x10e3:     4c 89 f6                     	mov rsi, r14
0x10e6:     44 89 ef                     	mov edi, r13d
0x10e9:     41 ff 14 dc                  	call qword ptr [r12 + rbx*8]
0x10ed:     48 83 c3 01                  	add rbx, 1
0x10f1:     48 39 dd                     	cmp rbp, rbx
0x10f4:     75 ea                        	jne 0x10e0 <__libc_csu_init+0x40>
0x10f6:     48 83 c4 08                  	add rsp, 8
0x10fa:     5b                           	pop rbx
0x10fb:     5d                           	pop rbp
0x10fc:     41 5c                        	pop r12
0x10fe:     41 5d                        	pop r13
0x1100:     41 5e                        	pop r14
0x1102:     41 5f                        	pop r15
0x1104:     c3                           	ret 
; data inside code section at 0x1105 -- 0x1110
0x1105:     90 66 2e 0f 1f 84 00 00  00 00 00                  |.f.........     |
; function: __libc_csu_fini at 0x1110 -- 0x1112
0x1110:     f3 c3                        	ret 
; section: .fini
; function: _fini at 0x1114 -- 0x111d
0x1114:     48 83 ec 08                  	sub rsp, 8
0x1118:     48 83 c4 08                  	add rsp, 8
0x111c:     c3                           	ret 

;;
;; Data Segment
;;

; section: .interp
0x238:      2f 6c 69 62 36 34 2f 6c  64 2d 6c 69 6e 75 78 2d   |/lib64/ld-linux-|
0x248:      78 38 36 2d 36 34 2e 73  6f 2e 32 00 04            |x86-64.so.2..   |
; section: .gnu.hash
0x298:      01 00 00 00 01 00 00 00  01 00 00 00 00 00 00 00   |................|
0x2a8:      00 00 00 00 00 00 00 00  00 00 00 00 ??            |............?   |
; section: .dynsym
0x2b8:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2c8:      00 00 00 00 00 00 00 00  bf 00 00 00 20 00 00 00   |............ ...|
0x2d8:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2e8:      21 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |!...............|
0x2f8:      00 00 00 00 00 00 00 00  62 00 00 00 12 00 00 00   |........b.......|
0x308:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x318:      2b 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |+...............|
0x328:      00 00 00 00 00 00 00 00  7c 00 00 00 12 00 00 00   |........|.......|
0x338:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x348:      4d 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |M...............|
0x358:      00 00 00 00 00 00 00 00  83 00 00 00 12 00 00 00   |................|
0x368:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x378:      0b 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x388:      00 00 00 00 00 00 00 00  3c 00 00 00 12 00 00 00   |........<.......|
0x398:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3a8:      db 00 00 00 20 00 00 00  00 00 00 00 00 00 00 00   |.... ...........|
0x3b8:      00 00 00 00 00 00 00 00  26 00 00 00 12 00 00 00   |........&.......|
0x3c8:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3d8:      7b 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |{...............|
0x3e8:      00 00 00 00 00 00 00 00  11 00 00 00 12 00 00 00   |................|
0x3f8:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x408:      ea 00 00 00 20 00 00 00  00 00 00 00 00 00 00 00   |.... ...........|
0x418:      00 00 00 00 00 00 00 00  6c 00 00 00 22 00 00 00   |........l..."...|
0x428:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x438:      0c 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x448:      00 00 00 00 00 00 00 00  54 00 00 00 12 00 00 00   |........T.......|
0x458:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x468:      00                                                 |.               |
; section: .dynstr
0x468:      00 6c 69 62 63 2e 73 6f  2e 36 00 73 72 61 6e 64   |.libc.so.6.srand|
0x478:      00 5f 5f 69 73 6f 63 39  39 5f 73 73 63 61 6e 66   |.__isoc99_sscanf|
0x488:      00 70 75 74 73 00 74 69  6d 65 00 5f 5f 73 74 61   |.puts.time.__sta|
0x498:      63 6b 5f 63 68 6b 5f 66  61 69 6c 00 5f 5f 69 73   |ck_chk_fail.__is|
0x4a8:      6f 63 39 39 5f 73 77 73  63 61 6e 66 00 6d 65 6d   |oc99_swscanf.mem|
0x4b8:      73 65 74 00 5f 5f 63 74  79 70 65 5f 62 5f 6c 6f   |set.__ctype_b_lo|
0x4c8:      63 00 69 73 77 78 64 69  67 69 74 00 5f 5f 63 78   |c.iswxdigit.__cx|
0x4d8:      61 5f 66 69 6e 61 6c 69  7a 65 00 77 70 72 69 6e   |a_finalize.wprin|
0x4e8:      74 66 00 5f 5f 6c 69 62  63 5f 73 74 61 72 74 5f   |tf.__libc_start_|
0x4f8:      6d 61 69 6e 00 47 4c 49  42 43 5f 32 2e 33 00 47   |main.GLIBC_2.3.G|
0x508:      4c 49 42 43 5f 32 2e 37  00 47 4c 49 42 43 5f 32   |LIBC_2.7.GLIBC_2|
0x518:      2e 34 00 47 4c 49 42 43  5f 32 2e 32 2e 35 00 5f   |.4.GLIBC_2.2.5._|
0x528:      49 54 4d 5f 64 65 72 65  67 69 73 74 65 72 54 4d   |ITM_deregisterTM|
0x538:      43 6c 6f 6e 65 54 61 62  6c 65 00 5f 5f 67 6d 6f   |CloneTable.__gmo|
0x548:      6e 5f 73 74 61 72 74 5f  5f 00 5f 49 54 4d 5f 72   |n_start__._ITM_r|
0x558:      65 67 69 73 74 65 72 54  4d 43 6c 6f 6e 65 54 61   |egisterTMCloneTa|
0x568:      62 6c 65 00 00                                     |ble..           |
; section: .gnu.version
0x56c:      00 00 00 00 02 00 02 00  03 00 02 00 02 00 02 00   |................|
0x57c:      02 00 04 00 00 00 02 00  02 00 04 00 00 00 02 00   |................|
0x58c:      02 00 05 00 01                                     |.....           |
; section: .gnu.version_r
0x590:      01 00 04 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x5a0:      13 69 69 0d 00 00 05 00  95 00 00 00 10 00 00 00   |.ii.............|
0x5b0:      17 69 69 0d 00 00 04 00  9f 00 00 00 10 00 00 00   |.ii.............|
0x5c0:      14 69 69 0d 00 00 03 00  a9 00 00 00 10 00 00 00   |.ii.............|
0x5d0:      75 1a 69 09 00 00 02 00  b3 00 00 00 00 00 00 00   |u.i.............|
0x5e0:      60                                                 |`               |
; section: .rela.dyn
0x5e0:      60 1d 20 00 00 00 00 00  08 00 00 00 00 00 00 00   |`. .............|
0x5f0:      c0 09 00 00 00 00 00 00  68 1d 20 00 00 00 00 00   |........h. .....|
0x600:      08 00 00 00 00 00 00 00  80 09 00 00 00 00 00 00   |................|
0x610:      08 20 20 00 00 00 00 00  08 00 00 00 00 00 00 00   |.  .............|
0x620:      08 20 20 00 00 00 00 00  d8 1f 20 00 00 00 00 00   |.  ....... .....|
0x630:      06 00 00 00 01 00 00 00  00 00 00 00 00 00 00 00   |................|
0x640:      e0 1f 20 00 00 00 00 00  06 00 00 00 07 00 00 00   |.. .............|
0x650:      00 00 00 00 00 00 00 00  e8 1f 20 00 00 00 00 00   |.......... .....|
0x660:      06 00 00 00 0a 00 00 00  00 00 00 00 00 00 00 00   |................|
0x670:      f0 1f 20 00 00 00 00 00  06 00 00 00 0e 00 00 00   |.. .............|
0x680:      00 00 00 00 00 00 00 00  f8 1f 20 00 00 00 00 00   |.......... .....|
0x690:      06 00 00 00 0f 00 00 00  00 00 00 00 00 00 00 00   |................|
0x6a0:      78                                                 |x               |
; section: .rela.plt
0x6a0:      78 1f 20 00 00 00 00 00  07 00 00 00 02 00 00 00   |x. .............|
0x6b0:      00 00 00 00 00 00 00 00  80 1f 20 00 00 00 00 00   |.......... .....|
0x6c0:      07 00 00 00 03 00 00 00  00 00 00 00 00 00 00 00   |................|
0x6d0:      88 1f 20 00 00 00 00 00  07 00 00 00 04 00 00 00   |.. .............|
0x6e0:      00 00 00 00 00 00 00 00  90 1f 20 00 00 00 00 00   |.......... .....|
0x6f0:      07 00 00 00 05 00 00 00  00 00 00 00 00 00 00 00   |................|
0x700:      98 1f 20 00 00 00 00 00  07 00 00 00 06 00 00 00   |.. .............|
0x710:      00 00 00 00 00 00 00 00  a0 1f 20 00 00 00 00 00   |.......... .....|
0x720:      07 00 00 00 08 00 00 00  00 00 00 00 00 00 00 00   |................|
0x730:      a8 1f 20 00 00 00 00 00  07 00 00 00 09 00 00 00   |.. .............|
0x740:      00 00 00 00 00 00 00 00  b0 1f 20 00 00 00 00 00   |.......... .....|
0x750:      07 00 00 00 0b 00 00 00  00 00 00 00 00 00 00 00   |................|
0x760:      b8 1f 20 00 00 00 00 00  07 00 00 00 0c 00 00 00   |.. .............|
0x770:      00 00 00 00 00 00 00 00  c0 1f 20 00 00 00 00 00   |.......... .....|
0x780:      07 00 00 00 0d 00 00 00  00 00 00 00 00 00 00 00   |................|
0x790:      c8 1f 20 00 00 00 00 00  07 00 00 00 10 00 00 00   |.. .............|
0x7a0:      00 00 00 00 00 00 00 00  d0 1f 20 00 00 00 00 00   |.......... .....|
0x7b0:      07 00 00 00 11 00 00 00  00 00 00 00 00 00 00 00   |................|
0x7c0:      48                                                 |H               |
; section: .rodata
0x1120:     01 00 02 00                                        |....            |
0x1124:     43 61 6c 6c 69 6e 67 20  67 6f 6f 64 28 29 2e 2e   |Calling good()..|   "Calling good()..."
0x1134:     2e 00                                              |..              |
0x1136:     46 69 6e 69 73 68 65 64  20 67 6f 6f 64 28 29 00   |Finished good().|   "Finished good()"
0x1146:     00 00                                              |..              |
0x1148:     25 00 00 00 6c 00 00 00  73 00 00 00 0a 00 00 00   |%...l...s.......|   L"%ls\n"
0x1158:     00 00 00 00                                        |....            |
0x115c:     25 64 0a 00                                        |%d..            |   "%d\n"
0x1160:     25 68 64 0a 00                                     |%hd..           |   "%hd\n"
0x1165:     25 66 0a 00                                        |%f..            |   "%f\n"
0x1169:     25 6c 64 0a 00                                     |%ld..           |   "%ld\n"
0x116e:     25 7a 75 0a 00                                     |%zu..           |   "%zu\n"
0x1173:     25 30 32 78 0a 00                                  |%02x..          |   "%02x\n"
0x1179:     25 6c 73 0a 00                                     |%ls..           |   "%ls\n"
0x117e:     25 75 0a 00                                        |%u..            |   "%u\n"
0x1182:     25 67 0a 00                                        |%g..            |   "%g\n"
0x1186:     25 64 20 2d 2d 20 25 64  0a 00                     |%d -- %d..      |   "%d -- %d\n"
0x1190:     25 30 32 78 00                                     |%02x.           |   "%02x"
0x1195:     00 00 00                                           |...             |
0x1198:     25 00 00 00 30 00 00 00  32 00 00 00 78 00 00 00   |%...0...2...x...|   L"%02x"
0x11a8:     00 00 00 00                                        |....            |
0x11ac:     01 00 00 00 00 00 00 00  05 00 00 00 01            |.............   |
; section: .eh_frame_hdr
0x11b8:     01 1b 03 3b 84 01 00 00  2f 00 00 00 28 f6 ff ff   |...;..../...(...|
0x11c8:     d0 01 00 00 f8 f6 ff ff  f8 01 00 00 08 f7 ff ff   |................|
0x11d8:     a0 01 00 00 12 f8 ff ff  10 02 00 00 b5 f8 ff ff   |................|
0x11e8:     30 02 00 00 c6 f8 ff ff  50 02 00 00 0f f9 ff ff   |0.......P.......|
0x11f8:     70 02 00 00 a5 f9 ff ff  90 02 00 00 c7 f9 ff ff   |p...............|
0x1208:     b0 02 00 00 f5 f9 ff ff  d0 02 00 00 19 fa ff ff   |................|
0x1218:     f0 02 00 00 41 fa ff ff  10 03 00 00 67 fa ff ff   |....A.......g...|
0x1228:     30 03 00 00 8e fa ff ff  50 03 00 00 b5 fa ff ff   |0.......P.......|
0x1238:     70 03 00 00 dc fa ff ff  90 03 00 00 03 fb ff ff   |p...............|
0x1248:     b0 03 00 00 59 fb ff ff  d0 03 00 00 7d fb ff ff   |....Y.......}...|
0x1258:     f0 03 00 00 a4 fb ff ff  10 04 00 00 d2 fb ff ff   |................|
0x1268:     30 04 00 00 01 fc ff ff  50 04 00 00 5d fc ff ff   |0.......P...]...|
0x1278:     70 04 00 00 5b fd ff ff  90 04 00 00 34 fe ff ff   |p...[.......4...|
0x1288:     b0 04 00 00 3f fe ff ff  d0 04 00 00 4a fe ff ff   |....?.......J...|
0x1298:     f0 04 00 00 68 fe ff ff  10 05 00 00 6f fe ff ff   |....h.......o...|
0x12a8:     30 05 00 00 76 fe ff ff  50 05 00 00 7d fe ff ff   |0...v...P...}...|
0x12b8:     70 05 00 00 84 fe ff ff  90 05 00 00 8b fe ff ff   |p...............|
0x12c8:     b0 05 00 00 92 fe ff ff  d0 05 00 00 99 fe ff ff   |................|
0x12d8:     f0 05 00 00 a0 fe ff ff  10 06 00 00 a7 fe ff ff   |................|
0x12e8:     30 06 00 00 ae fe ff ff  50 06 00 00 b5 fe ff ff   |0.......P.......|
0x12f8:     70 06 00 00 bc fe ff ff  90 06 00 00 c3 fe ff ff   |p...............|
0x1308:     b0 06 00 00 ca fe ff ff  d0 06 00 00 d1 fe ff ff   |................|
0x1318:     f0 06 00 00 d8 fe ff ff  10 07 00 00 df fe ff ff   |................|
0x1328:     30 07 00 00 e8 fe ff ff  50 07 00 00 58 ff ff ff   |0.......P...X...|
0x1338:     98 07 00 00 ??                                     |....?           |
; section: .eh_frame
0x1340:     14 00 00 00 00 00 00 00  01 7a 52 00 01 78 10 01   |.........zR..x..|
0x1350:     1b 0c 07 08 90 01 07 10  14 00 00 00 1c 00 00 00   |................|
0x1360:     60 f5 ff ff 2b 00 00 00  00 00 00 00 00 00 00 00   |`...+...........|
0x1370:     14 00 00 00 00 00 00 00  01 7a 52 00 01 78 10 01   |.........zR..x..|
0x1380:     1b 0c 07 08 90 01 00 00  24 00 00 00 1c 00 00 00   |........$.......|
0x1390:     50 f4 ff ff d0 00 00 00  00 0e 10 46 0e 18 4a 0f   |P..........F..J.|
0x13a0:     0b 77 08 80 00 3f 1a 3b  2a 33 24 22 00 00 00 00   |.w...?.;*3$"....|
0x13b0:     14 00 00 00 44 00 00 00  f8 f4 ff ff 08 00 00 00   |....D...........|
0x13c0:     00 00 00 00 00 00 00 00  1c 00 00 00 5c 00 00 00   |............\...|
0x13d0:     fa f5 ff ff a3 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x13e0:     06 02 9e 0c 07 08 00 00  1c 00 00 00 7c 00 00 00   |............|...|
0x13f0:     7d f6 ff ff 11 00 00 00  00 41 0e 10 86 02 43 0d   |}........A....C.|
0x1400:     06 4c 0c 07 08 00 00 00  1c 00 00 00 9c 00 00 00   |.L..............|
0x1410:     6e f6 ff ff 49 00 00 00  00 41 0e 10 86 02 43 0d   |n...I....A....C.|
0x1420:     06 02 44 0c 07 08 00 00  1c 00 00 00 bc 00 00 00   |..D.............|
0x1430:     97 f6 ff ff 96 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x1440:     06 02 91 0c 07 08 00 00  1c 00 00 00 dc 00 00 00   |................|
0x1450:     0d f7 ff ff 22 00 00 00  00 41 0e 10 86 02 43 0d   |...."....A....C.|
0x1460:     06 5d 0c 07 08 00 00 00  1c 00 00 00 fc 00 00 00   |.]..............|
0x1470:     0f f7 ff ff 2e 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x1480:     06 69 0c 07 08 00 00 00  1c 00 00 00 1c 01 00 00   |.i..............|
0x1490:     1d f7 ff ff 24 00 00 00  00 41 0e 10 86 02 43 0d   |....$....A....C.|
0x14a0:     06 5f 0c 07 08 00 00 00  1c 00 00 00 3c 01 00 00   |._..........<...|
0x14b0:     21 f7 ff ff 28 00 00 00  00 41 0e 10 86 02 43 0d   |!...(....A....C.|
0x14c0:     06 63 0c 07 08 00 00 00  1c 00 00 00 5c 01 00 00   |.c..........\...|
0x14d0:     29 f7 ff ff 26 00 00 00  00 41 0e 10 86 02 43 0d   |)...&....A....C.|
0x14e0:     06 61 0c 07 08 00 00 00  1c 00 00 00 7c 01 00 00   |.a..........|...|
0x14f0:     2f f7 ff ff 27 00 00 00  00 41 0e 10 86 02 43 0d   |/...'....A....C.|
0x1500:     06 62 0c 07 08 00 00 00  1c 00 00 00 9c 01 00 00   |.b..............|
0x1510:     36 f7 ff ff 27 00 00 00  00 41 0e 10 86 02 43 0d   |6...'....A....C.|
0x1520:     06 62 0c 07 08 00 00 00  1c 00 00 00 bc 01 00 00   |.b..............|
0x1530:     3d f7 ff ff 27 00 00 00  00 41 0e 10 86 02 43 0d   |=...'....A....C.|
0x1540:     06 62 0c 07 08 00 00 00  1c 00 00 00 dc 01 00 00   |.b..............|
0x1550:     44 f7 ff ff 27 00 00 00  00 41 0e 10 86 02 43 0d   |D...'....A....C.|
0x1560:     06 62 0c 07 08 00 00 00  1c 00 00 00 fc 01 00 00   |.b..............|
0x1570:     4b f7 ff ff 56 00 00 00  00 41 0e 10 86 02 43 0d   |K...V....A....C.|
0x1580:     06 02 51 0c 07 08 00 00  1c 00 00 00 1c 02 00 00   |..Q.............|
0x1590:     81 f7 ff ff 24 00 00 00  00 41 0e 10 86 02 43 0d   |....$....A....C.|
0x15a0:     06 5f 0c 07 08 00 00 00  1c 00 00 00 3c 02 00 00   |._..........<...|
0x15b0:     85 f7 ff ff 27 00 00 00  00 41 0e 10 86 02 43 0d   |....'....A....C.|
0x15c0:     06 62 0c 07 08 00 00 00  1c 00 00 00 5c 02 00 00   |.b..........\...|
0x15d0:     8c f7 ff ff 2e 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x15e0:     06 69 0c 07 08 00 00 00  1c 00 00 00 7c 02 00 00   |.i..........|...|
0x15f0:     9a f7 ff ff 2f 00 00 00  00 41 0e 10 86 02 43 0d   |..../....A....C.|
0x1600:     06 6a 0c 07 08 00 00 00  1c 00 00 00 9c 02 00 00   |.j..............|
0x1610:     a9 f7 ff ff 5c 00 00 00  00 41 0e 10 86 02 43 0d   |....\....A....C.|
0x1620:     06 02 57 0c 07 08 00 00  1c 00 00 00 bc 02 00 00   |..W.............|
0x1630:     e5 f7 ff ff fe 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x1640:     06 02 f9 0c 07 08 00 00  1c 00 00 00 dc 02 00 00   |................|
0x1650:     c3 f8 ff ff d9 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x1660:     06 02 d4 0c 07 08 00 00  1c 00 00 00 fc 02 00 00   |................|
0x1670:     7c f9 ff ff 0b 00 00 00  00 41 0e 10 86 02 43 0d   ||........A....C.|
0x1680:     06 46 0c 07 08 00 00 00  1c 00 00 00 1c 03 00 00   |.F..............|
0x1690:     67 f9 ff ff 0b 00 00 00  00 41 0e 10 86 02 43 0d   |g........A....C.|
0x16a0:     06 46 0c 07 08 00 00 00  1c 00 00 00 3c 03 00 00   |.F..........<...|
0x16b0:     52 f9 ff ff 1e 00 00 00  00 41 0e 10 86 02 43 0d   |R........A....C.|
0x16c0:     06 59 0c 07 08 00 00 00  1c 00 00 00 5c 03 00 00   |.Y..........\...|
0x16d0:     50 f9 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |P........A....C.|
0x16e0:     06 42 0c 07 08 00 00 00  1c 00 00 00 7c 03 00 00   |.B..........|...|
0x16f0:     37 f9 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |7........A....C.|
0x1700:     06 42 0c 07 08 00 00 00  1c 00 00 00 9c 03 00 00   |.B..............|
0x1710:     1e f9 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x1720:     06 42 0c 07 08 00 00 00  1c 00 00 00 bc 03 00 00   |.B..............|
0x1730:     05 f9 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x1740:     06 42 0c 07 08 00 00 00  1c 00 00 00 dc 03 00 00   |.B..............|
0x1750:     ec f8 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x1760:     06 42 0c 07 08 00 00 00  1c 00 00 00 fc 03 00 00   |.B..............|
0x1770:     d3 f8 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x1780:     06 42 0c 07 08 00 00 00  1c 00 00 00 1c 04 00 00   |.B..............|
0x1790:     ba f8 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x17a0:     06 42 0c 07 08 00 00 00  1c 00 00 00 3c 04 00 00   |.B..........<...|
0x17b0:     a1 f8 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x17c0:     06 42 0c 07 08 00 00 00  1c 00 00 00 5c 04 00 00   |.B..........\...|
0x17d0:     88 f8 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x17e0:     06 42 0c 07 08 00 00 00  1c 00 00 00 7c 04 00 00   |.B..........|...|
0x17f0:     6f f8 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |o........A....C.|
0x1800:     06 42 0c 07 08 00 00 00  1c 00 00 00 9c 04 00 00   |.B..............|
0x1810:     56 f8 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |V........A....C.|
0x1820:     06 42 0c 07 08 00 00 00  1c 00 00 00 bc 04 00 00   |.B..............|
0x1830:     3d f8 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |=........A....C.|
0x1840:     06 42 0c 07 08 00 00 00  1c 00 00 00 dc 04 00 00   |.B..............|
0x1850:     24 f8 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |$........A....C.|
0x1860:     06 42 0c 07 08 00 00 00  1c 00 00 00 fc 04 00 00   |.B..............|
0x1870:     0b f8 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x1880:     06 42 0c 07 08 00 00 00  1c 00 00 00 1c 05 00 00   |.B..............|
0x1890:     f2 f7 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x18a0:     06 42 0c 07 08 00 00 00  1c 00 00 00 3c 05 00 00   |.B..........<...|
0x18b0:     d9 f7 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x18c0:     06 42 0c 07 08 00 00 00  1c 00 00 00 5c 05 00 00   |.B..........\...|
0x18d0:     c0 f7 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x18e0:     06 42 0c 07 08 00 00 00  1c 00 00 00 7c 05 00 00   |.B..........|...|
0x18f0:     a7 f7 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x1900:     06 42 0c 07 08 00 00 00  44 00 00 00 9c 05 00 00   |.B......D.......|
0x1910:     90 f7 ff ff 65 00 00 00  00 42 0e 10 8f 02 42 0e   |....e....B....B.|
0x1920:     18 8e 03 45 0e 20 8d 04  42 0e 28 8c 05 48 0e 30   |...E. ..B.(..H.0|
0x1930:     86 06 48 0e 38 83 07 4d  0e 40 72 0e 38 41 0e 30   |..H.8..M.@r.8A.0|
0x1940:     41 0e 28 42 0e 20 42 0e  18 42 0e 10 42 0e 08 00   |A.(B. B..B..B...|
0x1950:     10 00 00 00 e4 05 00 00  b8 f7 ff ff 02 00 00 00   |................|
0x1960:     00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x201d60:   c0 09 00 00 00 00 00 00  80                        |.........       |
; section: .fini_array
0x201d68:   80 09 00 00 00 00 00 00  01                        |.........       |
; section: .dynamic
0x201d70:   01 00 00 00 00 00 00 00  01 00 00 00 00 00 00 00   |................|
0x201d80:   0c 00 00 00 00 00 00 00  c0 07 00 00 00 00 00 00   |................|
0x201d90:   0d 00 00 00 00 00 00 00  14 11 00 00 00 00 00 00   |................|
0x201da0:   19 00 00 00 00 00 00 00  60 1d 20 00 00 00 00 00   |........`. .....|
0x201db0:   1b 00 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |................|
0x201dc0:   1a 00 00 00 00 00 00 00  68 1d 20 00 00 00 00 00   |........h. .....|
0x201dd0:   1c 00 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |................|
0x201de0:   f5 fe ff 6f 00 00 00 00  98 02 00 00 00 00 00 00   |...o............|
0x201df0:   05 00 00 00 00 00 00 00  68 04 00 00 00 00 00 00   |........h.......|
0x201e00:   06 00 00 00 00 00 00 00  b8 02 00 00 00 00 00 00   |................|
0x201e10:   0a 00 00 00 00 00 00 00  04 01 00 00 00 00 00 00   |................|
0x201e20:   0b 00 00 00 00 00 00 00  18 00 00 00 00 00 00 00   |................|
0x201e30:   15 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x201e40:   03 00 00 00 00 00 00 00  60 1f 20 00 00 00 00 00   |........`. .....|
0x201e50:   02 00 00 00 00 00 00 00  20 01 00 00 00 00 00 00   |........ .......|
0x201e60:   14 00 00 00 00 00 00 00  07 00 00 00 00 00 00 00   |................|
0x201e70:   17 00 00 00 00 00 00 00  a0 06 00 00 00 00 00 00   |................|
0x201e80:   07 00 00 00 00 00 00 00  e0 05 00 00 00 00 00 00   |................|
0x201e90:   08 00 00 00 00 00 00 00  c0 00 00 00 00 00 00 00   |................|
0x201ea0:   09 00 00 00 00 00 00 00  18 00 00 00 00 00 00 00   |................|
0x201eb0:   1e 00 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |................|
0x201ec0:   fb ff ff 6f 00 00 00 00  01 00 00 08 00 00 00 00   |...o............|
0x201ed0:   fe ff ff 6f 00 00 00 00  90 05 00 00 00 00 00 00   |...o............|
0x201ee0:   ff ff ff 6f 00 00 00 00  01 00 00 00 00 00 00 00   |...o............|
0x201ef0:   f0 ff ff 6f 00 00 00 00  6c 05 00 00 00 00 00 00   |...o....l.......|
0x201f00:   f9 ff ff 6f 00 00 00 00  03 00 00 00 00 00 00 00   |...o............|
0x201f10:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x201f20:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x201f30:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x201f40:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x201f50:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x201f60:   70                                                 |p               |
; section: .got
0x201f60:   70 1d 20 00 00 00 00 00  00 00 00 00 00 00 00 00   |p. .............|
0x201f70:   00 00 00 00 00 00 00 00  f6 07 00 00 00 00 00 00   |................|
0x201f80:   06 08 00 00 00 00 00 00  16 08 00 00 00 00 00 00   |................|
0x201f90:   26 08 00 00 00 00 00 00  36 08 00 00 00 00 00 00   |&.......6.......|
0x201fa0:   46 08 00 00 00 00 00 00  56 08 00 00 00 00 00 00   |F.......V.......|
0x201fb0:   66 08 00 00 00 00 00 00  76 08 00 00 00 00 00 00   |f.......v.......|
0x201fc0:   86 08 00 00 00 00 00 00  96 08 00 00 00 00 00 00   |................|
0x201fd0:   a6 08 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x201fe0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x201ff0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x202000:   00                                                 |.               |
; section: .data
0x202000:   00 00 00 00 00 00 00 00  08 20 20 00 00 00 00 00   |.........  .....|
0x202010:   01 00 00 00 05 00 00 00  00                        |.........       |
