digraph "Control-flow graph for function 'decodeHexWChars(a1, a2, a3)'." {
  label="Control-flow graph for function 'decodeHexWChars(a1, a2, a3)'.";
  node [shape=record];

  Node0774D7E8 [label="{entry:\l  a1\l  a2\l  a3\l}"];
  Node0774D7E8 -> Node0774DD88;
  Node0774DD88 [label="{  v1 = __readfsqword(40)\l  v2 = 0\l}"];
  Node0774DD88 -> Node0774DE18;
  Node0774DE18 [label="{  if (a2 != 0):\l}"];
  Node0774DE18 -> Node0774DE60 [label="a2 != 0"];
  Node0774DE18 -> Node0774D7A0 [label="a2 == 0"];
  Node0774DE60 [label="{  v3 = 0\l  v4 = (8 * v3)\l  wc = IntToPtrCastExpr\<ptr\>((v4 + a3))\l  v2 = v3\l}"];
  Node0774DE60 -> Node0774D998;
  Node0774D7A0 [label="{  result = v2\l}"];
  Node0774D7A0 -> Node0774D878;
  Node0774D998 [label="{  while (iswxdigit(*(wc)) != 0):\l}"];
  Node0774D998 -> Node0774DB48 [label="iswxdigit(*(wc)) != 0"];
  Node0774D998 -> Node0774DB00 [label="iswxdigit(*(wc)) == 0"];
  Node0774D878 [label="{  if (v1 != __readfsqword(40)):\l}"];
  Node0774D878 -> Node0774D758 [label="v1 != __readfsqword(40)"];
  Node0774D878 -> Node0774DCB0 [label="v1 == __readfsqword(40)"];
  Node0774DB48 [label="{0xfae:\l  v2 = v3\l}"];
  Node0774DB48 -> Node0774DCF8;
  Node0774DB00 [label="{exit:\l}"];
  Node0774D758 [label="{0xfe5:\l  __stack_chk_fail()\l  result = &(g5)\l}"];
  Node0774D758 -> Node0774DCB0;
  Node0774DCB0 [label="{0xfea:\l  return result\l}"];
  Node0774DCB0 -> Node0774DB00;
  Node0774DCF8 [label="{  if (iswxdigit(*(IntToPtrCastExpr\<ptr\>(((v4 or 4) + a3)))) == 0):\l}"];
  Node0774DCF8 -> Node0774DD40 [label="iswxdigit(*(IntToPtrCastExpr\<ptr\>(((v4 or 4) + a3)))) == 0"];
  Node0774DCF8 -> Node0774D830 [label="iswxdigit(*(IntToPtrCastExpr\<ptr\>(((v4 or 4) + a3)))) != 0"];
  Node0774DD40 [label="{break -\> 0xfd2:\l  break\l}"];
  Node0774DD40 -> Node0774DB00;
  Node0774D830 [label="{0xf40:\l  swscanf(wc, \"%02x\")\l  v5\l  *(IntToPtrCastExpr\<ptr\>((v3 + a1))) = TruncCastExpr\<int8\>(v5)\l  v3 = (v3 + 1)\l  v2 = v3\l}"];
  Node0774D830 -> Node0774DBD8;
  Node0774DBD8 [label="{  if (v3 \>= a2):\l}"];
  Node0774DBD8 -> Node0774DEA8 [label="v3 \>= a2"];
  Node0774DBD8 -> Node0774DDD0 [label="v3 \< a2"];
  Node0774DEA8 [label="{break -\> 0xfd2:\l  break\l}"];
  Node0774DEA8 -> Node0774DB00;
  Node0774DDD0 [label="{  v4 = (8 * v3)\l  wc = IntToPtrCastExpr\<ptr\>((v4 + a3))\l  v2 = v3\l}"];
  Node0774DDD0 -> Node0774D998;

}
