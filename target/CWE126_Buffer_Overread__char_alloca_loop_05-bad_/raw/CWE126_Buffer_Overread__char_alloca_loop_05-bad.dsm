;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2023 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2023-04-22 22:55:37
;; Architecture: x86-64
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x800 -- 0x817
0x800:      48 83 ec 08                        	sub rsp, 8
0x804:      48 8b 05 dd 17 20 00               	mov rax, qword ptr [rip + 0x2017dd]
0x80b:      48 85 c0                           	test rax, rax
0x80e:      74 02                              	je 0x812 <_init+0x12>
0x810:      ff d0                              	call rax <__gmon_start__>
0x812:      48 83 c4 08                        	add rsp, 8
0x816:      c3                                 	ret 
; section: .plt
; data inside code section at 0x820 -- 0x830
0x820:      ff 35 3a 17 20 00 ff 25  3c 17 20 00 0f 1f 40 00   |.5:. ..%<. ...@.|
; function: function_830 at 0x830 -- 0x836
0x830:      ff 25 3a 17 20 00                  	jmp qword ptr [rip + 0x20173a] <puts>
; data inside code section at 0x836 -- 0x840
0x836:      68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_840 at 0x840 -- 0x846
0x840:      ff 25 32 17 20 00                  	jmp qword ptr [rip + 0x201732] <iswxdigit>
; data inside code section at 0x846 -- 0x850
0x846:      68 01 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_850 at 0x850 -- 0x856
0x850:      ff 25 2a 17 20 00                  	jmp qword ptr [rip + 0x20172a] <strlen>
; data inside code section at 0x856 -- 0x860
0x856:      68 02 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; function: function_860 at 0x860 -- 0x866
0x860:      ff 25 22 17 20 00                  	jmp qword ptr [rip + 0x201722] <__stack_chk_fail>
; data inside code section at 0x866 -- 0x870
0x866:      68 03 00 00 00 e9 b0 ff  ff ff                     |h.........      |
; function: function_870 at 0x870 -- 0x876
0x870:      ff 25 1a 17 20 00                  	jmp qword ptr [rip + 0x20171a] <printf>
; data inside code section at 0x876 -- 0x880
0x876:      68 04 00 00 00 e9 a0 ff  ff ff                     |h.........      |
; function: function_880 at 0x880 -- 0x886
0x880:      ff 25 12 17 20 00                  	jmp qword ptr [rip + 0x201712] <memset>
; data inside code section at 0x886 -- 0x890
0x886:      68 05 00 00 00 e9 90 ff  ff ff                     |h.........      |
; function: function_890 at 0x890 -- 0x896
0x890:      ff 25 0a 17 20 00                  	jmp qword ptr [rip + 0x20170a] <srand>
; data inside code section at 0x896 -- 0x8a0
0x896:      68 06 00 00 00 e9 80 ff  ff ff                     |h.........      |
; function: function_8a0 at 0x8a0 -- 0x8a6
0x8a0:      ff 25 02 17 20 00                  	jmp qword ptr [rip + 0x201702] <swscanf>
; data inside code section at 0x8a6 -- 0x8b0
0x8a6:      68 07 00 00 00 e9 70 ff  ff ff                     |h.....p...      |
; function: function_8b0 at 0x8b0 -- 0x8b6
0x8b0:      ff 25 fa 16 20 00                  	jmp qword ptr [rip + 0x2016fa] <time>
; data inside code section at 0x8b6 -- 0x8c0
0x8b6:      68 08 00 00 00 e9 60 ff  ff ff                     |h.....`...      |
; function: function_8c0 at 0x8c0 -- 0x8c6
0x8c0:      ff 25 f2 16 20 00                  	jmp qword ptr [rip + 0x2016f2] <wprintf>
; data inside code section at 0x8c6 -- 0x8d0
0x8c6:      68 09 00 00 00 e9 50 ff  ff ff                     |h.....P...      |
; function: function_8d0 at 0x8d0 -- 0x8d6
0x8d0:      ff 25 ea 16 20 00                  	jmp qword ptr [rip + 0x2016ea] <sscanf>
; data inside code section at 0x8d6 -- 0x8e0
0x8d6:      68 0a 00 00 00 e9 40 ff  ff ff                     |h.....@...      |
; function: function_8e0 at 0x8e0 -- 0x8e6
0x8e0:      ff 25 e2 16 20 00                  	jmp qword ptr [rip + 0x2016e2] <rand>
; data inside code section at 0x8e6 -- 0x8f0
0x8e6:      68 0b 00 00 00 e9 30 ff  ff ff                     |h.....0...      |
; function: function_8f0 at 0x8f0 -- 0x8f6
0x8f0:      ff 25 da 16 20 00                  	jmp qword ptr [rip + 0x2016da] <__ctype_b_loc>
; data inside code section at 0x8f6 -- 0x900
0x8f6:      68 0c 00 00 00 e9 20 ff  ff ff                     |h..... ...      |
; section: .plt.got
; function: function_900 at 0x900 -- 0x906
0x900:      ff 25 f2 16 20 00                  	jmp qword ptr [rip + 0x2016f2] <__cxa_finalize>
; data inside code section at 0x906 -- 0x908
0x906:      66 90                                              |f.              |
; section: .text
; function: _start at 0x910 -- 0x93b
0x910:      31 ed                              	xor ebp, ebp
0x912:      49 89 d1                           	mov r9, rdx
0x915:      5e                                 	pop rsi
0x916:      48 89 e2                           	mov rdx, rsp
0x919:      48 83 e4 f0                        	and rsp, 0xfffffffffffffff0
0x91d:      50                                 	push rax
0x91e:      54                                 	push rsp
0x91f:      4c 8d 05 6a 08 00 00               	lea r8, [rip + 0x86a]
0x926:      48 8d 0d f3 07 00 00               	lea rcx, [rip + 0x7f3]
0x92d:      48 8d 3d 62 02 00 00               	lea rdi, [rip + 0x262]
0x934:      ff 15 a6 16 20 00                  	call qword ptr [rip + 0x2016a6] <__libc_start_main>
0x93a:      f4                                 	hlt 
; data inside code section at 0x93b -- 0x940
0x93b:      0f 1f 44 00 00                                     |..D..           |
; function: deregister_tm_clones at 0x940 -- 0x972
0x940:      48 8d 3d d9 16 20 00               	lea rdi, [rip + 0x2016d9]
0x947:      55                                 	push rbp
0x948:      48 8d 05 d1 16 20 00               	lea rax, [rip + 0x2016d1]
0x94f:      48 39 f8                           	cmp rax, rdi
0x952:      48 89 e5                           	mov rbp, rsp
0x955:      74 19                              	je 0x970 <deregister_tm_clones+0x30>
0x957:      48 8b 05 7a 16 20 00               	mov rax, qword ptr [rip + 0x20167a]
0x95e:      48 85 c0                           	test rax, rax
0x961:      74 0d                              	je 0x970 <deregister_tm_clones+0x30>
0x963:      5d                                 	pop rbp
0x964:      ff e0                              	jmp rax <_ITM_deregisterTMCloneTable>
; data inside code section at 0x966 -- 0x970
0x966:      66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0x970:      5d                                 	pop rbp
0x971:      c3                                 	ret 
; data inside code section at 0x972 -- 0x980
0x972:      0f 1f 40 00 66 2e 0f 1f  84 00 00 00 00 00         |..@.f.........  |
; function: register_tm_clones at 0x980 -- 0x9c2
0x980:      48 8d 3d 99 16 20 00               	lea rdi, [rip + 0x201699]
0x987:      48 8d 35 92 16 20 00               	lea rsi, [rip + 0x201692]
0x98e:      55                                 	push rbp
0x98f:      48 29 fe                           	sub rsi, rdi
0x992:      48 89 e5                           	mov rbp, rsp
0x995:      48 c1 fe 03                        	sar rsi, 3
0x999:      48 89 f0                           	mov rax, rsi
0x99c:      48 c1 e8 3f                        	shr rax, 0x3f
0x9a0:      48 01 c6                           	add rsi, rax
0x9a3:      48 d1 fe                           	sar rsi, 1
0x9a6:      74 18                              	je 0x9c0 <register_tm_clones+0x40>
0x9a8:      48 8b 05 41 16 20 00               	mov rax, qword ptr [rip + 0x201641]
0x9af:      48 85 c0                           	test rax, rax
0x9b2:      74 0c                              	je 0x9c0 <register_tm_clones+0x40>
0x9b4:      5d                                 	pop rbp
0x9b5:      ff e0                              	jmp rax <_ITM_registerTMCloneTable>
; data inside code section at 0x9b7 -- 0x9c0
0x9b7:      66 0f 1f 84 00 00 00 00  00                        |f........       |
0x9c0:      5d                                 	pop rbp
0x9c1:      c3                                 	ret 
; data inside code section at 0x9c2 -- 0x9d0
0x9c2:      0f 1f 40 00 66 2e 0f 1f  84 00 00 00 00 00         |..@.f.........  |
; function: __do_global_dtors_aux at 0x9d0 -- 0xa0a
0x9d0:      80 3d 49 16 20 00 00               	cmp byte ptr [rip + 0x201649], 0
0x9d7:      75 2f                              	jne 0xa08 <__do_global_dtors_aux+0x38>
0x9d9:      48 83 3d 17 16 20 00 00            	cmp qword ptr [rip + 0x201617], 0
0x9e1:      55                                 	push rbp
0x9e2:      48 89 e5                           	mov rbp, rsp
0x9e5:      74 0c                              	je 0x9f3 <__do_global_dtors_aux+0x23>
0x9e7:      48 8b 3d 1a 16 20 00               	mov rdi, qword ptr [rip + 0x20161a]
0x9ee:      e8 0d ff ff ff                     	call 0x900 <__cxa_finalize>
0x9f3:      e8 48 ff ff ff                     	call 0x940 <deregister_tm_clones>
0x9f8:      c6 05 21 16 20 00 01               	mov byte ptr [rip + 0x201621], 1
0x9ff:      5d                                 	pop rbp
0xa00:      c3                                 	ret 
; data inside code section at 0xa01 -- 0xa08
0xa01:      0f 1f 80 00 00 00 00                               |.......         |
0xa08:      f3 c3                              	ret 
; data inside code section at 0xa0a -- 0xa10
0xa0a:      66 0f 1f 44 00 00                                  |f..D..          |
; function: frame_dummy at 0xa10 -- 0xa1a
0xa10:      55                                 	push rbp
0xa11:      48 89 e5                           	mov rbp, rsp
0xa14:      5d                                 	pop rbp
0xa15:      e9 66 ff ff ff                     	jmp 0x980 <register_tm_clones>
; function: CWE126_Buffer_Overread__char_alloca_loop_05_bad at 0xa1a -- 0xb96
0xa1a:      55                                 	push rbp
0xa1b:      48 89 e5                           	mov rbp, rsp
0xa1e:      48 81 ec a0 00 00 00               	sub rsp, 0xa0
0xa25:      64 48 8b 04 25 28 00 00 00         	mov rax, qword ptr fs:[0x28]
0xa2e:      48 89 45 f8                        	mov qword ptr [rbp - 8], rax
0xa32:      31 c0                              	xor eax, eax
0xa34:      b8 10 00 00 00                     	mov eax, 0x10
0xa39:      48 83 e8 01                        	sub rax, 1
0xa3d:      48 83 c0 41                        	add rax, 0x41
0xa41:      b9 10 00 00 00                     	mov ecx, 0x10
0xa46:      ba 00 00 00 00                     	mov edx, 0
0xa4b:      48 f7 f1                           	div rcx
0xa4e:      48 6b c0 10                        	imul rax, rax, 0x10
0xa52:      48 29 c4                           	sub rsp, rax
0xa55:      48 89 e0                           	mov rax, rsp
0xa58:      48 83 c0 0f                        	add rax, 0xf
0xa5c:      48 c1 e8 04                        	shr rax, 4
0xa60:      48 c1 e0 04                        	shl rax, 4
0xa64:      48 89 85 78 ff ff ff               	mov qword ptr [rbp - 0x88], rax
0xa6b:      b8 10 00 00 00                     	mov eax, 0x10
0xa70:      48 83 e8 01                        	sub rax, 1
0xa74:      48 83 c0 73                        	add rax, 0x73
0xa78:      be 10 00 00 00                     	mov esi, 0x10
0xa7d:      ba 00 00 00 00                     	mov edx, 0
0xa82:      48 f7 f6                           	div rsi
0xa85:      48 6b c0 10                        	imul rax, rax, 0x10
0xa89:      48 29 c4                           	sub rsp, rax
0xa8c:      48 89 e0                           	mov rax, rsp
0xa8f:      48 83 c0 0f                        	add rax, 0xf
0xa93:      48 c1 e8 04                        	shr rax, 4
0xa97:      48 c1 e0 04                        	shl rax, 4
0xa9b:      48 89 45 80                        	mov qword ptr [rbp - 0x80], rax
0xa9f:      48 8b 85 78 ff ff ff               	mov rax, qword ptr [rbp - 0x88]
0xaa6:      ba 31 00 00 00                     	mov edx, 0x31
0xaab:      be 41 00 00 00                     	mov esi, 0x41
0xab0:      48 89 c7                           	mov rdi, rax
0xab3:      e8 c8 fd ff ff                     	call 0x880 <memset>
0xab8:      48 8b 85 78 ff ff ff               	mov rax, qword ptr [rbp - 0x88]
0xabf:      48 83 c0 31                        	add rax, 0x31
0xac3:      c6 00 00                           	mov byte ptr [rax], 0
0xac6:      48 8b 45 80                        	mov rax, qword ptr [rbp - 0x80]
0xaca:      ba 63 00 00 00                     	mov edx, 0x63
0xacf:      be 41 00 00 00                     	mov esi, 0x41
0xad4:      48 89 c7                           	mov rdi, rax
0xad7:      e8 a4 fd ff ff                     	call 0x880 <memset>
0xadc:      48 8b 45 80                        	mov rax, qword ptr [rbp - 0x80]
0xae0:      48 83 c0 63                        	add rax, 0x63
0xae4:      c6 00 00                           	mov byte ptr [rax], 0
0xae7:      8b 05 23 15 20 00                  	mov eax, dword ptr [rip + 0x201523]
0xaed:      85 c0                              	test eax, eax
0xaef:      74 0e                              	je 0xaff <CWE126_Buffer_Overread__char_alloca_loop_05_bad+0xe5>
0xaf1:      48 8b 85 78 ff ff ff               	mov rax, qword ptr [rbp - 0x88]
0xaf8:      48 89 85 68 ff ff ff               	mov qword ptr [rbp - 0x98], rax
0xaff:      48 8d 45 90                        	lea rax, [rbp - 0x70]
0xb03:      ba 63 00 00 00                     	mov edx, 0x63
0xb08:      be 43 00 00 00                     	mov esi, 0x43
0xb0d:      48 89 c7                           	mov rdi, rax
0xb10:      e8 6b fd ff ff                     	call 0x880 <memset>
0xb15:      c6 45 f3 00                        	mov byte ptr [rbp - 0xd], 0
0xb19:      48 8d 45 90                        	lea rax, [rbp - 0x70]
0xb1d:      48 89 c7                           	mov rdi, rax
0xb20:      e8 2b fd ff ff                     	call 0x850 <strlen>
0xb25:      48 89 45 88                        	mov qword ptr [rbp - 0x78], rax
0xb29:      48 c7 85 70 ff ff ff 00 00 00 00   	mov qword ptr [rbp - 0x90], 0
0xb34:      eb 2c                              	jmp 0xb62 <CWE126_Buffer_Overread__char_alloca_loop_05_bad+0x148>
0xb36:      48 8b 95 68 ff ff ff               	mov rdx, qword ptr [rbp - 0x98]
0xb3d:      48 8b 85 70 ff ff ff               	mov rax, qword ptr [rbp - 0x90]
0xb44:      48 01 d0                           	add rax, rdx
0xb47:      0f b6 00                           	movzx eax, byte ptr [rax]
0xb4a:      48 8d 4d 90                        	lea rcx, [rbp - 0x70]
0xb4e:      48 8b 95 70 ff ff ff               	mov rdx, qword ptr [rbp - 0x90]
0xb55:      48 01 ca                           	add rdx, rcx
0xb58:      88 02                              	mov byte ptr [rdx], al
0xb5a:      48 83 85 70 ff ff ff 01            	add qword ptr [rbp - 0x90], 1
0xb62:      48 8b 85 70 ff ff ff               	mov rax, qword ptr [rbp - 0x90]
0xb69:      48 3b 45 88                        	cmp rax, qword ptr [rbp - 0x78]
0xb6d:      72 c7                              	jb 0xb36 <CWE126_Buffer_Overread__char_alloca_loop_05_bad+0x11c>
0xb6f:      c6 45 f3 00                        	mov byte ptr [rbp - 0xd], 0
0xb73:      48 8d 45 90                        	lea rax, [rbp - 0x70]
0xb77:      48 89 c7                           	mov rdi, rax
0xb7a:      e8 60 00 00 00                     	call 0xbdf <printLine>
0xb7f:      90                                 	nop 
0xb80:      48 8b 45 f8                        	mov rax, qword ptr [rbp - 8]
0xb84:      64 48 33 04 25 28 00 00 00         	xor rax, qword ptr fs:[0x28]
0xb8d:      74 05                              	je 0xb94 <CWE126_Buffer_Overread__char_alloca_loop_05_bad+0x17a>
0xb8f:      e8 cc fc ff ff                     	call 0x860 <__stack_chk_fail>
0xb94:      c9                                 	leave 
0xb95:      c3                                 	ret 
; function: main at 0xb96 -- 0xbdf
0xb96:      55                                 	push rbp
0xb97:      48 89 e5                           	mov rbp, rsp
0xb9a:      48 83 ec 10                        	sub rsp, 0x10
0xb9e:      89 7d fc                           	mov dword ptr [rbp - 4], edi
0xba1:      48 89 75 f0                        	mov qword ptr [rbp - 0x10], rsi
0xba5:      bf 00 00 00 00                     	mov edi, 0
0xbaa:      e8 01 fd ff ff                     	call 0x8b0 <time>
0xbaf:      89 c7                              	mov edi, eax
0xbb1:      e8 da fc ff ff                     	call 0x890 <srand>
0xbb6:      48 8d 3d e7 05 00 00               	lea rdi, [rip + 0x5e7]
0xbbd:      e8 1d 00 00 00                     	call 0xbdf <printLine>
0xbc2:      b8 00 00 00 00                     	mov eax, 0
0xbc7:      e8 4e fe ff ff                     	call 0xa1a <CWE126_Buffer_Overread__char_alloca_loop_05_bad>
0xbcc:      48 8d 3d e2 05 00 00               	lea rdi, [rip + 0x5e2]
0xbd3:      e8 07 00 00 00                     	call 0xbdf <printLine>
0xbd8:      b8 00 00 00 00                     	mov eax, 0
0xbdd:      c9                                 	leave 
0xbde:      c3                                 	ret 
; function: printLine at 0xbdf -- 0xc01
0xbdf:      55                                 	push rbp
0xbe0:      48 89 e5                           	mov rbp, rsp
0xbe3:      48 83 ec 10                        	sub rsp, 0x10
0xbe7:      48 89 7d f8                        	mov qword ptr [rbp - 8], rdi
0xbeb:      48 83 7d f8 00                     	cmp qword ptr [rbp - 8], 0
0xbf0:      74 0c                              	je 0xbfe <printLine+0x1f>
0xbf2:      48 8b 45 f8                        	mov rax, qword ptr [rbp - 8]
0xbf6:      48 89 c7                           	mov rdi, rax
0xbf9:      e8 32 fc ff ff                     	call 0x830 <puts>
0xbfe:      90                                 	nop 
0xbff:      c9                                 	leave 
0xc00:      c3                                 	ret 
; function: printWLine at 0xc01 -- 0xc2f
0xc01:      55                                 	push rbp
0xc02:      48 89 e5                           	mov rbp, rsp
0xc05:      48 83 ec 10                        	sub rsp, 0x10
0xc09:      48 89 7d f8                        	mov qword ptr [rbp - 8], rdi
0xc0d:      48 83 7d f8 00                     	cmp qword ptr [rbp - 8], 0
0xc12:      74 18                              	je 0xc2c <printWLine+0x2b>
0xc14:      48 8b 45 f8                        	mov rax, qword ptr [rbp - 8]
0xc18:      48 89 c6                           	mov rsi, rax
0xc1b:      48 8d 3d a2 05 00 00               	lea rdi, [rip + 0x5a2]
0xc22:      b8 00 00 00 00                     	mov eax, 0
0xc27:      e8 94 fc ff ff                     	call 0x8c0 <wprintf>
0xc2c:      90                                 	nop 
0xc2d:      c9                                 	leave 
0xc2e:      c3                                 	ret 
; function: printIntLine at 0xc2f -- 0xc53
0xc2f:      55                                 	push rbp
0xc30:      48 89 e5                           	mov rbp, rsp
0xc33:      48 83 ec 10                        	sub rsp, 0x10
0xc37:      89 7d fc                           	mov dword ptr [rbp - 4], edi
0xc3a:      8b 45 fc                           	mov eax, dword ptr [rbp - 4]
0xc3d:      89 c6                              	mov esi, eax
0xc3f:      48 8d 3d 92 05 00 00               	lea rdi, [rip + 0x592]
0xc46:      b8 00 00 00 00                     	mov eax, 0
0xc4b:      e8 20 fc ff ff                     	call 0x870 <printf>
0xc50:      90                                 	nop 
0xc51:      c9                                 	leave 
0xc52:      c3                                 	ret 
; function: printShortLine at 0xc53 -- 0xc7b
0xc53:      55                                 	push rbp
0xc54:      48 89 e5                           	mov rbp, rsp
0xc57:      48 83 ec 10                        	sub rsp, 0x10
0xc5b:      89 f8                              	mov eax, edi
0xc5d:      66 89 45 fc                        	mov word ptr [rbp - 4], ax
0xc61:      0f bf 45 fc                        	movsx eax, word ptr [rbp - 4]
0xc65:      89 c6                              	mov esi, eax
0xc67:      48 8d 3d 6e 05 00 00               	lea rdi, [rip + 0x56e]
0xc6e:      b8 00 00 00 00                     	mov eax, 0
0xc73:      e8 f8 fb ff ff                     	call 0x870 <printf>
0xc78:      90                                 	nop 
0xc79:      c9                                 	leave 
0xc7a:      c3                                 	ret 
; function: printFloatLine at 0xc7b -- 0xca1
0xc7b:      55                                 	push rbp
0xc7c:      48 89 e5                           	mov rbp, rsp
0xc7f:      48 83 ec 10                        	sub rsp, 0x10
0xc83:      f3 0f 11 45 fc                     	movss dword ptr [rbp - 4], xmm0
0xc88:      f3 0f 5a 45 fc                     	cvtss2sd xmm0, dword ptr [rbp - 4]
0xc8d:      48 8d 3d 4d 05 00 00               	lea rdi, [rip + 0x54d]
0xc94:      b8 01 00 00 00                     	mov eax, 1
0xc99:      e8 d2 fb ff ff                     	call 0x870 <printf>
0xc9e:      90                                 	nop 
0xc9f:      c9                                 	leave 
0xca0:      c3                                 	ret 
; function: printLongLine at 0xca1 -- 0xcc8
0xca1:      55                                 	push rbp
0xca2:      48 89 e5                           	mov rbp, rsp
0xca5:      48 83 ec 10                        	sub rsp, 0x10
0xca9:      48 89 7d f8                        	mov qword ptr [rbp - 8], rdi
0xcad:      48 8b 45 f8                        	mov rax, qword ptr [rbp - 8]
0xcb1:      48 89 c6                           	mov rsi, rax
0xcb4:      48 8d 3d 2a 05 00 00               	lea rdi, [rip + 0x52a]
0xcbb:      b8 00 00 00 00                     	mov eax, 0
0xcc0:      e8 ab fb ff ff                     	call 0x870 <printf>
0xcc5:      90                                 	nop 
0xcc6:      c9                                 	leave 
0xcc7:      c3                                 	ret 
; function: printLongLongLine at 0xcc8 -- 0xcef
0xcc8:      55                                 	push rbp
0xcc9:      48 89 e5                           	mov rbp, rsp
0xccc:      48 83 ec 10                        	sub rsp, 0x10
0xcd0:      48 89 7d f8                        	mov qword ptr [rbp - 8], rdi
0xcd4:      48 8b 45 f8                        	mov rax, qword ptr [rbp - 8]
0xcd8:      48 89 c6                           	mov rsi, rax
0xcdb:      48 8d 3d 03 05 00 00               	lea rdi, [rip + 0x503]
0xce2:      b8 00 00 00 00                     	mov eax, 0
0xce7:      e8 84 fb ff ff                     	call 0x870 <printf>
0xcec:      90                                 	nop 
0xced:      c9                                 	leave 
0xcee:      c3                                 	ret 
; function: printSizeTLine at 0xcef -- 0xd16
0xcef:      55                                 	push rbp
0xcf0:      48 89 e5                           	mov rbp, rsp
0xcf3:      48 83 ec 10                        	sub rsp, 0x10
0xcf7:      48 89 7d f8                        	mov qword ptr [rbp - 8], rdi
0xcfb:      48 8b 45 f8                        	mov rax, qword ptr [rbp - 8]
0xcff:      48 89 c6                           	mov rsi, rax
0xd02:      48 8d 3d e1 04 00 00               	lea rdi, [rip + 0x4e1]
0xd09:      b8 00 00 00 00                     	mov eax, 0
0xd0e:      e8 5d fb ff ff                     	call 0x870 <printf>
0xd13:      90                                 	nop 
0xd14:      c9                                 	leave 
0xd15:      c3                                 	ret 
; function: printHexCharLine at 0xd16 -- 0xd3d
0xd16:      55                                 	push rbp
0xd17:      48 89 e5                           	mov rbp, rsp
0xd1a:      48 83 ec 10                        	sub rsp, 0x10
0xd1e:      89 f8                              	mov eax, edi
0xd20:      88 45 fc                           	mov byte ptr [rbp - 4], al
0xd23:      0f be 45 fc                        	movsx eax, byte ptr [rbp - 4]
0xd27:      89 c6                              	mov esi, eax
0xd29:      48 8d 3d bf 04 00 00               	lea rdi, [rip + 0x4bf]
0xd30:      b8 00 00 00 00                     	mov eax, 0
0xd35:      e8 36 fb ff ff                     	call 0x870 <printf>
0xd3a:      90                                 	nop 
0xd3b:      c9                                 	leave 
0xd3c:      c3                                 	ret 
; function: printWcharLine at 0xd3d -- 0xd93
0xd3d:      55                                 	push rbp
0xd3e:      48 89 e5                           	mov rbp, rsp
0xd41:      48 83 ec 20                        	sub rsp, 0x20
0xd45:      89 7d ec                           	mov dword ptr [rbp - 0x14], edi
0xd48:      64 48 8b 04 25 28 00 00 00         	mov rax, qword ptr fs:[0x28]
0xd51:      48 89 45 f8                        	mov qword ptr [rbp - 8], rax
0xd55:      31 c0                              	xor eax, eax
0xd57:      8b 45 ec                           	mov eax, dword ptr [rbp - 0x14]
0xd5a:      89 45 f0                           	mov dword ptr [rbp - 0x10], eax
0xd5d:      c7 45 f4 00 00 00 00               	mov dword ptr [rbp - 0xc], 0
0xd64:      48 8d 45 f0                        	lea rax, [rbp - 0x10]
0xd68:      48 89 c6                           	mov rsi, rax
0xd6b:      48 8d 3d 83 04 00 00               	lea rdi, [rip + 0x483]
0xd72:      b8 00 00 00 00                     	mov eax, 0
0xd77:      e8 f4 fa ff ff                     	call 0x870 <printf>
0xd7c:      90                                 	nop 
0xd7d:      48 8b 45 f8                        	mov rax, qword ptr [rbp - 8]
0xd81:      64 48 33 04 25 28 00 00 00         	xor rax, qword ptr fs:[0x28]
0xd8a:      74 05                              	je 0xd91 <printWcharLine+0x54>
0xd8c:      e8 cf fa ff ff                     	call 0x860 <__stack_chk_fail>
0xd91:      c9                                 	leave 
0xd92:      c3                                 	ret 
; function: printUnsignedLine at 0xd93 -- 0xdb7
0xd93:      55                                 	push rbp
0xd94:      48 89 e5                           	mov rbp, rsp
0xd97:      48 83 ec 10                        	sub rsp, 0x10
0xd9b:      89 7d fc                           	mov dword ptr [rbp - 4], edi
0xd9e:      8b 45 fc                           	mov eax, dword ptr [rbp - 4]
0xda1:      89 c6                              	mov esi, eax
0xda3:      48 8d 3d 50 04 00 00               	lea rdi, [rip + 0x450]
0xdaa:      b8 00 00 00 00                     	mov eax, 0
0xdaf:      e8 bc fa ff ff                     	call 0x870 <printf>
0xdb4:      90                                 	nop 
0xdb5:      c9                                 	leave 
0xdb6:      c3                                 	ret 
; function: printHexUnsignedCharLine at 0xdb7 -- 0xdde
0xdb7:      55                                 	push rbp
0xdb8:      48 89 e5                           	mov rbp, rsp
0xdbb:      48 83 ec 10                        	sub rsp, 0x10
0xdbf:      89 f8                              	mov eax, edi
0xdc1:      88 45 fc                           	mov byte ptr [rbp - 4], al
0xdc4:      0f b6 45 fc                        	movzx eax, byte ptr [rbp - 4]
0xdc8:      89 c6                              	mov esi, eax
0xdca:      48 8d 3d 1e 04 00 00               	lea rdi, [rip + 0x41e]
0xdd1:      b8 00 00 00 00                     	mov eax, 0
0xdd6:      e8 95 fa ff ff                     	call 0x870 <printf>
0xddb:      90                                 	nop 
0xddc:      c9                                 	leave 
0xddd:      c3                                 	ret 
; function: printDoubleLine at 0xdde -- 0xe0c
0xdde:      55                                 	push rbp
0xddf:      48 89 e5                           	mov rbp, rsp
0xde2:      48 83 ec 10                        	sub rsp, 0x10
0xde6:      f2 0f 11 45 f8                     	movsd qword ptr [rbp - 8], xmm0
0xdeb:      48 8b 45 f8                        	mov rax, qword ptr [rbp - 8]
0xdef:      48 89 45 f0                        	mov qword ptr [rbp - 0x10], rax
0xdf3:      f2 0f 10 45 f0                     	movsd xmm0, qword ptr [rbp - 0x10]
0xdf8:      48 8d 3d ff 03 00 00               	lea rdi, [rip + 0x3ff]
0xdff:      b8 01 00 00 00                     	mov eax, 1
0xe04:      e8 67 fa ff ff                     	call 0x870 <printf>
0xe09:      90                                 	nop 
0xe0a:      c9                                 	leave 
0xe0b:      c3                                 	ret 
; function: printStructLine at 0xe0c -- 0xe3b
0xe0c:      55                                 	push rbp
0xe0d:      48 89 e5                           	mov rbp, rsp
0xe10:      48 83 ec 10                        	sub rsp, 0x10
0xe14:      48 89 7d f8                        	mov qword ptr [rbp - 8], rdi
0xe18:      48 8b 45 f8                        	mov rax, qword ptr [rbp - 8]
0xe1c:      8b 50 04                           	mov edx, dword ptr [rax + 4]
0xe1f:      48 8b 45 f8                        	mov rax, qword ptr [rbp - 8]
0xe23:      8b 00                              	mov eax, dword ptr [rax]
0xe25:      89 c6                              	mov esi, eax
0xe27:      48 8d 3d d4 03 00 00               	lea rdi, [rip + 0x3d4]
0xe2e:      b8 00 00 00 00                     	mov eax, 0
0xe33:      e8 38 fa ff ff                     	call 0x870 <printf>
0xe38:      90                                 	nop 
0xe39:      c9                                 	leave 
0xe3a:      c3                                 	ret 
; function: printBytesLine at 0xe3b -- 0xe97
0xe3b:      55                                 	push rbp
0xe3c:      48 89 e5                           	mov rbp, rsp
0xe3f:      48 83 ec 20                        	sub rsp, 0x20
0xe43:      48 89 7d e8                        	mov qword ptr [rbp - 0x18], rdi
0xe47:      48 89 75 e0                        	mov qword ptr [rbp - 0x20], rsi
0xe4b:      48 c7 45 f8 00 00 00 00            	mov qword ptr [rbp - 8], 0
0xe53:      eb 29                              	jmp 0xe7e <printBytesLine+0x43>
0xe55:      48 8b 55 e8                        	mov rdx, qword ptr [rbp - 0x18]
0xe59:      48 8b 45 f8                        	mov rax, qword ptr [rbp - 8]
0xe5d:      48 01 d0                           	add rax, rdx
0xe60:      0f b6 00                           	movzx eax, byte ptr [rax]
0xe63:      0f b6 c0                           	movzx eax, al
0xe66:      89 c6                              	mov esi, eax
0xe68:      48 8d 3d 9d 03 00 00               	lea rdi, [rip + 0x39d]
0xe6f:      b8 00 00 00 00                     	mov eax, 0
0xe74:      e8 f7 f9 ff ff                     	call 0x870 <printf>
0xe79:      48 83 45 f8 01                     	add qword ptr [rbp - 8], 1
0xe7e:      48 8b 45 f8                        	mov rax, qword ptr [rbp - 8]
0xe82:      48 3b 45 e0                        	cmp rax, qword ptr [rbp - 0x20]
0xe86:      72 cd                              	jb 0xe55 <printBytesLine+0x1a>
0xe88:      48 8d 3d 82 03 00 00               	lea rdi, [rip + 0x382]
0xe8f:      e8 9c f9 ff ff                     	call 0x830 <puts>
0xe94:      90                                 	nop 
0xe95:      c9                                 	leave 
0xe96:      c3                                 	ret 
; function: decodeHexChars at 0xe97 -- 0xf95
0xe97:      55                                 	push rbp
0xe98:      48 89 e5                           	mov rbp, rsp
0xe9b:      48 83 ec 40                        	sub rsp, 0x40
0xe9f:      48 89 7d d8                        	mov qword ptr [rbp - 0x28], rdi
0xea3:      48 89 75 d0                        	mov qword ptr [rbp - 0x30], rsi
0xea7:      48 89 55 c8                        	mov qword ptr [rbp - 0x38], rdx
0xeab:      64 48 8b 04 25 28 00 00 00         	mov rax, qword ptr fs:[0x28]
0xeb4:      48 89 45 f8                        	mov qword ptr [rbp - 8], rax
0xeb8:      31 c0                              	xor eax, eax
0xeba:      48 c7 45 f0 00 00 00 00            	mov qword ptr [rbp - 0x10], 0
0xec2:      eb 40                              	jmp 0xf04 <decodeHexChars+0x6d>
0xec4:      48 8b 45 f0                        	mov rax, qword ptr [rbp - 0x10]
0xec8:      48 8d 14 00                        	lea rdx, [rax + rax]
0xecc:      48 8b 45 c8                        	mov rax, qword ptr [rbp - 0x38]
0xed0:      48 8d 0c 02                        	lea rcx, [rdx + rax]
0xed4:      48 8d 45 ec                        	lea rax, [rbp - 0x14]
0xed8:      48 89 c2                           	mov rdx, rax
0xedb:      48 8d 35 2a 03 00 00               	lea rsi, [rip + 0x32a]
0xee2:      48 89 cf                           	mov rdi, rcx
0xee5:      b8 00 00 00 00                     	mov eax, 0
0xeea:      e8 e1 f9 ff ff                     	call 0x8d0 <sscanf>
0xeef:      8b 55 ec                           	mov edx, dword ptr [rbp - 0x14]
0xef2:      48 8b 4d d8                        	mov rcx, qword ptr [rbp - 0x28]
0xef6:      48 8b 45 f0                        	mov rax, qword ptr [rbp - 0x10]
0xefa:      48 01 c8                           	add rax, rcx
0xefd:      88 10                              	mov byte ptr [rax], dl
0xeff:      48 83 45 f0 01                     	add qword ptr [rbp - 0x10], 1
0xf04:      48 8b 45 f0                        	mov rax, qword ptr [rbp - 0x10]
0xf08:      48 3b 45 d0                        	cmp rax, qword ptr [rbp - 0x30]
0xf0c:      73 6d                              	jae 0xf7b <decodeHexChars+0xe4>
0xf0e:      e8 dd f9 ff ff                     	call 0x8f0 <__ctype_b_loc>
0xf13:      48 8b 00                           	mov rax, qword ptr [rax]
0xf16:      48 8b 55 f0                        	mov rdx, qword ptr [rbp - 0x10]
0xf1a:      48 8d 0c 12                        	lea rcx, [rdx + rdx]
0xf1e:      48 8b 55 c8                        	mov rdx, qword ptr [rbp - 0x38]
0xf22:      48 01 ca                           	add rdx, rcx
0xf25:      0f b6 12                           	movzx edx, byte ptr [rdx]
0xf28:      48 0f be d2                        	movsx rdx, dl
0xf2c:      48 01 d2                           	add rdx, rdx
0xf2f:      48 01 d0                           	add rax, rdx
0xf32:      0f b7 00                           	movzx eax, word ptr [rax]
0xf35:      0f b7 c0                           	movzx eax, ax
0xf38:      25 00 10 00 00                     	and eax, 0x1000
0xf3d:      85 c0                              	test eax, eax
0xf3f:      74 3a                              	je 0xf7b <decodeHexChars+0xe4>
0xf41:      e8 aa f9 ff ff                     	call 0x8f0 <__ctype_b_loc>
0xf46:      48 8b 00                           	mov rax, qword ptr [rax]
0xf49:      48 8b 55 f0                        	mov rdx, qword ptr [rbp - 0x10]
0xf4d:      48 01 d2                           	add rdx, rdx
0xf50:      48 8d 4a 01                        	lea rcx, [rdx + 1]
0xf54:      48 8b 55 c8                        	mov rdx, qword ptr [rbp - 0x38]
0xf58:      48 01 ca                           	add rdx, rcx
0xf5b:      0f b6 12                           	movzx edx, byte ptr [rdx]
0xf5e:      48 0f be d2                        	movsx rdx, dl
0xf62:      48 01 d2                           	add rdx, rdx
0xf65:      48 01 d0                           	add rax, rdx
0xf68:      0f b7 00                           	movzx eax, word ptr [rax]
0xf6b:      0f b7 c0                           	movzx eax, ax
0xf6e:      25 00 10 00 00                     	and eax, 0x1000
0xf73:      85 c0                              	test eax, eax
0xf75:      0f 85 49 ff ff ff                  	jne 0xec4 <decodeHexChars+0x2d>
0xf7b:      48 8b 45 f0                        	mov rax, qword ptr [rbp - 0x10]
0xf7f:      48 8b 75 f8                        	mov rsi, qword ptr [rbp - 8]
0xf83:      64 48 33 34 25 28 00 00 00         	xor rsi, qword ptr fs:[0x28]
0xf8c:      74 05                              	je 0xf93 <decodeHexChars+0xfc>
0xf8e:      e8 cd f8 ff ff                     	call 0x860 <__stack_chk_fail>
0xf93:      c9                                 	leave 
0xf94:      c3                                 	ret 
; function: decodeHexWChars at 0xf95 -- 0x106e
0xf95:      55                                 	push rbp
0xf96:      48 89 e5                           	mov rbp, rsp
0xf99:      48 83 ec 40                        	sub rsp, 0x40
0xf9d:      48 89 7d d8                        	mov qword ptr [rbp - 0x28], rdi
0xfa1:      48 89 75 d0                        	mov qword ptr [rbp - 0x30], rsi
0xfa5:      48 89 55 c8                        	mov qword ptr [rbp - 0x38], rdx
0xfa9:      64 48 8b 04 25 28 00 00 00         	mov rax, qword ptr fs:[0x28]
0xfb2:      48 89 45 f8                        	mov qword ptr [rbp - 8], rax
0xfb6:      31 c0                              	xor eax, eax
0xfb8:      48 c7 45 f0 00 00 00 00            	mov qword ptr [rbp - 0x10], 0
0xfc0:      eb 44                              	jmp 0x1006 <decodeHexWChars+0x71>
0xfc2:      48 8b 45 f0                        	mov rax, qword ptr [rbp - 0x10]
0xfc6:      48 8d 14 c5 00 00 00 00            	lea rdx, [rax*8]
0xfce:      48 8b 45 c8                        	mov rax, qword ptr [rbp - 0x38]
0xfd2:      48 8d 0c 02                        	lea rcx, [rdx + rax]
0xfd6:      48 8d 45 ec                        	lea rax, [rbp - 0x14]
0xfda:      48 89 c2                           	mov rdx, rax
0xfdd:      48 8d 35 30 02 00 00               	lea rsi, [rip + 0x230]
0xfe4:      48 89 cf                           	mov rdi, rcx
0xfe7:      b8 00 00 00 00                     	mov eax, 0
0xfec:      e8 af f8 ff ff                     	call 0x8a0 <swscanf>
0xff1:      8b 55 ec                           	mov edx, dword ptr [rbp - 0x14]
0xff4:      48 8b 4d d8                        	mov rcx, qword ptr [rbp - 0x28]
0xff8:      48 8b 45 f0                        	mov rax, qword ptr [rbp - 0x10]
0xffc:      48 01 c8                           	add rax, rcx
0xfff:      88 10                              	mov byte ptr [rax], dl
0x1001:     48 83 45 f0 01                     	add qword ptr [rbp - 0x10], 1
0x1006:     48 8b 45 f0                        	mov rax, qword ptr [rbp - 0x10]
0x100a:     48 3b 45 d0                        	cmp rax, qword ptr [rbp - 0x30]
0x100e:     73 44                              	jae 0x1054 <decodeHexWChars+0xbf>
0x1010:     48 8b 45 f0                        	mov rax, qword ptr [rbp - 0x10]
0x1014:     48 8d 14 c5 00 00 00 00            	lea rdx, [rax*8]
0x101c:     48 8b 45 c8                        	mov rax, qword ptr [rbp - 0x38]
0x1020:     48 01 d0                           	add rax, rdx
0x1023:     8b 00                              	mov eax, dword ptr [rax]
0x1025:     89 c7                              	mov edi, eax
0x1027:     e8 14 f8 ff ff                     	call 0x840 <iswxdigit>
0x102c:     85 c0                              	test eax, eax
0x102e:     74 24                              	je 0x1054 <decodeHexWChars+0xbf>
0x1030:     48 8b 45 f0                        	mov rax, qword ptr [rbp - 0x10]
0x1034:     48 c1 e0 03                        	shl rax, 3
0x1038:     48 8d 50 04                        	lea rdx, [rax + 4]
0x103c:     48 8b 45 c8                        	mov rax, qword ptr [rbp - 0x38]
0x1040:     48 01 d0                           	add rax, rdx
0x1043:     8b 00                              	mov eax, dword ptr [rax]
0x1045:     89 c7                              	mov edi, eax
0x1047:     e8 f4 f7 ff ff                     	call 0x840 <iswxdigit>
0x104c:     85 c0                              	test eax, eax
0x104e:     0f 85 6e ff ff ff                  	jne 0xfc2 <decodeHexWChars+0x2d>
0x1054:     48 8b 45 f0                        	mov rax, qword ptr [rbp - 0x10]
0x1058:     48 8b 75 f8                        	mov rsi, qword ptr [rbp - 8]
0x105c:     64 48 33 34 25 28 00 00 00         	xor rsi, qword ptr fs:[0x28]
0x1065:     74 05                              	je 0x106c <decodeHexWChars+0xd7>
0x1067:     e8 f4 f7 ff ff                     	call 0x860 <__stack_chk_fail>
0x106c:     c9                                 	leave 
0x106d:     c3                                 	ret 
; function: globalReturnsTrue at 0x106e -- 0x1079
0x106e:     55                                 	push rbp
0x106f:     48 89 e5                           	mov rbp, rsp
0x1072:     b8 01 00 00 00                     	mov eax, 1
0x1077:     5d                                 	pop rbp
0x1078:     c3                                 	ret 
; function: globalReturnsFalse at 0x1079 -- 0x1084
0x1079:     55                                 	push rbp
0x107a:     48 89 e5                           	mov rbp, rsp
0x107d:     b8 00 00 00 00                     	mov eax, 0
0x1082:     5d                                 	pop rbp
0x1083:     c3                                 	ret 
; function: globalReturnsTrueOrFalse at 0x1084 -- 0x10a2
0x1084:     55                                 	push rbp
0x1085:     48 89 e5                           	mov rbp, rsp
0x1088:     e8 53 f8 ff ff                     	call 0x8e0 <rand>
0x108d:     89 c2                              	mov edx, eax
0x108f:     89 d0                              	mov eax, edx
0x1091:     c1 f8 1f                           	sar eax, 0x1f
0x1094:     c1 e8 1f                           	shr eax, 0x1f
0x1097:     01 c2                              	add edx, eax
0x1099:     83 e2 01                           	and edx, 1
0x109c:     29 c2                              	sub edx, eax
0x109e:     89 d0                              	mov eax, edx
0x10a0:     5d                                 	pop rbp
0x10a1:     c3                                 	ret 
; function: good1 at 0x10a2 -- 0x10a9
0x10a2:     55                                 	push rbp
0x10a3:     48 89 e5                           	mov rbp, rsp
0x10a6:     90                                 	nop 
0x10a7:     5d                                 	pop rbp
0x10a8:     c3                                 	ret 
; function: good2 at 0x10a9 -- 0x10b0
0x10a9:     55                                 	push rbp
0x10aa:     48 89 e5                           	mov rbp, rsp
0x10ad:     90                                 	nop 
0x10ae:     5d                                 	pop rbp
0x10af:     c3                                 	ret 
; function: good3 at 0x10b0 -- 0x10b7
0x10b0:     55                                 	push rbp
0x10b1:     48 89 e5                           	mov rbp, rsp
0x10b4:     90                                 	nop 
0x10b5:     5d                                 	pop rbp
0x10b6:     c3                                 	ret 
; function: good4 at 0x10b7 -- 0x10be
0x10b7:     55                                 	push rbp
0x10b8:     48 89 e5                           	mov rbp, rsp
0x10bb:     90                                 	nop 
0x10bc:     5d                                 	pop rbp
0x10bd:     c3                                 	ret 
; function: good5 at 0x10be -- 0x10c5
0x10be:     55                                 	push rbp
0x10bf:     48 89 e5                           	mov rbp, rsp
0x10c2:     90                                 	nop 
0x10c3:     5d                                 	pop rbp
0x10c4:     c3                                 	ret 
; function: good6 at 0x10c5 -- 0x10cc
0x10c5:     55                                 	push rbp
0x10c6:     48 89 e5                           	mov rbp, rsp
0x10c9:     90                                 	nop 
0x10ca:     5d                                 	pop rbp
0x10cb:     c3                                 	ret 
; function: good7 at 0x10cc -- 0x10d3
0x10cc:     55                                 	push rbp
0x10cd:     48 89 e5                           	mov rbp, rsp
0x10d0:     90                                 	nop 
0x10d1:     5d                                 	pop rbp
0x10d2:     c3                                 	ret 
; function: good8 at 0x10d3 -- 0x10da
0x10d3:     55                                 	push rbp
0x10d4:     48 89 e5                           	mov rbp, rsp
0x10d7:     90                                 	nop 
0x10d8:     5d                                 	pop rbp
0x10d9:     c3                                 	ret 
; function: good9 at 0x10da -- 0x10e1
0x10da:     55                                 	push rbp
0x10db:     48 89 e5                           	mov rbp, rsp
0x10de:     90                                 	nop 
0x10df:     5d                                 	pop rbp
0x10e0:     c3                                 	ret 
; function: bad1 at 0x10e1 -- 0x10e8
0x10e1:     55                                 	push rbp
0x10e2:     48 89 e5                           	mov rbp, rsp
0x10e5:     90                                 	nop 
0x10e6:     5d                                 	pop rbp
0x10e7:     c3                                 	ret 
; function: bad2 at 0x10e8 -- 0x10ef
0x10e8:     55                                 	push rbp
0x10e9:     48 89 e5                           	mov rbp, rsp
0x10ec:     90                                 	nop 
0x10ed:     5d                                 	pop rbp
0x10ee:     c3                                 	ret 
; function: bad3 at 0x10ef -- 0x10f6
0x10ef:     55                                 	push rbp
0x10f0:     48 89 e5                           	mov rbp, rsp
0x10f3:     90                                 	nop 
0x10f4:     5d                                 	pop rbp
0x10f5:     c3                                 	ret 
; function: bad4 at 0x10f6 -- 0x10fd
0x10f6:     55                                 	push rbp
0x10f7:     48 89 e5                           	mov rbp, rsp
0x10fa:     90                                 	nop 
0x10fb:     5d                                 	pop rbp
0x10fc:     c3                                 	ret 
; function: bad5 at 0x10fd -- 0x1104
0x10fd:     55                                 	push rbp
0x10fe:     48 89 e5                           	mov rbp, rsp
0x1101:     90                                 	nop 
0x1102:     5d                                 	pop rbp
0x1103:     c3                                 	ret 
; function: bad6 at 0x1104 -- 0x110b
0x1104:     55                                 	push rbp
0x1105:     48 89 e5                           	mov rbp, rsp
0x1108:     90                                 	nop 
0x1109:     5d                                 	pop rbp
0x110a:     c3                                 	ret 
; function: bad7 at 0x110b -- 0x1112
0x110b:     55                                 	push rbp
0x110c:     48 89 e5                           	mov rbp, rsp
0x110f:     90                                 	nop 
0x1110:     5d                                 	pop rbp
0x1111:     c3                                 	ret 
; function: bad8 at 0x1112 -- 0x1119
0x1112:     55                                 	push rbp
0x1113:     48 89 e5                           	mov rbp, rsp
0x1116:     90                                 	nop 
0x1117:     5d                                 	pop rbp
0x1118:     c3                                 	ret 
; function: bad9 at 0x1119 -- 0x1120
0x1119:     55                                 	push rbp
0x111a:     48 89 e5                           	mov rbp, rsp
0x111d:     90                                 	nop 
0x111e:     5d                                 	pop rbp
0x111f:     c3                                 	ret 
; function: __libc_csu_init at 0x1120 -- 0x1185
0x1120:     41 57                              	push r15
0x1122:     41 56                              	push r14
0x1124:     49 89 d7                           	mov r15, rdx
0x1127:     41 55                              	push r13
0x1129:     41 54                              	push r12
0x112b:     4c 8d 25 26 0c 20 00               	lea r12, [rip + 0x200c26]
0x1132:     55                                 	push rbp
0x1133:     48 8d 2d 26 0c 20 00               	lea rbp, [rip + 0x200c26]
0x113a:     53                                 	push rbx
0x113b:     41 89 fd                           	mov r13d, edi
0x113e:     49 89 f6                           	mov r14, rsi
0x1141:     4c 29 e5                           	sub rbp, r12
0x1144:     48 83 ec 08                        	sub rsp, 8
0x1148:     48 c1 fd 03                        	sar rbp, 3
0x114c:     e8 af f6 ff ff                     	call 0x800 <_init>
0x1151:     48 85 ed                           	test rbp, rbp
0x1154:     74 20                              	je 0x1176 <__libc_csu_init+0x56>
0x1156:     31 db                              	xor ebx, ebx
0x1158:     0f 1f 84 00 00 00 00 00            	nop dword ptr [rax + rax]
0x1160:     4c 89 fa                           	mov rdx, r15
0x1163:     4c 89 f6                           	mov rsi, r14
0x1166:     44 89 ef                           	mov edi, r13d
0x1169:     41 ff 14 dc                        	call qword ptr [r12 + rbx*8]
0x116d:     48 83 c3 01                        	add rbx, 1
0x1171:     48 39 dd                           	cmp rbp, rbx
0x1174:     75 ea                              	jne 0x1160 <__libc_csu_init+0x40>
0x1176:     48 83 c4 08                        	add rsp, 8
0x117a:     5b                                 	pop rbx
0x117b:     5d                                 	pop rbp
0x117c:     41 5c                              	pop r12
0x117e:     41 5d                              	pop r13
0x1180:     41 5e                              	pop r14
0x1182:     41 5f                              	pop r15
0x1184:     c3                                 	ret 
; data inside code section at 0x1185 -- 0x1190
0x1185:     90 66 2e 0f 1f 84 00 00  00 00 00                  |.f.........     |
; function: __libc_csu_fini at 0x1190 -- 0x1192
0x1190:     f3 c3                              	ret 
; section: .fini
; function: _fini at 0x1194 -- 0x119d
0x1194:     48 83 ec 08                        	sub rsp, 8
0x1198:     48 83 c4 08                        	add rsp, 8
0x119c:     c3                                 	ret 

;;
;; Data Segment
;;

; section: .interp
0x238:      2f 6c 69 62 36 34 2f 6c  64 2d 6c 69 6e 75 78 2d   |/lib64/ld-linux-|
0x248:      78 38 36 2d 36 34 2e 73  6f 2e 32 00 04            |x86-64.so.2..   |
; section: .gnu.hash
0x298:      01 00 00 00 01 00 00 00  01 00 00 00 00 00 00 00   |................|
0x2a8:      00 00 00 00 00 00 00 00  00 00 00 00 ??            |............?   |
; section: .dynsym
0x2b8:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2c8:      00 00 00 00 00 00 00 00  c6 00 00 00 20 00 00 00   |............ ...|
0x2d8:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2e8:      21 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |!...............|
0x2f8:      00 00 00 00 00 00 00 00  69 00 00 00 12 00 00 00   |........i.......|
0x308:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x318:      4d 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |M...............|
0x328:      00 00 00 00 00 00 00 00  2b 00 00 00 12 00 00 00   |........+.......|
0x338:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x348:      83 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x358:      00 00 00 00 00 00 00 00  54 00 00 00 12 00 00 00   |........T.......|
0x368:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x378:      8a 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x388:      00 00 00 00 00 00 00 00  0b 00 00 00 12 00 00 00   |................|
0x398:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3a8:      3c 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |<...............|
0x3b8:      00 00 00 00 00 00 00 00  e2 00 00 00 20 00 00 00   |............ ...|
0x3c8:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3d8:      26 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |&...............|
0x3e8:      00 00 00 00 00 00 00 00  82 00 00 00 12 00 00 00   |................|
0x3f8:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x408:      11 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x418:      00 00 00 00 00 00 00 00  f1 00 00 00 20 00 00 00   |............ ...|
0x428:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x438:      73 00 00 00 22 00 00 00  00 00 00 00 00 00 00 00   |s..."...........|
0x448:      00 00 00 00 00 00 00 00  0c 00 00 00 12 00 00 00   |................|
0x458:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x468:      5b 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |[...............|
0x478:      00 00 00 00 00 00 00 00  00                        |.........       |
; section: .dynstr
0x480:      00 6c 69 62 63 2e 73 6f  2e 36 00 73 72 61 6e 64   |.libc.so.6.srand|
0x490:      00 5f 5f 69 73 6f 63 39  39 5f 73 73 63 61 6e 66   |.__isoc99_sscanf|
0x4a0:      00 70 75 74 73 00 74 69  6d 65 00 5f 5f 73 74 61   |.puts.time.__sta|
0x4b0:      63 6b 5f 63 68 6b 5f 66  61 69 6c 00 5f 5f 69 73   |ck_chk_fail.__is|
0x4c0:      6f 63 39 39 5f 73 77 73  63 61 6e 66 00 73 74 72   |oc99_swscanf.str|
0x4d0:      6c 65 6e 00 6d 65 6d 73  65 74 00 5f 5f 63 74 79   |len.memset.__cty|
0x4e0:      70 65 5f 62 5f 6c 6f 63  00 69 73 77 78 64 69 67   |pe_b_loc.iswxdig|
0x4f0:      69 74 00 5f 5f 63 78 61  5f 66 69 6e 61 6c 69 7a   |it.__cxa_finaliz|
0x500:      65 00 77 70 72 69 6e 74  66 00 5f 5f 6c 69 62 63   |e.wprintf.__libc|
0x510:      5f 73 74 61 72 74 5f 6d  61 69 6e 00 47 4c 49 42   |_start_main.GLIB|
0x520:      43 5f 32 2e 33 00 47 4c  49 42 43 5f 32 2e 37 00   |C_2.3.GLIBC_2.7.|
0x530:      47 4c 49 42 43 5f 32 2e  34 00 47 4c 49 42 43 5f   |GLIBC_2.4.GLIBC_|
0x540:      32 2e 32 2e 35 00 5f 49  54 4d 5f 64 65 72 65 67   |2.2.5._ITM_dereg|
0x550:      69 73 74 65 72 54 4d 43  6c 6f 6e 65 54 61 62 6c   |isterTMCloneTabl|
0x560:      65 00 5f 5f 67 6d 6f 6e  5f 73 74 61 72 74 5f 5f   |e.__gmon_start__|
0x570:      00 5f 49 54 4d 5f 72 65  67 69 73 74 65 72 54 4d   |._ITM_registerTM|
0x580:      43 6c 6f 6e 65 54 61 62  6c 65 00 ??               |CloneTable.?    |
; section: .gnu.version
0x58c:      00 00 00 00 02 00 02 00  02 00 03 00 02 00 02 00   |................|
0x59c:      02 00 02 00 04 00 00 00  02 00 02 00 04 00 00 00   |................|
0x5ac:      02 00 02 00 05 00 ??                               |......?         |
; section: .gnu.version_r
0x5b8:      01 00 04 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x5c8:      13 69 69 0d 00 00 05 00  9c 00 00 00 10 00 00 00   |.ii.............|
0x5d8:      17 69 69 0d 00 00 04 00  a6 00 00 00 10 00 00 00   |.ii.............|
0x5e8:      14 69 69 0d 00 00 03 00  b0 00 00 00 10 00 00 00   |.ii.............|
0x5f8:      75 1a 69 09 00 00 02 00  ba 00 00 00 00 00 00 00   |u.i.............|
0x608:      58                                                 |X               |
; section: .rela.dyn
0x608:      58 1d 20 00 00 00 00 00  08 00 00 00 00 00 00 00   |X. .............|
0x618:      10 0a 00 00 00 00 00 00  60 1d 20 00 00 00 00 00   |........`. .....|
0x628:      08 00 00 00 00 00 00 00  d0 09 00 00 00 00 00 00   |................|
0x638:      08 20 20 00 00 00 00 00  08 00 00 00 00 00 00 00   |.  .............|
0x648:      08 20 20 00 00 00 00 00  d8 1f 20 00 00 00 00 00   |.  ....... .....|
0x658:      06 00 00 00 01 00 00 00  00 00 00 00 00 00 00 00   |................|
0x668:      e0 1f 20 00 00 00 00 00  06 00 00 00 08 00 00 00   |.. .............|
0x678:      00 00 00 00 00 00 00 00  e8 1f 20 00 00 00 00 00   |.......... .....|
0x688:      06 00 00 00 0b 00 00 00  00 00 00 00 00 00 00 00   |................|
0x698:      f0 1f 20 00 00 00 00 00  06 00 00 00 0f 00 00 00   |.. .............|
0x6a8:      00 00 00 00 00 00 00 00  f8 1f 20 00 00 00 00 00   |.......... .....|
0x6b8:      06 00 00 00 10 00 00 00  00 00 00 00 00 00 00 00   |................|
0x6c8:      70                                                 |p               |
; section: .rela.plt
0x6c8:      70 1f 20 00 00 00 00 00  07 00 00 00 02 00 00 00   |p. .............|
0x6d8:      00 00 00 00 00 00 00 00  78 1f 20 00 00 00 00 00   |........x. .....|
0x6e8:      07 00 00 00 03 00 00 00  00 00 00 00 00 00 00 00   |................|
0x6f8:      80 1f 20 00 00 00 00 00  07 00 00 00 04 00 00 00   |.. .............|
0x708:      00 00 00 00 00 00 00 00  88 1f 20 00 00 00 00 00   |.......... .....|
0x718:      07 00 00 00 05 00 00 00  00 00 00 00 00 00 00 00   |................|
0x728:      90 1f 20 00 00 00 00 00  07 00 00 00 06 00 00 00   |.. .............|
0x738:      00 00 00 00 00 00 00 00  98 1f 20 00 00 00 00 00   |.......... .....|
0x748:      07 00 00 00 07 00 00 00  00 00 00 00 00 00 00 00   |................|
0x758:      a0 1f 20 00 00 00 00 00  07 00 00 00 09 00 00 00   |.. .............|
0x768:      00 00 00 00 00 00 00 00  a8 1f 20 00 00 00 00 00   |.......... .....|
0x778:      07 00 00 00 0a 00 00 00  00 00 00 00 00 00 00 00   |................|
0x788:      b0 1f 20 00 00 00 00 00  07 00 00 00 0c 00 00 00   |.. .............|
0x798:      00 00 00 00 00 00 00 00  b8 1f 20 00 00 00 00 00   |.......... .....|
0x7a8:      07 00 00 00 0d 00 00 00  00 00 00 00 00 00 00 00   |................|
0x7b8:      c0 1f 20 00 00 00 00 00  07 00 00 00 0e 00 00 00   |.. .............|
0x7c8:      00 00 00 00 00 00 00 00  c8 1f 20 00 00 00 00 00   |.......... .....|
0x7d8:      07 00 00 00 11 00 00 00  00 00 00 00 00 00 00 00   |................|
0x7e8:      d0 1f 20 00 00 00 00 00  07 00 00 00 12 00 00 00   |.. .............|
0x7f8:      00 00 00 00 00 00 00 00  48                        |........H       |
; section: .rodata
0x11a0:     01 00 02 00                                        |....            |
0x11a4:     43 61 6c 6c 69 6e 67 20  62 61 64 28 29 2e 2e 2e   |Calling bad()...|   "Calling bad()..."
0x11b4:     00                                                 |.               |
0x11b5:     46 69 6e 69 73 68 65 64  20 62 61 64 28 29 00      |Finished bad(). |   "Finished bad()"
0x11c4:     25 00 00 00 6c 00 00 00  73 00 00 00 0a 00 00 00   |%...l...s.......|   L"%ls\n"
0x11d4:     00 00 00 00                                        |....            |
0x11d8:     25 64 0a 00                                        |%d..            |   "%d\n"
0x11dc:     25 68 64 0a 00                                     |%hd..           |   "%hd\n"
0x11e1:     25 66 0a 00                                        |%f..            |   "%f\n"
0x11e5:     25 6c 64 0a 00                                     |%ld..           |   "%ld\n"
0x11ea:     25 7a 75 0a 00                                     |%zu..           |   "%zu\n"
0x11ef:     25 30 32 78 0a 00                                  |%02x..          |   "%02x\n"
0x11f5:     25 6c 73 0a 00                                     |%ls..           |   "%ls\n"
0x11fa:     25 75 0a 00                                        |%u..            |   "%u\n"
0x11fe:     25 67 0a 00                                        |%g..            |   "%g\n"
0x1202:     25 64 20 2d 2d 20 25 64  0a 00                     |%d -- %d..      |   "%d -- %d\n"
0x120c:     25 30 32 78 00                                     |%02x.           |   "%02x"
0x1211:     00 00 00                                           |...             |
0x1214:     25 00 00 00 30 00 00 00  32 00 00 00 78 00 00 00   |%...0...2...x...|   L"%02x"
0x1224:     00 00 00 00                                        |....            |
0x1228:     01 00 00 00 00 00 00 00  05 00 00 00 01            |.............   |
; section: .eh_frame_hdr
0x1234:     01 1b 03 3b 70 01 00 00  2d 00 00 00 ec f5 ff ff   |...;p...-.......|
0x1244:     bc 01 00 00 cc f6 ff ff  e4 01 00 00 dc f6 ff ff   |................|
0x1254:     8c 01 00 00 e6 f7 ff ff  fc 01 00 00 62 f9 ff ff   |............b...|
0x1264:     1c 02 00 00 ab f9 ff ff  3c 02 00 00 cd f9 ff ff   |........<.......|
0x1274:     5c 02 00 00 fb f9 ff ff  7c 02 00 00 1f fa ff ff   |\.......|.......|
0x1284:     9c 02 00 00 47 fa ff ff  bc 02 00 00 6d fa ff ff   |....G.......m...|
0x1294:     dc 02 00 00 94 fa ff ff  fc 02 00 00 bb fa ff ff   |................|
0x12a4:     1c 03 00 00 e2 fa ff ff  3c 03 00 00 09 fb ff ff   |........<.......|
0x12b4:     5c 03 00 00 5f fb ff ff  7c 03 00 00 83 fb ff ff   |\..._...|.......|
0x12c4:     9c 03 00 00 aa fb ff ff  bc 03 00 00 d8 fb ff ff   |................|
0x12d4:     dc 03 00 00 07 fc ff ff  fc 03 00 00 63 fc ff ff   |............c...|
0x12e4:     1c 04 00 00 61 fd ff ff  3c 04 00 00 3a fe ff ff   |....a...<...:...|
0x12f4:     5c 04 00 00 45 fe ff ff  7c 04 00 00 50 fe ff ff   |\...E...|...P...|
0x1304:     9c 04 00 00 6e fe ff ff  bc 04 00 00 75 fe ff ff   |....n.......u...|
0x1314:     dc 04 00 00 7c fe ff ff  fc 04 00 00 83 fe ff ff   |....|...........|
0x1324:     1c 05 00 00 8a fe ff ff  3c 05 00 00 91 fe ff ff   |........<.......|
0x1334:     5c 05 00 00 98 fe ff ff  7c 05 00 00 9f fe ff ff   |\.......|.......|
0x1344:     9c 05 00 00 a6 fe ff ff  bc 05 00 00 ad fe ff ff   |................|
0x1354:     dc 05 00 00 b4 fe ff ff  fc 05 00 00 bb fe ff ff   |................|
0x1364:     1c 06 00 00 c2 fe ff ff  3c 06 00 00 c9 fe ff ff   |........<.......|
0x1374:     5c 06 00 00 d0 fe ff ff  7c 06 00 00 d7 fe ff ff   |\.......|.......|
0x1384:     9c 06 00 00 de fe ff ff  bc 06 00 00 e5 fe ff ff   |................|
0x1394:     dc 06 00 00 ec fe ff ff  fc 06 00 00 5c ff ff ff   |............\...|
0x13a4:     44 07 00 00 14                                     |D....           |
; section: .eh_frame
0x13a8:     14 00 00 00 00 00 00 00  01 7a 52 00 01 78 10 01   |.........zR..x..|
0x13b8:     1b 0c 07 08 90 01 07 10  14 00 00 00 1c 00 00 00   |................|
0x13c8:     48 f5 ff ff 2b 00 00 00  00 00 00 00 00 00 00 00   |H...+...........|
0x13d8:     14 00 00 00 00 00 00 00  01 7a 52 00 01 78 10 01   |.........zR..x..|
0x13e8:     1b 0c 07 08 90 01 00 00  24 00 00 00 1c 00 00 00   |........$.......|
0x13f8:     28 f4 ff ff e0 00 00 00  00 0e 10 46 0e 18 4a 0f   |(..........F..J.|
0x1408:     0b 77 08 80 00 3f 1a 3b  2a 33 24 22 00 00 00 00   |.w...?.;*3$"....|
0x1418:     14 00 00 00 44 00 00 00  e0 f4 ff ff 08 00 00 00   |....D...........|
0x1428:     00 00 00 00 00 00 00 00  1c 00 00 00 5c 00 00 00   |............\...|
0x1438:     e2 f5 ff ff 7c 01 00 00  00 41 0e 10 86 02 43 0d   |....|....A....C.|
0x1448:     06 03 77 01 0c 07 08 00  1c 00 00 00 7c 00 00 00   |..w.........|...|
0x1458:     3e f7 ff ff 49 00 00 00  00 41 0e 10 86 02 43 0d   |>...I....A....C.|
0x1468:     06 02 44 0c 07 08 00 00  1c 00 00 00 9c 00 00 00   |..D.............|
0x1478:     67 f7 ff ff 22 00 00 00  00 41 0e 10 86 02 43 0d   |g..."....A....C.|
0x1488:     06 5d 0c 07 08 00 00 00  1c 00 00 00 bc 00 00 00   |.]..............|
0x1498:     69 f7 ff ff 2e 00 00 00  00 41 0e 10 86 02 43 0d   |i........A....C.|
0x14a8:     06 69 0c 07 08 00 00 00  1c 00 00 00 dc 00 00 00   |.i..............|
0x14b8:     77 f7 ff ff 24 00 00 00  00 41 0e 10 86 02 43 0d   |w...$....A....C.|
0x14c8:     06 5f 0c 07 08 00 00 00  1c 00 00 00 fc 00 00 00   |._..............|
0x14d8:     7b f7 ff ff 28 00 00 00  00 41 0e 10 86 02 43 0d   |{...(....A....C.|
0x14e8:     06 63 0c 07 08 00 00 00  1c 00 00 00 1c 01 00 00   |.c..............|
0x14f8:     83 f7 ff ff 26 00 00 00  00 41 0e 10 86 02 43 0d   |....&....A....C.|
0x1508:     06 61 0c 07 08 00 00 00  1c 00 00 00 3c 01 00 00   |.a..........<...|
0x1518:     89 f7 ff ff 27 00 00 00  00 41 0e 10 86 02 43 0d   |....'....A....C.|
0x1528:     06 62 0c 07 08 00 00 00  1c 00 00 00 5c 01 00 00   |.b..........\...|
0x1538:     90 f7 ff ff 27 00 00 00  00 41 0e 10 86 02 43 0d   |....'....A....C.|
0x1548:     06 62 0c 07 08 00 00 00  1c 00 00 00 7c 01 00 00   |.b..........|...|
0x1558:     97 f7 ff ff 27 00 00 00  00 41 0e 10 86 02 43 0d   |....'....A....C.|
0x1568:     06 62 0c 07 08 00 00 00  1c 00 00 00 9c 01 00 00   |.b..............|
0x1578:     9e f7 ff ff 27 00 00 00  00 41 0e 10 86 02 43 0d   |....'....A....C.|
0x1588:     06 62 0c 07 08 00 00 00  1c 00 00 00 bc 01 00 00   |.b..............|
0x1598:     a5 f7 ff ff 56 00 00 00  00 41 0e 10 86 02 43 0d   |....V....A....C.|
0x15a8:     06 02 51 0c 07 08 00 00  1c 00 00 00 dc 01 00 00   |..Q.............|
0x15b8:     db f7 ff ff 24 00 00 00  00 41 0e 10 86 02 43 0d   |....$....A....C.|
0x15c8:     06 5f 0c 07 08 00 00 00  1c 00 00 00 fc 01 00 00   |._..............|
0x15d8:     df f7 ff ff 27 00 00 00  00 41 0e 10 86 02 43 0d   |....'....A....C.|
0x15e8:     06 62 0c 07 08 00 00 00  1c 00 00 00 1c 02 00 00   |.b..............|
0x15f8:     e6 f7 ff ff 2e 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x1608:     06 69 0c 07 08 00 00 00  1c 00 00 00 3c 02 00 00   |.i..........<...|
0x1618:     f4 f7 ff ff 2f 00 00 00  00 41 0e 10 86 02 43 0d   |..../....A....C.|
0x1628:     06 6a 0c 07 08 00 00 00  1c 00 00 00 5c 02 00 00   |.j..........\...|
0x1638:     03 f8 ff ff 5c 00 00 00  00 41 0e 10 86 02 43 0d   |....\....A....C.|
0x1648:     06 02 57 0c 07 08 00 00  1c 00 00 00 7c 02 00 00   |..W.........|...|
0x1658:     3f f8 ff ff fe 00 00 00  00 41 0e 10 86 02 43 0d   |?........A....C.|
0x1668:     06 02 f9 0c 07 08 00 00  1c 00 00 00 9c 02 00 00   |................|
0x1678:     1d f9 ff ff d9 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x1688:     06 02 d4 0c 07 08 00 00  1c 00 00 00 bc 02 00 00   |................|
0x1698:     d6 f9 ff ff 0b 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x16a8:     06 46 0c 07 08 00 00 00  1c 00 00 00 dc 02 00 00   |.F..............|
0x16b8:     c1 f9 ff ff 0b 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x16c8:     06 46 0c 07 08 00 00 00  1c 00 00 00 fc 02 00 00   |.F..............|
0x16d8:     ac f9 ff ff 1e 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x16e8:     06 59 0c 07 08 00 00 00  1c 00 00 00 1c 03 00 00   |.Y..............|
0x16f8:     aa f9 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x1708:     06 42 0c 07 08 00 00 00  1c 00 00 00 3c 03 00 00   |.B..........<...|
0x1718:     91 f9 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x1728:     06 42 0c 07 08 00 00 00  1c 00 00 00 5c 03 00 00   |.B..........\...|
0x1738:     78 f9 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |x........A....C.|
0x1748:     06 42 0c 07 08 00 00 00  1c 00 00 00 7c 03 00 00   |.B..........|...|
0x1758:     5f f9 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |_........A....C.|
0x1768:     06 42 0c 07 08 00 00 00  1c 00 00 00 9c 03 00 00   |.B..............|
0x1778:     46 f9 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |F........A....C.|
0x1788:     06 42 0c 07 08 00 00 00  1c 00 00 00 bc 03 00 00   |.B..............|
0x1798:     2d f9 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |-........A....C.|
0x17a8:     06 42 0c 07 08 00 00 00  1c 00 00 00 dc 03 00 00   |.B..............|
0x17b8:     14 f9 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x17c8:     06 42 0c 07 08 00 00 00  1c 00 00 00 fc 03 00 00   |.B..............|
0x17d8:     fb f8 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x17e8:     06 42 0c 07 08 00 00 00  1c 00 00 00 1c 04 00 00   |.B..............|
0x17f8:     e2 f8 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x1808:     06 42 0c 07 08 00 00 00  1c 00 00 00 3c 04 00 00   |.B..........<...|
0x1818:     c9 f8 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x1828:     06 42 0c 07 08 00 00 00  1c 00 00 00 5c 04 00 00   |.B..........\...|
0x1838:     b0 f8 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x1848:     06 42 0c 07 08 00 00 00  1c 00 00 00 7c 04 00 00   |.B..........|...|
0x1858:     97 f8 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x1868:     06 42 0c 07 08 00 00 00  1c 00 00 00 9c 04 00 00   |.B..............|
0x1878:     7e f8 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |~........A....C.|
0x1888:     06 42 0c 07 08 00 00 00  1c 00 00 00 bc 04 00 00   |.B..............|
0x1898:     65 f8 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |e........A....C.|
0x18a8:     06 42 0c 07 08 00 00 00  1c 00 00 00 dc 04 00 00   |.B..............|
0x18b8:     4c f8 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |L........A....C.|
0x18c8:     06 42 0c 07 08 00 00 00  1c 00 00 00 fc 04 00 00   |.B..............|
0x18d8:     33 f8 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |3........A....C.|
0x18e8:     06 42 0c 07 08 00 00 00  1c 00 00 00 1c 05 00 00   |.B..............|
0x18f8:     1a f8 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x1908:     06 42 0c 07 08 00 00 00  1c 00 00 00 3c 05 00 00   |.B..........<...|
0x1918:     01 f8 ff ff 07 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x1928:     06 42 0c 07 08 00 00 00  44 00 00 00 5c 05 00 00   |.B......D...\...|
0x1938:     e8 f7 ff ff 65 00 00 00  00 42 0e 10 8f 02 42 0e   |....e....B....B.|
0x1948:     18 8e 03 45 0e 20 8d 04  42 0e 28 8c 05 48 0e 30   |...E. ..B.(..H.0|
0x1958:     86 06 48 0e 38 83 07 4d  0e 40 72 0e 38 41 0e 30   |..H.8..M.@r.8A.0|
0x1968:     41 0e 28 42 0e 20 42 0e  18 42 0e 10 42 0e 08 00   |A.(B. B..B..B...|
0x1978:     10 00 00 00 a4 05 00 00  10 f8 ff ff 02 00 00 00   |................|
0x1988:     00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x201d58:   10 0a 00 00 00 00 00 00  d0                        |.........       |
; section: .fini_array
0x201d60:   d0 09 00 00 00 00 00 00  01                        |.........       |
; section: .dynamic
0x201d68:   01 00 00 00 00 00 00 00  01 00 00 00 00 00 00 00   |................|
0x201d78:   0c 00 00 00 00 00 00 00  00 08 00 00 00 00 00 00   |................|
0x201d88:   0d 00 00 00 00 00 00 00  94 11 00 00 00 00 00 00   |................|
0x201d98:   19 00 00 00 00 00 00 00  58 1d 20 00 00 00 00 00   |........X. .....|
0x201da8:   1b 00 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |................|
0x201db8:   1a 00 00 00 00 00 00 00  60 1d 20 00 00 00 00 00   |........`. .....|
0x201dc8:   1c 00 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |................|
0x201dd8:   f5 fe ff 6f 00 00 00 00  98 02 00 00 00 00 00 00   |...o............|
0x201de8:   05 00 00 00 00 00 00 00  80 04 00 00 00 00 00 00   |................|
0x201df8:   06 00 00 00 00 00 00 00  b8 02 00 00 00 00 00 00   |................|
0x201e08:   0a 00 00 00 00 00 00 00  0b 01 00 00 00 00 00 00   |................|
0x201e18:   0b 00 00 00 00 00 00 00  18 00 00 00 00 00 00 00   |................|
0x201e28:   15 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x201e38:   03 00 00 00 00 00 00 00  58 1f 20 00 00 00 00 00   |........X. .....|
0x201e48:   02 00 00 00 00 00 00 00  38 01 00 00 00 00 00 00   |........8.......|
0x201e58:   14 00 00 00 00 00 00 00  07 00 00 00 00 00 00 00   |................|
0x201e68:   17 00 00 00 00 00 00 00  c8 06 00 00 00 00 00 00   |................|
0x201e78:   07 00 00 00 00 00 00 00  08 06 00 00 00 00 00 00   |................|
0x201e88:   08 00 00 00 00 00 00 00  c0 00 00 00 00 00 00 00   |................|
0x201e98:   09 00 00 00 00 00 00 00  18 00 00 00 00 00 00 00   |................|
0x201ea8:   1e 00 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |................|
0x201eb8:   fb ff ff 6f 00 00 00 00  01 00 00 08 00 00 00 00   |...o............|
0x201ec8:   fe ff ff 6f 00 00 00 00  b8 05 00 00 00 00 00 00   |...o............|
0x201ed8:   ff ff ff 6f 00 00 00 00  01 00 00 00 00 00 00 00   |...o............|
0x201ee8:   f0 ff ff 6f 00 00 00 00  8c 05 00 00 00 00 00 00   |...o............|
0x201ef8:   f9 ff ff 6f 00 00 00 00  03 00 00 00 00 00 00 00   |...o............|
0x201f08:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x201f18:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x201f28:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x201f38:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x201f48:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x201f58:   68                                                 |h               |
; section: .got
0x201f58:   68 1d 20 00 00 00 00 00  00 00 00 00 00 00 00 00   |h. .............|
0x201f68:   00 00 00 00 00 00 00 00  36 08 00 00 00 00 00 00   |........6.......|
0x201f78:   46 08 00 00 00 00 00 00  56 08 00 00 00 00 00 00   |F.......V.......|
0x201f88:   66 08 00 00 00 00 00 00  76 08 00 00 00 00 00 00   |f.......v.......|
0x201f98:   86 08 00 00 00 00 00 00  96 08 00 00 00 00 00 00   |................|
0x201fa8:   a6 08 00 00 00 00 00 00  b6 08 00 00 00 00 00 00   |................|
0x201fb8:   c6 08 00 00 00 00 00 00  d6 08 00 00 00 00 00 00   |................|
0x201fc8:   e6 08 00 00 00 00 00 00  f6 08 00 00 00 00 00 00   |................|
0x201fd8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x201fe8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x201ff8:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .data
0x202000:   00 00 00 00 00 00 00 00  08 20 20 00 00 00 00 00   |.........  .....|
0x202010:   01 00 00 00 01 00 00 00  05 00 00 00 ??            |............?   |
